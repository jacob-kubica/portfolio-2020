(window.webpackJsonp = window.webpackJsonp || []).push([
  [1],
  {
    0: function (t, e, n) {
      t.exports = n('zUnb');
    },
    '0QMH': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('fXoL'),
        s = n('rB/T');
      function r(t, e) {
        let n;
        t.hot.accept(),
          e()
            .then((t) => (n = t))
            .catch((t) => console.error(t)),
          t.hot.dispose(() => {
            const t = n.injector.get(i.g).components.map((t) => t.location.nativeElement),
              e = Object(s.createNewHosts)(t);
            n.destroy(), e();
          });
      }
    },
    '2QA8': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => ('function' == typeof Symbol ? Symbol('rxSubscriber') : '@@rxSubscriber_' + Math.random()))();
    },
    '2fFW': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      let i = !1;
      const s = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(t) {
          if (t) {
            const t = new Error();
            console.warn(
              'DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + t.stack
            );
          } else i && console.log('RxJS: Back to a better error behavior. Thank you. <3');
          i = t;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return i;
        },
      };
    },
    '3UD+': function (t, e) {
      t.exports = function (t) {
        if (!t.webpackPolyfill) {
          var e = Object.create(t);
          e.children || (e.children = []),
            Object.defineProperty(e, 'loaded', {
              enumerable: !0,
              get: function () {
                return e.l;
              },
            }),
            Object.defineProperty(e, 'id', {
              enumerable: !0,
              get: function () {
                return e.i;
              },
            }),
            Object.defineProperty(e, 'exports', { enumerable: !0 }),
            (e.webpackPolyfill = 1);
        }
        return e;
      };
    },
    '5+tZ': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return l;
      });
      var i = n('ZUHj'),
        s = n('l7GE'),
        r = n('51Dv'),
        o = n('lJxs'),
        a = n('Cfvw');
      function l(t, e, n = Number.POSITIVE_INFINITY) {
        return 'function' == typeof e
          ? (i) => i.pipe(l((n, i) => Object(a.a)(t(n, i)).pipe(Object(o.a)((t, s) => e(n, t, i, s))), n))
          : ('number' == typeof e && (n = e), (e) => e.lift(new c(t, n)));
      }
      class c {
        constructor(t, e = Number.POSITIVE_INFINITY) {
          (this.project = t), (this.concurrent = e);
        }
        call(t, e) {
          return e.subscribe(new u(t, this.project, this.concurrent));
        }
      }
      class u extends s.a {
        constructor(t, e, n = Number.POSITIVE_INFINITY) {
          super(t),
            (this.project = e),
            (this.concurrent = n),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(t) {
          this.active < this.concurrent ? this._tryNext(t) : this.buffer.push(t);
        }
        _tryNext(t) {
          let e;
          const n = this.index++;
          try {
            e = this.project(t, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.active++, this._innerSub(e, t, n);
        }
        _innerSub(t, e, n) {
          const s = new r.a(this, e, n),
            o = this.destination;
          o.add(s);
          const a = Object(i.a)(this, t, void 0, void 0, s);
          a !== s && o.add(a);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active && 0 === this.buffer.length && this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(t, e, n, i, s) {
          this.destination.next(e);
        }
        notifyComplete(t) {
          const e = this.buffer;
          this.remove(t),
            this.active--,
            e.length > 0
              ? this._next(e.shift())
              : 0 === this.active && this.hasCompleted && this.destination.complete();
        }
      }
    },
    '51Dv': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('7o/Q');
      class s extends i.a {
        constructor(t, e, n) {
          super(), (this.parent = t), (this.outerValue = e), (this.outerIndex = n), (this.index = 0);
        }
        _next(t) {
          this.parent.notifyNext(this.outerValue, t, this.outerIndex, this.index++, this);
        }
        _error(t) {
          this.parent.notifyError(t, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
    },
    '7o/Q': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      });
      var i = n('n6bG'),
        s = n('gRHU'),
        r = n('quSY'),
        o = n('2QA8'),
        a = n('2fFW'),
        l = n('NJ4a');
      class c extends r.a {
        constructor(t, e, n) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = s.a;
              break;
            case 1:
              if (!t) {
                this.destination = s.a;
                break;
              }
              if ('object' == typeof t) {
                t instanceof c
                  ? ((this.syncErrorThrowable = t.syncErrorThrowable), (this.destination = t), t.add(this))
                  : ((this.syncErrorThrowable = !0), (this.destination = new u(this, t)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0), (this.destination = new u(this, t, e, n));
          }
        }
        [o.a]() {
          return this;
        }
        static create(t, e, n) {
          const i = new c(t, e, n);
          return (i.syncErrorThrowable = !1), i;
        }
        next(t) {
          this.isStopped || this._next(t);
        }
        error(t) {
          this.isStopped || ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: t } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = t),
            this
          );
        }
      }
      class u extends c {
        constructor(t, e, n, r) {
          let o;
          super(), (this._parentSubscriber = t);
          let a = this;
          Object(i.a)(e)
            ? (o = e)
            : e &&
              ((o = e.next),
              (n = e.error),
              (r = e.complete),
              e !== s.a &&
                ((a = Object.create(e)),
                Object(i.a)(a.unsubscribe) && this.add(a.unsubscribe.bind(a)),
                (a.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = a),
            (this._next = o),
            (this._error = n),
            (this._complete = r);
        }
        next(t) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: e } = this;
            a.a.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
              ? this.__tryOrSetError(e, this._next, t) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, t);
          }
        }
        error(t) {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this,
              { useDeprecatedSynchronousErrorHandling: n } = a.a;
            if (this._error)
              n && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, this._error, t), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, t), this.unsubscribe());
            else if (e.syncErrorThrowable)
              n ? ((e.syncErrorValue = t), (e.syncErrorThrown = !0)) : Object(l.a)(t), this.unsubscribe();
            else {
              if ((this.unsubscribe(), n)) throw t;
              Object(l.a)(t);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this;
            if (this._complete) {
              const e = () => this._complete.call(this._context);
              a.a.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, e), this.unsubscribe())
                : (this.__tryOrUnsub(e), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(t, e) {
          try {
            t.call(this._context, e);
          } catch (n) {
            if ((this.unsubscribe(), a.a.useDeprecatedSynchronousErrorHandling)) throw n;
            Object(l.a)(n);
          }
        }
        __tryOrSetError(t, e, n) {
          if (!a.a.useDeprecatedSynchronousErrorHandling) throw new Error('bad call');
          try {
            e.call(this._context, n);
          } catch (i) {
            return a.a.useDeprecatedSynchronousErrorHandling
              ? ((t.syncErrorValue = i), (t.syncErrorThrown = !0), !0)
              : (Object(l.a)(i), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: t } = this;
          (this._context = null), (this._parentSubscriber = null), t.unsubscribe();
        }
      }
    },
    '9ppp': function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => {
        function t() {
          return (
            Error.call(this), (this.message = 'object unsubscribed'), (this.name = 'ObjectUnsubscribedError'), this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
    },
    'A/Ql': function (t) {
      t.exports = JSON.parse(
        '{"APP_NAME":"portfolio","About":"About","Hello world !":"Hello world !","Home":"Home","Version":"Version"}'
      );
    },
    AytR: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = {
        production: !0,
        hmr: !1,
        version: '1.0.0',
        serverUrl: 'https://api.chucknorris.io',
        defaultLanguage: 'en-US',
        supportedLanguages: ['en-US'],
      };
    },
    Cfvw: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return h;
      });
      var i = n('HDdC'),
        s = n('SeVD'),
        r = n('quSY'),
        o = n('kJWO'),
        a = n('jZKg'),
        l = n('Lhse'),
        c = n('c2HN'),
        u = n('I55L');
      function h(t, e) {
        return e
          ? (function (t, e) {
              if (null != t) {
                if (
                  (function (t) {
                    return t && 'function' == typeof t[o.a];
                  })(t)
                )
                  return (function (t, e) {
                    return new i.a((n) => {
                      const i = new r.a();
                      return (
                        i.add(
                          e.schedule(() => {
                            const s = t[o.a]();
                            i.add(
                              s.subscribe({
                                next(t) {
                                  i.add(e.schedule(() => n.next(t)));
                                },
                                error(t) {
                                  i.add(e.schedule(() => n.error(t)));
                                },
                                complete() {
                                  i.add(e.schedule(() => n.complete()));
                                },
                              })
                            );
                          })
                        ),
                        i
                      );
                    });
                  })(t, e);
                if (Object(c.a)(t))
                  return (function (t, e) {
                    return new i.a((n) => {
                      const i = new r.a();
                      return (
                        i.add(
                          e.schedule(() =>
                            t.then(
                              (t) => {
                                i.add(
                                  e.schedule(() => {
                                    n.next(t), i.add(e.schedule(() => n.complete()));
                                  })
                                );
                              },
                              (t) => {
                                i.add(e.schedule(() => n.error(t)));
                              }
                            )
                          )
                        ),
                        i
                      );
                    });
                  })(t, e);
                if (Object(u.a)(t)) return Object(a.a)(t, e);
                if (
                  (function (t) {
                    return t && 'function' == typeof t[l.a];
                  })(t) ||
                  'string' == typeof t
                )
                  return (function (t, e) {
                    if (!t) throw new Error('Iterable cannot be null');
                    return new i.a((n) => {
                      const i = new r.a();
                      let s;
                      return (
                        i.add(() => {
                          s && 'function' == typeof s.return && s.return();
                        }),
                        i.add(
                          e.schedule(() => {
                            (s = t[l.a]()),
                              i.add(
                                e.schedule(function () {
                                  if (n.closed) return;
                                  let t, e;
                                  try {
                                    const n = s.next();
                                    (t = n.value), (e = n.done);
                                  } catch (i) {
                                    return void n.error(i);
                                  }
                                  e ? n.complete() : (n.next(t), this.schedule());
                                })
                              );
                          })
                        ),
                        i
                      );
                    });
                  })(t, e);
              }
              throw new TypeError(((null !== t && typeof t) || t) + ' is not observable');
            })(t, e)
          : t instanceof i.a
          ? t
          : new i.a(Object(s.a)(t));
      }
    },
    DH7j: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => Array.isArray || ((t) => t && 'number' == typeof t.length))();
    },
    HDdC: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return c;
      });
      var i = n('7o/Q'),
        s = n('2QA8'),
        r = n('gRHU'),
        o = n('kJWO'),
        a = n('mCNh'),
        l = n('2fFW');
      let c = (() => {
        class t {
          constructor(t) {
            (this._isScalar = !1), t && (this._subscribe = t);
          }
          lift(e) {
            const n = new t();
            return (n.source = this), (n.operator = e), n;
          }
          subscribe(t, e, n) {
            const { operator: o } = this,
              a = (function (t, e, n) {
                if (t) {
                  if (t instanceof i.a) return t;
                  if (t[s.a]) return t[s.a]();
                }
                return t || e || n ? new i.a(t, e, n) : new i.a(r.a);
              })(t, e, n);
            if (
              (a.add(
                o
                  ? o.call(a, this.source)
                  : this.source || (l.a.useDeprecatedSynchronousErrorHandling && !a.syncErrorThrowable)
                  ? this._subscribe(a)
                  : this._trySubscribe(a)
              ),
              l.a.useDeprecatedSynchronousErrorHandling &&
                a.syncErrorThrowable &&
                ((a.syncErrorThrowable = !1), a.syncErrorThrown))
            )
              throw a.syncErrorValue;
            return a;
          }
          _trySubscribe(t) {
            try {
              return this._subscribe(t);
            } catch (e) {
              l.a.useDeprecatedSynchronousErrorHandling && ((t.syncErrorThrown = !0), (t.syncErrorValue = e)),
                (function (t) {
                  for (; t; ) {
                    const { closed: e, destination: n, isStopped: s } = t;
                    if (e || s) return !1;
                    t = n && n instanceof i.a ? n : null;
                  }
                  return !0;
                })(t)
                  ? t.error(e)
                  : console.warn(e);
            }
          }
          forEach(t, e) {
            return new (e = u(e))((e, n) => {
              let i;
              i = this.subscribe(
                (e) => {
                  try {
                    t(e);
                  } catch (s) {
                    n(s), i && i.unsubscribe();
                  }
                },
                n,
                e
              );
            });
          }
          _subscribe(t) {
            const { source: e } = this;
            return e && e.subscribe(t);
          }
          [o.a]() {
            return this;
          }
          pipe(...t) {
            return 0 === t.length ? this : Object(a.b)(t)(this);
          }
          toPromise(t) {
            return new (t = u(t))((t, e) => {
              let n;
              this.subscribe(
                (t) => (n = t),
                (t) => e(t),
                () => t(n)
              );
            });
          }
        }
        return (t.create = (e) => new t(e)), t;
      })();
      function u(t) {
        if ((t || (t = l.a.Promise || Promise), !t)) throw new Error('no Promise impl found');
        return t;
      }
    },
    I55L: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (t) => t && 'number' == typeof t.length && 'function' != typeof t;
    },
    LbVS: function (t, e, n) {
      'use strict';
      function i(t) {
        return t;
      }
      function s() {
        var t = document.querySelectorAll('input');
        return Array.prototype.slice.call(t).map(function (t) {
          return t.value;
        });
      }
      function r(t) {
        var e = document.querySelectorAll('input');
        t &&
          e.length === t.length &&
          (t.forEach(function (t, n) {
            var i = e[n];
            (i.value = t), i.dispatchEvent(new CustomEvent('input', { detail: i.value }));
          }),
          (t.length = 0));
      }
      Object.defineProperty(e, '__esModule', { value: !0 }),
        (e.bootloader = function (t, e, n) {
          'object' == typeof t && ((e = t.before), (n = t.after), (t = t.main)), (e = e || i), (n = n || i);
          var s = document.readyState;
          switch (s) {
            case 'loading':
              document.addEventListener('DOMContentLoaded', function i() {
                document.removeEventListener('DOMContentLoaded', i), n(t(e(s)));
              });
              break;
            case 'interactive':
            case 'complete':
            default:
              n(t(e(s)));
          }
        }),
        (e.createNewHosts = function (t) {
          var e = Array.prototype.map.call(t, function (t) {
            var e = document.createElement(t.tagName),
              n = t.parentNode,
              i = e.style.display;
            return (
              (e.style.display = 'none'),
              n.insertBefore(e, t),
              function () {
                e.style.display = i;
                try {
                  n.removeChild(t);
                } catch (s) {}
              }
            );
          });
          return function () {
            e.forEach(function (t) {
              return t();
            });
          };
        }),
        (e.removeNgStyles = function () {
          var t = document.head,
            e = t.querySelectorAll('style');
          Array.prototype.slice
            .call(e)
            .filter(function (t) {
              return -1 !== t.innerText.indexOf('_ng');
            })
            .map(function (e) {
              return t.removeChild(e);
            });
        }),
        (e.getInputValues = s),
        (e.setInputValues = r),
        (e.createInputTransfer = function () {
          var t = s();
          return function () {
            return r(t);
          };
        });
    },
    Lhse: function (t, e, n) {
      'use strict';
      function i() {
        return 'function' == typeof Symbol && Symbol.iterator ? Symbol.iterator : '@@iterator';
      }
      n.d(e, 'a', function () {
        return s;
      });
      const s = i();
    },
    NJ4a: function (t, e, n) {
      'use strict';
      function i(t) {
        setTimeout(() => {
          throw t;
        }, 0);
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    PsNa: function (t, e, n) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 }),
        (e.MODULE_CONFIG = {
          OnInit: 'hmrOnInit',
          OnStatus: 'hmrOnStatus',
          OnCheck: 'hmrOnCheck',
          OnDecline: 'hmrOnDecline',
          OnDestroy: 'hmrOnDestroy',
          AfterDestroy: 'hmrAfterDestroy',
        }),
        (e.hmrModule = function (t, n, i) {
          return (
            void 0 === i && (i = e.MODULE_CONFIG),
            n.hot &&
              (n.hot.accept(),
              t.instance[e.MODULE_CONFIG.OnInit] && n.hot.data && t.instance[e.MODULE_CONFIG.OnInit](n.hot.data),
              t.instance[e.MODULE_CONFIG.OnStatus] &&
                n.hot.apply(function (n) {
                  t.instance[e.MODULE_CONFIG.OnStatus](n);
                }),
              t.instance[e.MODULE_CONFIG.OnCheck] &&
                n.hot.check(function (n, i) {
                  t.instance[e.MODULE_CONFIG.OnCheck](n, i);
                }),
              t.instance[e.MODULE_CONFIG.OnDecline] &&
                n.hot.decline(function (n) {
                  t.instance[e.MODULE_CONFIG.OnDecline](n);
                }),
              n.hot.dispose(function (n) {
                t.instance[e.MODULE_CONFIG.OnDestroy] && t.instance[e.MODULE_CONFIG.OnDestroy](n),
                  t.destroy(),
                  t.instance[e.MODULE_CONFIG.AfterDestroy] && t.instance[e.MODULE_CONFIG.AfterDestroy](n);
              })),
            t
          );
        });
    },
    SeVD: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return u;
      });
      var i = n('ngJS'),
        s = n('NJ4a'),
        r = n('Lhse'),
        o = n('kJWO'),
        a = n('I55L'),
        l = n('c2HN'),
        c = n('XoHu');
      const u = (t) => {
        if (t && 'function' == typeof t[o.a])
          return (
            (u = t),
            (t) => {
              const e = u[o.a]();
              if ('function' != typeof e.subscribe)
                throw new TypeError('Provided object does not correctly implement Symbol.observable');
              return e.subscribe(t);
            }
          );
        if (Object(a.a)(t)) return Object(i.a)(t);
        if (Object(l.a)(t))
          return (
            (n = t),
            (t) => (
              n
                .then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                )
                .then(null, s.a),
              t
            )
          );
        if (t && 'function' == typeof t[r.a])
          return (
            (e = t),
            (t) => {
              const n = e[r.a]();
              for (;;) {
                let e;
                try {
                  e = n.next();
                } catch (i) {
                  return t.error(i), t;
                }
                if (e.done) {
                  t.complete();
                  break;
                }
                if ((t.next(e.value), t.closed)) break;
              }
              return (
                'function' == typeof n.return &&
                  t.add(() => {
                    n.return && n.return();
                  }),
                t
              );
            }
          );
        {
          const e = Object(c.a)(t) ? 'an invalid object' : `'${t}'`;
          throw new TypeError(
            `You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`
          );
        }
        var e, n, u;
      };
    },
    SpAZ: function (t, e, n) {
      'use strict';
      function i(t) {
        return t;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    VRyK: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('HDdC'),
        s = n('z+Ro'),
        r = n('bHdf'),
        o = n('yCtX');
      function a(...t) {
        let e = Number.POSITIVE_INFINITY,
          n = null,
          a = t[t.length - 1];
        return (
          Object(s.a)(a)
            ? ((n = t.pop()), t.length > 1 && 'number' == typeof t[t.length - 1] && (e = t.pop()))
            : 'number' == typeof a && (e = t.pop()),
          null === n && 1 === t.length && t[0] instanceof i.a ? t[0] : Object(r.a)(e)(Object(o.a)(t, n))
        );
      }
    },
    XNiG: function (t, e, n) {
      'use strict';
      n.d(e, 'b', function () {
        return c;
      }),
        n.d(e, 'a', function () {
          return u;
        });
      var i = n('HDdC'),
        s = n('7o/Q'),
        r = n('quSY'),
        o = n('9ppp'),
        a = n('Ylt2'),
        l = n('2QA8');
      class c extends s.a {
        constructor(t) {
          super(t), (this.destination = t);
        }
      }
      let u = (() => {
        class t extends i.a {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [l.a]() {
            return new c(this);
          }
          lift(t) {
            const e = new h(this, this);
            return (e.operator = t), e;
          }
          next(t) {
            if (this.closed) throw new o.a();
            if (!this.isStopped) {
              const { observers: e } = this,
                n = e.length,
                i = e.slice();
              for (let s = 0; s < n; s++) i[s].next(t);
            }
          }
          error(t) {
            if (this.closed) throw new o.a();
            (this.hasError = !0), (this.thrownError = t), (this.isStopped = !0);
            const { observers: e } = this,
              n = e.length,
              i = e.slice();
            for (let s = 0; s < n; s++) i[s].error(t);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new o.a();
            this.isStopped = !0;
            const { observers: t } = this,
              e = t.length,
              n = t.slice();
            for (let i = 0; i < e; i++) n[i].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(t) {
            if (this.closed) throw new o.a();
            return super._trySubscribe(t);
          }
          _subscribe(t) {
            if (this.closed) throw new o.a();
            return this.hasError
              ? (t.error(this.thrownError), r.a.EMPTY)
              : this.isStopped
              ? (t.complete(), r.a.EMPTY)
              : (this.observers.push(t), new a.a(this, t));
          }
          asObservable() {
            const t = new i.a();
            return (t.source = this), t;
          }
        }
        return (t.create = (t, e) => new h(t, e)), t;
      })();
      class h extends u {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          const { destination: e } = this;
          e && e.next && e.next(t);
        }
        error(t) {
          const { destination: e } = this;
          e && e.error && this.destination.error(t);
        }
        complete() {
          const { destination: t } = this;
          t && t.complete && this.destination.complete();
        }
        _subscribe(t) {
          const { source: e } = this;
          return e ? this.source.subscribe(t) : r.a.EMPTY;
        }
      }
    },
    XoHu: function (t, e, n) {
      'use strict';
      function i(t) {
        return null !== t && 'object' == typeof t;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    Ylt2: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('quSY');
      class s extends i.a {
        constructor(t, e) {
          super(), (this.subject = t), (this.subscriber = e), (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const t = this.subject,
            e = t.observers;
          if (((this.subject = null), !e || 0 === e.length || t.isStopped || t.closed)) return;
          const n = e.indexOf(this.subscriber);
          -1 !== n && e.splice(n, 1);
        }
      }
    },
    ZAI4: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return Pm;
      });
      var i = n('jhN1'),
        s = n('fXoL'),
        r = n('ofXK'),
        o = n('HDdC'),
        a = n('DH7j'),
        l = n('lJxs'),
        c = n('XoHu'),
        u = n('Cfvw');
      function h(...t) {
        if (1 === t.length) {
          const e = t[0];
          if (Object(a.a)(e)) return d(e, null);
          if (Object(c.a)(e) && Object.getPrototypeOf(e) === Object.prototype) {
            const t = Object.keys(e);
            return d(
              t.map((t) => e[t]),
              t
            );
          }
        }
        if ('function' == typeof t[t.length - 1]) {
          const e = t.pop();
          return d((t = 1 === t.length && Object(a.a)(t[0]) ? t[0] : t), null).pipe(Object(l.a)((t) => e(...t)));
        }
        return d(t, null);
      }
      function d(t, e) {
        return new o.a((n) => {
          const i = t.length;
          if (0 === i) return void n.complete();
          const s = new Array(i);
          let r = 0,
            o = 0;
          for (let a = 0; a < i; a++) {
            const l = Object(u.a)(t[a]);
            let c = !1;
            n.add(
              l.subscribe({
                next: (t) => {
                  c || ((c = !0), o++), (s[a] = t);
                },
                error: (t) => n.error(t),
                complete: () => {
                  r++,
                    (r !== i && c) ||
                      (o === i && n.next(e ? e.reduce((t, e, n) => ((t[e] = s[n]), t), {}) : s), n.complete());
                },
              })
            );
          }
        });
      }
      let p = (() => {
          class t {
            constructor() {
              this._accessors = [];
            }
            add(t, e) {
              this._accessors.push([t, e]);
            }
            remove(t) {
              for (let e = this._accessors.length - 1; e >= 0; --e)
                if (this._accessors[e][1] === t) return void this._accessors.splice(e, 1);
            }
            select(t) {
              this._accessors.forEach((e) => {
                this._isSameGroup(e, t) && e[1] !== t && e[1].fireUncheck(t.value);
              });
            }
            _isSameGroup(t, e) {
              return !!t[0].control && t[0]._parent === e._control._parent && t[1].name === e.name;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        m = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        f = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [p],
              imports: [m],
            })),
            t
          );
        })();
      var g = n('z+Ro'),
        b = n('yCtX'),
        _ = n('jZKg');
      function y(...t) {
        let e = t[t.length - 1];
        return Object(g.a)(e) ? (t.pop(), Object(_.a)(t, e)) : Object(b.a)(t);
      }
      var v = n('5+tZ');
      function w(t, e) {
        return Object(v.a)(t, e, 1);
      }
      var x = n('7o/Q');
      function C(t, e) {
        return function (n) {
          return n.lift(new S(t, e));
        };
      }
      class S {
        constructor(t, e) {
          (this.predicate = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new E(t, this.predicate, this.thisArg));
        }
      }
      class E extends x.a {
        constructor(t, e, n) {
          super(t), (this.predicate = e), (this.thisArg = n), (this.count = 0);
        }
        _next(t) {
          let e;
          try {
            e = this.predicate.call(this.thisArg, t, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          e && this.destination.next(t);
        }
      }
      class k {}
      class O {}
      class A {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  'string' == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split('\n').forEach((t) => {
                            const e = t.indexOf(':');
                            if (e > 0) {
                              const n = t.slice(0, e),
                                i = n.toLowerCase(),
                                s = t.slice(e + 1).trim();
                              this.maybeSetNormalizedName(n, i),
                                this.headers.has(i) ? this.headers.get(i).push(s) : this.headers.set(i, [s]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let n = t[e];
                            const i = e.toLowerCase();
                            'string' == typeof n && (n = [n]),
                              n.length > 0 && (this.headers.set(i, n), this.maybeSetNormalizedName(e, i));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: 'a' });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: 'd' });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof A ? this.copyFrom(this.lazyInit) : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate && (this.lazyUpdate.forEach((t) => this.applyUpdate(t)), (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)), this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new A();
          return (
            (e.lazyInit = this.lazyInit && this.lazyInit instanceof A ? this.lazyInit : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case 'a':
            case 's':
              let n = t.value;
              if (('string' == typeof n && (n = [n]), 0 === n.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const i = ('a' === t.op ? this.headers.get(e) : void 0) || [];
              i.push(...n), this.headers.set(e, i);
              break;
            case 'd':
              const s = t.value;
              if (s) {
                let t = this.headers.get(e);
                if (!t) return;
                (t = t.filter((t) => -1 === s.indexOf(t))),
                  0 === t.length ? (this.headers.delete(e), this.normalizedNames.delete(e)) : this.headers.set(e, t);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) => t(this.normalizedNames.get(e), this.headers.get(e)));
        }
      }
      class T {
        encodeKey(t) {
          return I(t);
        }
        encodeValue(t) {
          return I(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      function I(t) {
        return encodeURIComponent(t)
          .replace(/%40/gi, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/gi, '$')
          .replace(/%2C/gi, ',')
          .replace(/%3B/gi, ';')
          .replace(/%2B/gi, '+')
          .replace(/%3D/gi, '=')
          .replace(/%3F/gi, '?')
          .replace(/%2F/gi, '/');
      }
      class R {
        constructor(t = {}) {
          if (((this.updates = null), (this.cloneFrom = null), (this.encoder = t.encoder || new T()), t.fromString)) {
            if (t.fromObject) throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function (t, e) {
              const n = new Map();
              return (
                t.length > 0 &&
                  t.split('&').forEach((t) => {
                    const i = t.indexOf('='),
                      [s, r] =
                        -1 == i ? [e.decodeKey(t), ''] : [e.decodeKey(t.slice(0, i)), e.decodeValue(t.slice(i + 1))],
                      o = n.get(s) || [];
                    o.push(r), n.set(s, o);
                  }),
                n
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const n = t.fromObject[e];
                  this.map.set(e, Array.isArray(n) ? n : [n]);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: 'a' });
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((t) => e + '=' + this.encoder.encodeValue(t))
                  .join('&');
              })
              .filter((t) => '' !== t)
              .join('&')
          );
        }
        clone(t) {
          const e = new R({ encoder: this.encoder });
          return (e.cloneFrom = this.cloneFrom || this), (e.updates = (this.updates || []).concat([t])), e;
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom.keys().forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case 'a':
                  case 's':
                    const e = ('a' === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(t.value), this.map.set(t.param, e);
                    break;
                  case 'd':
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let e = this.map.get(t.param) || [];
                      const n = e.indexOf(t.value);
                      -1 !== n && e.splice(n, 1), e.length > 0 ? this.map.set(t.param, e) : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      function P(t) {
        return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer;
      }
      function D(t) {
        return 'undefined' != typeof Blob && t instanceof Blob;
      }
      function j(t) {
        return 'undefined' != typeof FormData && t instanceof FormData;
      }
      class L {
        constructor(t, e, n, i) {
          let s;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = t.toUpperCase()),
            (function (t) {
              switch (t) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || i
              ? ((this.body = void 0 !== n ? n : null), (s = i))
              : (s = n),
            s &&
              ((this.reportProgress = !!s.reportProgress),
              (this.withCredentials = !!s.withCredentials),
              s.responseType && (this.responseType = s.responseType),
              s.headers && (this.headers = s.headers),
              s.params && (this.params = s.params)),
            this.headers || (this.headers = new A()),
            this.params)
          ) {
            const t = this.params.toString();
            if (0 === t.length) this.urlWithParams = e;
            else {
              const n = e.indexOf('?');
              this.urlWithParams = e + (-1 === n ? '?' : n < e.length - 1 ? '&' : '') + t;
            }
          } else (this.params = new R()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : P(this.body) || D(this.body) || j(this.body) || 'string' == typeof this.body
            ? this.body
            : this.body instanceof R
            ? this.body.toString()
            : 'object' == typeof this.body || 'boolean' == typeof this.body || Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || j(this.body)
            ? null
            : D(this.body)
            ? this.body.type || null
            : P(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof R
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body || 'number' == typeof this.body || Array.isArray(this.body)
            ? 'application/json'
            : null;
        }
        clone(t = {}) {
          const e = t.method || this.method,
            n = t.url || this.url,
            i = t.responseType || this.responseType,
            s = void 0 !== t.body ? t.body : this.body,
            r = void 0 !== t.withCredentials ? t.withCredentials : this.withCredentials,
            o = void 0 !== t.reportProgress ? t.reportProgress : this.reportProgress;
          let a = t.headers || this.headers,
            l = t.params || this.params;
          return (
            void 0 !== t.setHeaders && (a = Object.keys(t.setHeaders).reduce((e, n) => e.set(n, t.setHeaders[n]), a)),
            t.setParams && (l = Object.keys(t.setParams).reduce((e, n) => e.set(n, t.setParams[n]), l)),
            new L(e, n, s, { params: l, headers: a, reportProgress: o, responseType: i, withCredentials: r })
          );
        }
      }
      const M = (function () {
        var t = { Sent: 0, UploadProgress: 1, ResponseHeader: 2, DownloadProgress: 3, Response: 4, User: 5 };
        return (
          (t[t.Sent] = 'Sent'),
          (t[t.UploadProgress] = 'UploadProgress'),
          (t[t.ResponseHeader] = 'ResponseHeader'),
          (t[t.DownloadProgress] = 'DownloadProgress'),
          (t[t.Response] = 'Response'),
          (t[t.User] = 'User'),
          t
        );
      })();
      class N {
        constructor(t, e = 200, n = 'OK') {
          (this.headers = t.headers || new A()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || n),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class F extends N {
        constructor(t = {}) {
          super(t), (this.type = M.ResponseHeader);
        }
        clone(t = {}) {
          return new F({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class V extends N {
        constructor(t = {}) {
          super(t), (this.type = M.Response), (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new V({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class H extends N {
        constructor(t) {
          super(t, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? 'Http failure during parsing for ' + (t.url || '(unknown url)')
                : `Http failure response for ${t.url || '(unknown url)'}: ${t.status} ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function B(t, e) {
        return {
          body: e,
          headers: t.headers,
          observe: t.observe,
          params: t.params,
          reportProgress: t.reportProgress,
          responseType: t.responseType,
          withCredentials: t.withCredentials,
        };
      }
      let U = (() => {
        class t {
          constructor(t) {
            this.handler = t;
          }
          request(t, e, n = {}) {
            let i;
            if (t instanceof L) i = t;
            else {
              let s = void 0;
              s = n.headers instanceof A ? n.headers : new A(n.headers);
              let r = void 0;
              n.params && (r = n.params instanceof R ? n.params : new R({ fromObject: n.params })),
                (i = new L(t, e, void 0 !== n.body ? n.body : null, {
                  headers: s,
                  params: r,
                  reportProgress: n.reportProgress,
                  responseType: n.responseType || 'json',
                  withCredentials: n.withCredentials,
                }));
            }
            const s = y(i).pipe(w((t) => this.handler.handle(t)));
            if (t instanceof L || 'events' === n.observe) return s;
            const r = s.pipe(C((t) => t instanceof V));
            switch (n.observe || 'body') {
              case 'body':
                switch (i.responseType) {
                  case 'arraybuffer':
                    return r.pipe(
                      Object(l.a)((t) => {
                        if (null !== t.body && !(t.body instanceof ArrayBuffer))
                          throw new Error('Response is not an ArrayBuffer.');
                        return t.body;
                      })
                    );
                  case 'blob':
                    return r.pipe(
                      Object(l.a)((t) => {
                        if (null !== t.body && !(t.body instanceof Blob)) throw new Error('Response is not a Blob.');
                        return t.body;
                      })
                    );
                  case 'text':
                    return r.pipe(
                      Object(l.a)((t) => {
                        if (null !== t.body && 'string' != typeof t.body) throw new Error('Response is not a string.');
                        return t.body;
                      })
                    );
                  case 'json':
                  default:
                    return r.pipe(Object(l.a)((t) => t.body));
                }
              case 'response':
                return r;
              default:
                throw new Error(`Unreachable: unhandled observe type ${n.observe}}`);
            }
          }
          delete(t, e = {}) {
            return this.request('DELETE', t, e);
          }
          get(t, e = {}) {
            return this.request('GET', t, e);
          }
          head(t, e = {}) {
            return this.request('HEAD', t, e);
          }
          jsonp(t, e) {
            return this.request('JSONP', t, {
              params: new R().append(e, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(t, e = {}) {
            return this.request('OPTIONS', t, e);
          }
          patch(t, e, n = {}) {
            return this.request('PATCH', t, B(n, e));
          }
          post(t, e, n = {}) {
            return this.request('POST', t, B(n, e));
          }
          put(t, e, n = {}) {
            return this.request('PUT', t, B(n, e));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(k));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class z {
        constructor(t, e) {
          (this.next = t), (this.interceptor = e);
        }
        handle(t) {
          return this.interceptor.intercept(t, this.next);
        }
      }
      const Y = new s.r('HTTP_INTERCEPTORS');
      let $ = (() => {
        class t {
          intercept(t, e) {
            return e.handle(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const q = /^\)\]\}',?\n/;
      class W {}
      let K = (() => {
          class t {
            constructor() {}
            build() {
              return new XMLHttpRequest();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Q = (() => {
          class t {
            constructor(t) {
              this.xhrFactory = t;
            }
            handle(t) {
              if ('JSONP' === t.method)
                throw new Error('Attempted to construct Jsonp request without JsonpClientModule installed.');
              return new o.a((e) => {
                const n = this.xhrFactory.build();
                if (
                  (n.open(t.method, t.urlWithParams),
                  t.withCredentials && (n.withCredentials = !0),
                  t.headers.forEach((t, e) => n.setRequestHeader(t, e.join(','))),
                  t.headers.has('Accept') || n.setRequestHeader('Accept', 'application/json, text/plain, */*'),
                  !t.headers.has('Content-Type'))
                ) {
                  const e = t.detectContentTypeHeader();
                  null !== e && n.setRequestHeader('Content-Type', e);
                }
                if (t.responseType) {
                  const e = t.responseType.toLowerCase();
                  n.responseType = 'json' !== e ? e : 'text';
                }
                const i = t.serializeBody();
                let s = null;
                const r = () => {
                    if (null !== s) return s;
                    const e = 1223 === n.status ? 204 : n.status,
                      i = n.statusText || 'OK',
                      r = new A(n.getAllResponseHeaders()),
                      o =
                        (function (t) {
                          return 'responseURL' in t && t.responseURL
                            ? t.responseURL
                            : /^X-Request-URL:/m.test(t.getAllResponseHeaders())
                            ? t.getResponseHeader('X-Request-URL')
                            : null;
                        })(n) || t.url;
                    return (s = new F({ headers: r, status: e, statusText: i, url: o })), s;
                  },
                  o = () => {
                    let { headers: i, status: s, statusText: o, url: a } = r(),
                      l = null;
                    204 !== s && (l = void 0 === n.response ? n.responseText : n.response),
                      0 === s && (s = l ? 200 : 0);
                    let c = s >= 200 && s < 300;
                    if ('json' === t.responseType && 'string' == typeof l) {
                      const t = l;
                      l = l.replace(q, '');
                      try {
                        l = '' !== l ? JSON.parse(l) : null;
                      } catch (u) {
                        (l = t), c && ((c = !1), (l = { error: u, text: l }));
                      }
                    }
                    c
                      ? (e.next(new V({ body: l, headers: i, status: s, statusText: o, url: a || void 0 })),
                        e.complete())
                      : e.error(new H({ error: l, headers: i, status: s, statusText: o, url: a || void 0 }));
                  },
                  a = (t) => {
                    const { url: i } = r(),
                      s = new H({
                        error: t,
                        status: n.status || 0,
                        statusText: n.statusText || 'Unknown Error',
                        url: i || void 0,
                      });
                    e.error(s);
                  };
                let l = !1;
                const c = (i) => {
                    l || (e.next(r()), (l = !0));
                    let s = { type: M.DownloadProgress, loaded: i.loaded };
                    i.lengthComputable && (s.total = i.total),
                      'text' === t.responseType && n.responseText && (s.partialText = n.responseText),
                      e.next(s);
                  },
                  u = (t) => {
                    let n = { type: M.UploadProgress, loaded: t.loaded };
                    t.lengthComputable && (n.total = t.total), e.next(n);
                  };
                return (
                  n.addEventListener('load', o),
                  n.addEventListener('error', a),
                  t.reportProgress &&
                    (n.addEventListener('progress', c),
                    null !== i && n.upload && n.upload.addEventListener('progress', u)),
                  n.send(i),
                  e.next({ type: M.Sent }),
                  () => {
                    n.removeEventListener('error', a),
                      n.removeEventListener('load', o),
                      t.reportProgress &&
                        (n.removeEventListener('progress', c),
                        null !== i && n.upload && n.upload.removeEventListener('progress', u)),
                      n.abort();
                  }
                );
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(W));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const Z = new s.r('XSRF_COOKIE_NAME'),
        G = new s.r('XSRF_HEADER_NAME');
      class X {}
      let J = (() => {
          class t {
            constructor(t, e, n) {
              (this.doc = t),
                (this.platform = e),
                (this.cookieName = n),
                (this.lastCookieString = ''),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ('server' === this.platform) return null;
              const t = this.doc.cookie || '';
              return (
                t !== this.lastCookieString &&
                  (this.parseCount++, (this.lastToken = Object(r.y)(t, this.cookieName)), (this.lastCookieString = t)),
                this.lastToken
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(r.d), s.Yb(s.C), s.Yb(Z));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        tt = (() => {
          class t {
            constructor(t, e) {
              (this.tokenService = t), (this.headerName = e);
            }
            intercept(t, e) {
              const n = t.url.toLowerCase();
              if ('GET' === t.method || 'HEAD' === t.method || n.startsWith('http://') || n.startsWith('https://'))
                return e.handle(t);
              const i = this.tokenService.getToken();
              return (
                null === i ||
                  t.headers.has(this.headerName) ||
                  (t = t.clone({ headers: t.headers.set(this.headerName, i) })),
                e.handle(t)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(X), s.Yb(G));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        et = (() => {
          class t {
            constructor(t, e) {
              (this.backend = t), (this.injector = e), (this.chain = null);
            }
            handle(t) {
              if (null === this.chain) {
                const t = this.injector.get(Y, []);
                this.chain = t.reduceRight((t, e) => new z(t, e), this.backend);
              }
              return this.chain.handle(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(O), s.Yb(s.s));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        nt = (() => {
          class t {
            static disable() {
              return { ngModule: t, providers: [{ provide: tt, useClass: $ }] };
            }
            static withOptions(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.cookieName ? { provide: Z, useValue: e.cookieName } : [],
                  e.headerName ? { provide: G, useValue: e.headerName } : [],
                ],
              };
            }
          }
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [
                tt,
                { provide: Y, useExisting: tt, multi: !0 },
                { provide: X, useClass: J },
                { provide: Z, useValue: 'XSRF-TOKEN' },
                { provide: G, useValue: 'X-XSRF-TOKEN' },
              ],
            })),
            t
          );
        })(),
        it = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [
                U,
                { provide: k, useClass: et },
                Q,
                { provide: O, useExisting: Q },
                K,
                { provide: W, useExisting: K },
              ],
              imports: [[nt.withOptions({ cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN' })]],
            })),
            t
          );
        })();
      function st(t) {
        return !!t && (t instanceof o.a || ('function' == typeof t.lift && 'function' == typeof t.subscribe));
      }
      var rt = n('bHdf');
      function ot() {
        return Object(rt.a)(1);
      }
      function at(...t) {
        return ot()(y(...t));
      }
      const lt = new o.a((t) => t.complete());
      function ct(t) {
        return t
          ? (function (t) {
              return new o.a((e) => t.schedule(() => e.complete()));
            })(t)
          : lt;
      }
      function ut(t) {
        return new o.a((e) => {
          let n;
          try {
            n = t();
          } catch (i) {
            return void e.error(i);
          }
          return (n ? Object(u.a)(n) : ct()).subscribe(e);
        });
      }
      const ht = (() => {
        function t() {
          return (
            Error.call(this), (this.message = 'argument out of range'), (this.name = 'ArgumentOutOfRangeError'), this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      function dt(t) {
        return (e) => (0 === t ? ct() : e.lift(new pt(t)));
      }
      class pt {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new ht();
        }
        call(t, e) {
          return e.subscribe(new mt(t, this.total));
        }
      }
      class mt extends x.a {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          const e = this.total,
            n = ++this.count;
          n <= e && (this.destination.next(t), n === e && (this.destination.complete(), this.unsubscribe()));
        }
      }
      var ft = n('XNiG'),
        gt = n('quSY');
      class bt extends gt.a {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      class _t extends bt {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e), (this.pending = !1);
        }
        schedule(t, e = 0) {
          if (this.closed) return this;
          this.state = t;
          const n = this.id,
            i = this.scheduler;
          return (
            null != n && (this.id = this.recycleAsyncId(i, n, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id = this.id || this.requestAsyncId(i, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, n = 0) {
          return setInterval(t.flush.bind(t, this), n);
        }
        recycleAsyncId(t, e, n = 0) {
          if (null !== n && this.delay === n && !1 === this.pending) return e;
          clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const n = this._execute(t, e);
          if (n) return n;
          !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let n = !1,
            i = void 0;
          try {
            this.work(t);
          } catch (s) {
            (n = !0), (i = (!!s && s) || new Error(s));
          }
          if (n) return this.unsubscribe(), i;
        }
        _unsubscribe() {
          const t = this.id,
            e = this.scheduler,
            n = e.actions,
            i = n.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== i && n.splice(i, 1),
            null != t && (this.id = this.recycleAsyncId(e, t, null)),
            (this.delay = null);
        }
      }
      class yt extends _t {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e);
        }
        schedule(t, e = 0) {
          return e > 0 ? super.schedule(t, e) : ((this.delay = e), (this.state = t), this.scheduler.flush(this), this);
        }
        execute(t, e) {
          return e > 0 || this.closed ? super.execute(t, e) : this._execute(t, e);
        }
        requestAsyncId(t, e, n = 0) {
          return (null !== n && n > 0) || (null === n && this.delay > 0)
            ? super.requestAsyncId(t, e, n)
            : t.flush(this);
        }
      }
      let vt = (() => {
        class t {
          constructor(e, n = t.now) {
            (this.SchedulerAction = e), (this.now = n);
          }
          schedule(t, e = 0, n) {
            return new this.SchedulerAction(this, t).schedule(n, e);
          }
        }
        return (t.now = () => Date.now()), t;
      })();
      class wt extends vt {
        constructor(t, e = vt.now) {
          super(t, () => (wt.delegate && wt.delegate !== this ? wt.delegate.now() : e())),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(t, e = 0, n) {
          return wt.delegate && wt.delegate !== this ? wt.delegate.schedule(t, e, n) : super.schedule(t, e, n);
        }
        flush(t) {
          const { actions: e } = this;
          if (this.active) return void e.push(t);
          let n;
          this.active = !0;
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this.active = !1), n)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      }
      class xt extends wt {}
      const Ct = new xt(yt);
      function St(t, e) {
        return new o.a(e ? (n) => e.schedule(Et, 0, { error: t, subscriber: n }) : (e) => e.error(t));
      }
      function Et({ error: t, subscriber: e }) {
        e.error(t);
      }
      let kt = (() => {
        class t {
          constructor(t, e, n) {
            (this.kind = t), (this.value = e), (this.error = n), (this.hasValue = 'N' === t);
          }
          observe(t) {
            switch (this.kind) {
              case 'N':
                return t.next && t.next(this.value);
              case 'E':
                return t.error && t.error(this.error);
              case 'C':
                return t.complete && t.complete();
            }
          }
          do(t, e, n) {
            switch (this.kind) {
              case 'N':
                return t && t(this.value);
              case 'E':
                return e && e(this.error);
              case 'C':
                return n && n();
            }
          }
          accept(t, e, n) {
            return t && 'function' == typeof t.next ? this.observe(t) : this.do(t, e, n);
          }
          toObservable() {
            switch (this.kind) {
              case 'N':
                return y(this.value);
              case 'E':
                return St(this.error);
              case 'C':
                return ct();
            }
            throw new Error('unexpected notification kind value');
          }
          static createNext(e) {
            return void 0 !== e ? new t('N', e) : t.undefinedValueNotification;
          }
          static createError(e) {
            return new t('E', void 0, e);
          }
          static createComplete() {
            return t.completeNotification;
          }
        }
        return (t.completeNotification = new t('C')), (t.undefinedValueNotification = new t('N', void 0)), t;
      })();
      class Ot extends x.a {
        constructor(t, e, n = 0) {
          super(t), (this.scheduler = e), (this.delay = n);
        }
        static dispatch(t) {
          const { notification: e, destination: n } = t;
          e.observe(n), this.unsubscribe();
        }
        scheduleMessage(t) {
          this.destination.add(this.scheduler.schedule(Ot.dispatch, this.delay, new At(t, this.destination)));
        }
        _next(t) {
          this.scheduleMessage(kt.createNext(t));
        }
        _error(t) {
          this.scheduleMessage(kt.createError(t)), this.unsubscribe();
        }
        _complete() {
          this.scheduleMessage(kt.createComplete()), this.unsubscribe();
        }
      }
      class At {
        constructor(t, e) {
          (this.notification = t), (this.destination = e);
        }
      }
      var Tt = n('9ppp'),
        It = n('Ylt2');
      class Rt extends ft.a {
        constructor(t = Number.POSITIVE_INFINITY, e = Number.POSITIVE_INFINITY, n) {
          super(),
            (this.scheduler = n),
            (this._events = []),
            (this._infiniteTimeWindow = !1),
            (this._bufferSize = t < 1 ? 1 : t),
            (this._windowTime = e < 1 ? 1 : e),
            e === Number.POSITIVE_INFINITY
              ? ((this._infiniteTimeWindow = !0), (this.next = this.nextInfiniteTimeWindow))
              : (this.next = this.nextTimeWindow);
        }
        nextInfiniteTimeWindow(t) {
          const e = this._events;
          e.push(t), e.length > this._bufferSize && e.shift(), super.next(t);
        }
        nextTimeWindow(t) {
          this._events.push(new Pt(this._getNow(), t)), this._trimBufferThenGetEvents(), super.next(t);
        }
        _subscribe(t) {
          const e = this._infiniteTimeWindow,
            n = e ? this._events : this._trimBufferThenGetEvents(),
            i = this.scheduler,
            s = n.length;
          let r;
          if (this.closed) throw new Tt.a();
          if (
            (this.isStopped || this.hasError ? (r = gt.a.EMPTY) : (this.observers.push(t), (r = new It.a(this, t))),
            i && t.add((t = new Ot(t, i))),
            e)
          )
            for (let o = 0; o < s && !t.closed; o++) t.next(n[o]);
          else for (let o = 0; o < s && !t.closed; o++) t.next(n[o].value);
          return this.hasError ? t.error(this.thrownError) : this.isStopped && t.complete(), r;
        }
        _getNow() {
          return (this.scheduler || Ct).now();
        }
        _trimBufferThenGetEvents() {
          const t = this._getNow(),
            e = this._bufferSize,
            n = this._windowTime,
            i = this._events,
            s = i.length;
          let r = 0;
          for (; r < s && !(t - i[r].time < n); ) r++;
          return s > e && (r = Math.max(r, s - e)), r > 0 && i.splice(0, r), i;
        }
      }
      class Pt {
        constructor(t, e) {
          (this.time = t), (this.value = e);
        }
      }
      function Dt(t, e, n) {
        let i;
        return (
          (i = t && 'object' == typeof t ? t : { bufferSize: t, windowTime: e, refCount: !1, scheduler: n }),
          (t) =>
            t.lift(
              (function ({
                bufferSize: t = Number.POSITIVE_INFINITY,
                windowTime: e = Number.POSITIVE_INFINITY,
                refCount: n,
                scheduler: i,
              }) {
                let s,
                  r,
                  o = 0,
                  a = !1,
                  l = !1;
                return function (c) {
                  let u;
                  o++,
                    !s || a
                      ? ((a = !1),
                        (s = new Rt(t, e, i)),
                        (u = s.subscribe(this)),
                        (r = c.subscribe({
                          next(t) {
                            s.next(t);
                          },
                          error(t) {
                            (a = !0), s.error(t);
                          },
                          complete() {
                            (l = !0), (r = void 0), s.complete();
                          },
                        })))
                      : (u = s.subscribe(this)),
                    this.add(() => {
                      o--, u.unsubscribe(), r && !l && n && 0 === o && (r.unsubscribe(), (r = void 0), (s = void 0));
                    });
                };
              })(i)
            )
        );
      }
      var jt = n('l7GE'),
        Lt = n('51Dv'),
        Mt = n('ZUHj');
      function Nt(t, e) {
        return 'function' == typeof e
          ? (n) => n.pipe(Nt((n, i) => Object(u.a)(t(n, i)).pipe(Object(l.a)((t, s) => e(n, t, i, s)))))
          : (e) => e.lift(new Ft(t));
      }
      class Ft {
        constructor(t) {
          this.project = t;
        }
        call(t, e) {
          return e.subscribe(new Vt(t, this.project));
        }
      }
      class Vt extends jt.a {
        constructor(t, e) {
          super(t), (this.project = e), (this.index = 0);
        }
        _next(t) {
          let e;
          const n = this.index++;
          try {
            e = this.project(t, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this._innerSub(e, t, n);
        }
        _innerSub(t, e, n) {
          const i = this.innerSubscription;
          i && i.unsubscribe();
          const s = new Lt.a(this, e, n),
            r = this.destination;
          r.add(s),
            (this.innerSubscription = Object(Mt.a)(this, t, void 0, void 0, s)),
            this.innerSubscription !== s && r.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: t } = this;
          (t && !t.closed) || super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = null;
        }
        notifyComplete(t) {
          this.destination.remove(t), (this.innerSubscription = null), this.isStopped && super._complete();
        }
        notifyNext(t, e, n, i, s) {
          this.destination.next(e);
        }
      }
      class Ht {}
      let Bt = (() => {
        class t extends Ht {
          getTranslation(t) {
            return y({});
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Ut(e || t);
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Ut = s.Wb(Bt);
      class zt {}
      let Yt = (() => {
        class t {
          handle(t) {
            return t.key;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function $t(t) {
        return null != t;
      }
      function qt(t) {
        return t && 'object' == typeof t && !Array.isArray(t);
      }
      class Wt {}
      let Kt = (() => {
        class t extends Wt {
          constructor() {
            super(...arguments), (this.templateMatcher = /{{\s?([^{}\s]*)\s?}}/g);
          }
          interpolate(t, e) {
            let n;
            return (
              (n =
                'string' == typeof t
                  ? this.interpolateString(t, e)
                  : 'function' == typeof t
                  ? this.interpolateFunction(t, e)
                  : t),
              n
            );
          }
          getValue(t, e) {
            let n = 'string' == typeof e ? e.split('.') : [e];
            e = '';
            do {
              (e += n.shift()),
                !$t(t) || !$t(t[e]) || ('object' != typeof t[e] && n.length)
                  ? n.length
                    ? (e += '.')
                    : (t = void 0)
                  : ((t = t[e]), (e = ''));
            } while (n.length);
            return t;
          }
          interpolateFunction(t, e) {
            return t(e);
          }
          interpolateString(t, e) {
            return e
              ? t.replace(this.templateMatcher, (t, n) => {
                  let i = this.getValue(e, n);
                  return $t(i) ? i : t;
                })
              : t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Qt(e || t);
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Qt = s.Wb(Kt);
      class Zt {}
      let Gt = (() => {
        class t extends Zt {
          compile(t, e) {
            return t;
          }
          compileTranslations(t, e) {
            return t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Xt(e || t);
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Xt = s.Wb(Gt);
      class Jt {
        constructor() {
          (this.currentLang = this.defaultLang),
            (this.translations = {}),
            (this.langs = []),
            (this.onTranslationChange = new s.o()),
            (this.onLangChange = new s.o()),
            (this.onDefaultLangChange = new s.o());
        }
      }
      const te = new s.r('USE_STORE'),
        ee = new s.r('USE_DEFAULT_LANG'),
        ne = new s.r('DEFAULT_LANGUAGE'),
        ie = new s.r('USE_EXTEND');
      let se = (() => {
          class t {
            constructor(t, e, n, i, r, o = !0, a = !1, l = !1, c) {
              (this.store = t),
                (this.currentLoader = e),
                (this.compiler = n),
                (this.parser = i),
                (this.missingTranslationHandler = r),
                (this.useDefaultLang = o),
                (this.isolate = a),
                (this.extend = l),
                (this.pending = !1),
                (this._onTranslationChange = new s.o()),
                (this._onLangChange = new s.o()),
                (this._onDefaultLangChange = new s.o()),
                (this._langs = []),
                (this._translations = {}),
                (this._translationRequests = {}),
                c && this.setDefaultLang(c);
            }
            get onTranslationChange() {
              return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;
            }
            get onLangChange() {
              return this.isolate ? this._onLangChange : this.store.onLangChange;
            }
            get onDefaultLangChange() {
              return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;
            }
            get defaultLang() {
              return this.isolate ? this._defaultLang : this.store.defaultLang;
            }
            set defaultLang(t) {
              this.isolate ? (this._defaultLang = t) : (this.store.defaultLang = t);
            }
            get currentLang() {
              return this.isolate ? this._currentLang : this.store.currentLang;
            }
            set currentLang(t) {
              this.isolate ? (this._currentLang = t) : (this.store.currentLang = t);
            }
            get langs() {
              return this.isolate ? this._langs : this.store.langs;
            }
            set langs(t) {
              this.isolate ? (this._langs = t) : (this.store.langs = t);
            }
            get translations() {
              return this.isolate ? this._translations : this.store.translations;
            }
            set translations(t) {
              this.isolate ? (this._translations = t) : (this.store.translations = t);
            }
            setDefaultLang(t) {
              if (t === this.defaultLang) return;
              let e = this.retrieveTranslations(t);
              void 0 !== e
                ? (null == this.defaultLang && (this.defaultLang = t),
                  e.pipe(dt(1)).subscribe((e) => {
                    this.changeDefaultLang(t);
                  }))
                : this.changeDefaultLang(t);
            }
            getDefaultLang() {
              return this.defaultLang;
            }
            use(t) {
              if (t === this.currentLang) return y(this.translations[t]);
              let e = this.retrieveTranslations(t);
              return void 0 !== e
                ? (this.currentLang || (this.currentLang = t),
                  e.pipe(dt(1)).subscribe((e) => {
                    this.changeLang(t);
                  }),
                  e)
                : (this.changeLang(t), y(this.translations[t]));
            }
            retrieveTranslations(t) {
              let e;
              return (
                (void 0 === this.translations[t] || this.extend) &&
                  ((this._translationRequests[t] = this._translationRequests[t] || this.getTranslation(t)),
                  (e = this._translationRequests[t])),
                e
              );
            }
            getTranslation(t) {
              this.pending = !0;
              const e = this.currentLoader.getTranslation(t).pipe(Dt(1), dt(1));
              return (
                (this.loadingTranslations = e.pipe(
                  Object(l.a)((e) => this.compiler.compileTranslations(e, t)),
                  Dt(1),
                  dt(1)
                )),
                this.loadingTranslations.subscribe({
                  next: (e) => {
                    (this.translations[t] =
                      this.extend && this.translations[t]
                        ? Object.assign(Object.assign({}, e), this.translations[t])
                        : e),
                      this.updateLangs(),
                      (this.pending = !1);
                  },
                  error: (t) => {
                    this.pending = !1;
                  },
                }),
                e
              );
            }
            setTranslation(t, e, n = !1) {
              (e = this.compiler.compileTranslations(e, t)),
                (this.translations[t] =
                  (n || this.extend) && this.translations[t]
                    ? (function t(e, n) {
                        let i = Object.assign({}, e);
                        return (
                          qt(e) &&
                            qt(n) &&
                            Object.keys(n).forEach((s) => {
                              qt(n[s])
                                ? s in e
                                  ? (i[s] = t(e[s], n[s]))
                                  : Object.assign(i, { [s]: n[s] })
                                : Object.assign(i, { [s]: n[s] });
                            }),
                          i
                        );
                      })(this.translations[t], e)
                    : e),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: t, translations: this.translations[t] });
            }
            getLangs() {
              return this.langs;
            }
            addLangs(t) {
              t.forEach((t) => {
                -1 === this.langs.indexOf(t) && this.langs.push(t);
              });
            }
            updateLangs() {
              this.addLangs(Object.keys(this.translations));
            }
            getParsedResult(t, e, n) {
              let i;
              if (e instanceof Array) {
                let i = {},
                  s = !1;
                for (let r of e) (i[r] = this.getParsedResult(t, r, n)), st(i[r]) && (s = !0);
                return s
                  ? h(e.map((t) => (st(i[t]) ? i[t] : y(i[t])))).pipe(
                      Object(l.a)((t) => {
                        let n = {};
                        return (
                          t.forEach((t, i) => {
                            n[e[i]] = t;
                          }),
                          n
                        );
                      })
                    )
                  : i;
              }
              if (
                (t && (i = this.parser.interpolate(this.parser.getValue(t, e), n)),
                void 0 === i &&
                  null != this.defaultLang &&
                  this.defaultLang !== this.currentLang &&
                  this.useDefaultLang &&
                  (i = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], e), n)),
                void 0 === i)
              ) {
                let t = { key: e, translateService: this };
                void 0 !== n && (t.interpolateParams = n), (i = this.missingTranslationHandler.handle(t));
              }
              return void 0 !== i ? i : e;
            }
            get(t, e) {
              if (!$t(t) || !t.length) throw new Error('Parameter "key" required');
              if (this.pending)
                return this.loadingTranslations.pipe(w((n) => (st((n = this.getParsedResult(n, t, e))) ? n : y(n))));
              {
                let n = this.getParsedResult(this.translations[this.currentLang], t, e);
                return st(n) ? n : y(n);
              }
            }
            getStreamOnTranslationChange(t, e) {
              if (!$t(t) || !t.length) throw new Error('Parameter "key" required');
              return at(
                ut(() => this.get(t, e)),
                this.onTranslationChange.pipe(
                  Nt((n) => {
                    const i = this.getParsedResult(n.translations, t, e);
                    return 'function' == typeof i.subscribe ? i : y(i);
                  })
                )
              );
            }
            stream(t, e) {
              if (!$t(t) || !t.length) throw new Error('Parameter "key" required');
              return at(
                ut(() => this.get(t, e)),
                this.onLangChange.pipe(
                  Nt((n) => {
                    const i = this.getParsedResult(n.translations, t, e);
                    return st(i) ? i : y(i);
                  })
                )
              );
            }
            instant(t, e) {
              if (!$t(t) || !t.length) throw new Error('Parameter "key" required');
              let n = this.getParsedResult(this.translations[this.currentLang], t, e);
              if (st(n)) {
                if (t instanceof Array) {
                  let e = {};
                  return (
                    t.forEach((n, i) => {
                      e[t[i]] = t[i];
                    }),
                    e
                  );
                }
                return t;
              }
              return n;
            }
            set(t, e, n = this.currentLang) {
              (this.translations[n][t] = this.compiler.compile(e, n)),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: n, translations: this.translations[n] });
            }
            changeLang(t) {
              (this.currentLang = t),
                this.onLangChange.emit({ lang: t, translations: this.translations[t] }),
                null == this.defaultLang && this.changeDefaultLang(t);
            }
            changeDefaultLang(t) {
              (this.defaultLang = t), this.onDefaultLangChange.emit({ lang: t, translations: this.translations[t] });
            }
            reloadLang(t) {
              return this.resetLang(t), this.getTranslation(t);
            }
            resetLang(t) {
              (this._translationRequests[t] = void 0), (this.translations[t] = void 0);
            }
            getBrowserLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let t = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (t =
                  t || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                void 0 !== t
                  ? (-1 !== t.indexOf('-') && (t = t.split('-')[0]), -1 !== t.indexOf('_') && (t = t.split('_')[0]), t)
                  : void 0
              );
            }
            getBrowserCultureLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let t = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (t =
                  t || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                t
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                s.Yb(Jt),
                s.Yb(Ht),
                s.Yb(Zt),
                s.Yb(Wt),
                s.Yb(zt),
                s.Yb(ee),
                s.Yb(te),
                s.Yb(ie),
                s.Yb(ne)
              );
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        re = (() => {
          class t {
            constructor(t, e, n) {
              (this.translateService = t),
                (this.element = e),
                (this._ref = n),
                this.onTranslationChangeSub ||
                  (this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((t) => {
                    t.lang === this.translateService.currentLang && this.checkNodes(!0, t.translations);
                  })),
                this.onLangChangeSub ||
                  (this.onLangChangeSub = this.translateService.onLangChange.subscribe((t) => {
                    this.checkNodes(!0, t.translations);
                  })),
                this.onDefaultLangChangeSub ||
                  (this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((t) => {
                    this.checkNodes(!0);
                  }));
            }
            set translate(t) {
              t && ((this.key = t), this.checkNodes());
            }
            set translateParams(t) {
              (function t(e, n) {
                if (e === n) return !0;
                if (null === e || null === n) return !1;
                if (e != e && n != n) return !0;
                let i,
                  s,
                  r,
                  o = typeof e;
                if (o == typeof n && 'object' == o) {
                  if (!Array.isArray(e)) {
                    if (Array.isArray(n)) return !1;
                    for (s in ((r = Object.create(null)), e)) {
                      if (!t(e[s], n[s])) return !1;
                      r[s] = !0;
                    }
                    for (s in n) if (!(s in r) && void 0 !== n[s]) return !1;
                    return !0;
                  }
                  if (!Array.isArray(n)) return !1;
                  if ((i = e.length) == n.length) {
                    for (s = 0; s < i; s++) if (!t(e[s], n[s])) return !1;
                    return !0;
                  }
                }
                return !1;
              })(this.currentParams, t) || ((this.currentParams = t), this.checkNodes(!0));
            }
            ngAfterViewChecked() {
              this.checkNodes();
            }
            checkNodes(t = !1, e) {
              let n = this.element.nativeElement.childNodes;
              n.length ||
                (this.setContent(this.element.nativeElement, this.key), (n = this.element.nativeElement.childNodes));
              for (let i = 0; i < n.length; ++i) {
                let s = n[i];
                if (3 === s.nodeType) {
                  let n;
                  if ((t && (s.lastKey = null), $t(s.lookupKey))) n = s.lookupKey;
                  else if (this.key) n = this.key;
                  else {
                    let t = this.getContent(s),
                      e = t.trim();
                    e.length &&
                      ((s.lookupKey = e),
                      t !== s.currentValue
                        ? ((n = e), (s.originalContent = t || s.originalContent))
                        : s.originalContent
                        ? (n = s.originalContent.trim())
                        : t !== s.currentValue && ((n = e), (s.originalContent = t || s.originalContent)));
                  }
                  this.updateValue(n, s, e);
                }
              }
            }
            updateValue(t, e, n) {
              if (t) {
                if (e.lastKey === t && this.lastParams === this.currentParams) return;
                this.lastParams = this.currentParams;
                let i = (n) => {
                  n !== t && (e.lastKey = t),
                    e.originalContent || (e.originalContent = this.getContent(e)),
                    (e.currentValue = $t(n) ? n : e.originalContent || t),
                    this.setContent(e, this.key ? e.currentValue : e.originalContent.replace(t, e.currentValue)),
                    this._ref.markForCheck();
                };
                if ($t(n)) {
                  let e = this.translateService.getParsedResult(n, t, this.currentParams);
                  st(e) ? e.subscribe(i) : i(e);
                } else this.translateService.get(t, this.currentParams).subscribe(i);
              }
            }
            getContent(t) {
              return $t(t.textContent) ? t.textContent : t.data;
            }
            setContent(t, e) {
              $t(t.textContent) ? (t.textContent = e) : (t.data = e);
            }
            ngOnDestroy() {
              this.onLangChangeSub && this.onLangChangeSub.unsubscribe(),
                this.onDefaultLangChangeSub && this.onDefaultLangChangeSub.unsubscribe(),
                this.onTranslationChangeSub && this.onTranslationChangeSub.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(se), s.Ob(s.l), s.Ob(s.h));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'translate', ''],
                ['', 'ngx-translate', ''],
              ],
              inputs: { translate: 'translate', translateParams: 'translateParams' },
            })),
            t
          );
        })(),
        oe = (() => {
          class t {
            static forRoot(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: Ht, useClass: Bt },
                  e.compiler || { provide: Zt, useClass: Gt },
                  e.parser || { provide: Wt, useClass: Kt },
                  e.missingTranslationHandler || { provide: zt, useClass: Yt },
                  Jt,
                  { provide: te, useValue: e.isolate },
                  { provide: ee, useValue: e.useDefaultLang },
                  { provide: ie, useValue: e.extend },
                  { provide: ne, useValue: e.defaultLanguage },
                  se,
                ],
              };
            }
            static forChild(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: Ht, useClass: Bt },
                  e.compiler || { provide: Zt, useClass: Gt },
                  e.parser || { provide: Wt, useClass: Kt },
                  e.missingTranslationHandler || { provide: zt, useClass: Yt },
                  { provide: te, useValue: e.isolate },
                  { provide: ee, useValue: e.useDefaultLang },
                  { provide: ie, useValue: e.extend },
                  { provide: ne, useValue: e.defaultLanguage },
                  se,
                ],
              };
            }
          }
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
      class ae {}
      function le(t, e) {
        return { type: 7, name: t, definitions: e, options: {} };
      }
      function ce(t, e = null) {
        return { type: 4, styles: e, timings: t };
      }
      function ue(t, e = null) {
        return { type: 3, steps: t, options: e };
      }
      function he(t, e = null) {
        return { type: 2, steps: t, options: e };
      }
      function de(t) {
        return { type: 6, styles: t, offset: null };
      }
      function pe(t, e, n) {
        return { type: 0, name: t, styles: e, options: n };
      }
      function me(t, e, n = null) {
        return { type: 1, expr: t, animation: e, options: n };
      }
      function fe(t, e, n = null) {
        return { type: 11, selector: t, animation: e, options: n };
      }
      function ge(t) {
        Promise.resolve(null).then(t);
      }
      class be {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()), (this._started = !0);
        }
        triggerMicrotask() {
          ge(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {}
        setPosition(t) {}
        getPosition() {
          return 0;
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      class _e {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            n = 0,
            i = 0;
          const s = this.players.length;
          0 == s
            ? ge(() => this._onFinish())
            : this.players.forEach((t) => {
                t.onDone(() => {
                  ++e == s && this._onFinish();
                }),
                  t.onDestroy(() => {
                    ++n == s && this._onDestroy();
                  }),
                  t.onStart(() => {
                    ++i == s && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce((t, e) => Math.max(t, e.totalTime), 0));
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() || ((this._started = !0), this._onStartFns.forEach((t) => t()), (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(), this._onStart(), this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((t) => {
            const n = t.totalTime ? Math.min(1, e / t.totalTime) : 1;
            t.setPosition(n);
          });
        }
        getPosition() {
          let t = 0;
          return (
            this.players.forEach((e) => {
              const n = e.getPosition();
              t = Math.min(n, t);
            }),
            t
          );
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      function ye() {
        return 'undefined' != typeof process && '[object process]' === {}.toString.call(process);
      }
      function ve(t) {
        switch (t.length) {
          case 0:
            return new be();
          case 1:
            return t[0];
          default:
            return new _e(t);
        }
      }
      function we(t, e, n, i, s = {}, r = {}) {
        const o = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((t) => {
            const n = t.offset,
              i = n == l,
              u = (i && c) || {};
            Object.keys(t).forEach((n) => {
              let i = n,
                a = t[n];
              if ('offset' !== n)
                switch (((i = e.normalizePropertyName(i, o)), a)) {
                  case '!':
                    a = s[n];
                    break;
                  case '*':
                    a = r[n];
                    break;
                  default:
                    a = e.normalizeStyleValue(n, i, a, o);
                }
              u[i] = a;
            }),
              i || a.push(u),
              (c = u),
              (l = n);
          }),
          o.length)
        ) {
          const t = '\n - ';
          throw new Error(`Unable to animate due to the following errors:${t}${o.join(t)}`);
        }
        return a;
      }
      function xe(t, e, n, i) {
        switch (e) {
          case 'start':
            t.onStart(() => i(n && Ce(n, 'start', t)));
            break;
          case 'done':
            t.onDone(() => i(n && Ce(n, 'done', t)));
            break;
          case 'destroy':
            t.onDestroy(() => i(n && Ce(n, 'destroy', t)));
        }
      }
      function Ce(t, e, n) {
        const i = n.totalTime,
          s = Se(
            t.element,
            t.triggerName,
            t.fromState,
            t.toState,
            e || t.phaseName,
            null == i ? t.totalTime : i,
            !!n.disabled
          ),
          r = t._data;
        return null != r && (s._data = r), s;
      }
      function Se(t, e, n, i, s = '', r = 0, o) {
        return { element: t, triggerName: e, fromState: n, toState: i, phaseName: s, totalTime: r, disabled: !!o };
      }
      function Ee(t, e, n) {
        let i;
        return t instanceof Map ? ((i = t.get(e)), i || t.set(e, (i = n))) : ((i = t[e]), i || (i = t[e] = n)), i;
      }
      function ke(t) {
        const e = t.indexOf(':');
        return [t.substring(1, e), t.substr(e + 1)];
      }
      let Oe = (t, e) => !1,
        Ae = (t, e) => !1,
        Te = (t, e, n) => [];
      const Ie = ye();
      (Ie || 'undefined' != typeof Element) &&
        ((Oe = (t, e) => t.contains(e)),
        (Ae = (() => {
          if (Ie || Element.prototype.matches) return (t, e) => t.matches(e);
          {
            const t = Element.prototype,
              e =
                t.matchesSelector ||
                t.mozMatchesSelector ||
                t.msMatchesSelector ||
                t.oMatchesSelector ||
                t.webkitMatchesSelector;
            return e ? (t, n) => e.apply(t, [n]) : Ae;
          }
        })()),
        (Te = (t, e, n) => {
          let i = [];
          if (n) i.push(...t.querySelectorAll(e));
          else {
            const n = t.querySelector(e);
            n && i.push(n);
          }
          return i;
        }));
      let Re = null,
        Pe = !1;
      function De(t) {
        Re ||
          ((Re = ('undefined' != typeof document ? document.body : null) || {}),
          (Pe = !!Re.style && 'WebkitAppearance' in Re.style));
        let e = !0;
        return (
          Re.style &&
            !(function (t) {
              return 'ebkit' == t.substring(1, 6);
            })(t) &&
            ((e = t in Re.style), !e && Pe) &&
            (e = 'Webkit' + t.charAt(0).toUpperCase() + t.substr(1) in Re.style),
          e
        );
      }
      const je = Ae,
        Le = Oe,
        Me = Te;
      function Ne(t) {
        const e = {};
        return (
          Object.keys(t).forEach((n) => {
            const i = n.replace(/([a-z])([A-Z])/g, '$1-$2');
            e[i] = t[n];
          }),
          e
        );
      }
      let Fe = (() => {
          class t {
            validateStyleProperty(t) {
              return De(t);
            }
            matchesElement(t, e) {
              return je(t, e);
            }
            containsElement(t, e) {
              return Le(t, e);
            }
            query(t, e, n) {
              return Me(t, e, n);
            }
            computeStyle(t, e, n) {
              return n || '';
            }
            animate(t, e, n, i, s, r = [], o) {
              return new be(n, i);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ve = (() => {
          class t {}
          return (t.NOOP = new Fe()), t;
        })();
      function He(t) {
        if ('number' == typeof t) return t;
        const e = t.match(/^(-?[\.\d]+)(m?s)/);
        return !e || e.length < 2 ? 0 : Be(parseFloat(e[1]), e[2]);
      }
      function Be(t, e) {
        switch (e) {
          case 's':
            return 1e3 * t;
          default:
            return t;
        }
      }
      function Ue(t, e, n) {
        return t.hasOwnProperty('duration')
          ? t
          : (function (t, e, n) {
              let i,
                s = 0,
                r = '';
              if ('string' == typeof t) {
                const n = t.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                if (null === n)
                  return e.push(`The provided timing value "${t}" is invalid.`), { duration: 0, delay: 0, easing: '' };
                i = Be(parseFloat(n[1]), n[2]);
                const o = n[3];
                null != o && (s = Be(parseFloat(o), n[4]));
                const a = n[5];
                a && (r = a);
              } else i = t;
              if (!n) {
                let n = !1,
                  r = e.length;
                i < 0 && (e.push('Duration values below 0 are not allowed for this animation step.'), (n = !0)),
                  s < 0 && (e.push('Delay values below 0 are not allowed for this animation step.'), (n = !0)),
                  n && e.splice(r, 0, `The provided timing value "${t}" is invalid.`);
              }
              return { duration: i, delay: s, easing: r };
            })(t, e, n);
      }
      function ze(t, e = {}) {
        return (
          Object.keys(t).forEach((n) => {
            e[n] = t[n];
          }),
          e
        );
      }
      function Ye(t, e, n = {}) {
        if (e) for (let i in t) n[i] = t[i];
        else ze(t, n);
        return n;
      }
      function $e(t, e, n) {
        return n ? e + ':' + n + ';' : '';
      }
      function qe(t) {
        let e = '';
        for (let n = 0; n < t.style.length; n++) {
          const i = t.style.item(n);
          e += $e(0, i, t.style.getPropertyValue(i));
        }
        for (const n in t.style)
          t.style.hasOwnProperty(n) &&
            !n.startsWith('_') &&
            (e += $e(0, n.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(), t.style[n]));
        t.setAttribute('style', e);
      }
      function We(t, e, n) {
        t.style &&
          (Object.keys(e).forEach((i) => {
            const s = en(i);
            n && !n.hasOwnProperty(i) && (n[i] = t.style[s]), (t.style[s] = e[i]);
          }),
          ye() && qe(t));
      }
      function Ke(t, e) {
        t.style &&
          (Object.keys(e).forEach((e) => {
            const n = en(e);
            t.style[n] = '';
          }),
          ye() && qe(t));
      }
      function Qe(t) {
        return Array.isArray(t) ? (1 == t.length ? t[0] : he(t)) : t;
      }
      const Ze = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function Ge(t) {
        let e = [];
        if ('string' == typeof t) {
          let n;
          for (; (n = Ze.exec(t)); ) e.push(n[1]);
          Ze.lastIndex = 0;
        }
        return e;
      }
      function Xe(t, e, n) {
        const i = t.toString(),
          s = i.replace(Ze, (t, i) => {
            let s = e[i];
            return (
              e.hasOwnProperty(i) || (n.push('Please provide a value for the animation param ' + i), (s = '')),
              s.toString()
            );
          });
        return s == i ? t : s;
      }
      function Je(t) {
        const e = [];
        let n = t.next();
        for (; !n.done; ) e.push(n.value), (n = t.next());
        return e;
      }
      const tn = /-+([a-z0-9])/g;
      function en(t) {
        return t.replace(tn, (...t) => t[1].toUpperCase());
      }
      function nn(t, e) {
        return 0 === t || 0 === e;
      }
      function sn(t, e, n) {
        const i = Object.keys(n);
        if (i.length && e.length) {
          let r = e[0],
            o = [];
          if (
            (i.forEach((t) => {
              r.hasOwnProperty(t) || o.push(t), (r[t] = n[t]);
            }),
            o.length)
          )
            for (var s = 1; s < e.length; s++) {
              let n = e[s];
              o.forEach(function (e) {
                n[e] = on(t, e);
              });
            }
        }
        return e;
      }
      function rn(t, e, n) {
        switch (e.type) {
          case 7:
            return t.visitTrigger(e, n);
          case 0:
            return t.visitState(e, n);
          case 1:
            return t.visitTransition(e, n);
          case 2:
            return t.visitSequence(e, n);
          case 3:
            return t.visitGroup(e, n);
          case 4:
            return t.visitAnimate(e, n);
          case 5:
            return t.visitKeyframes(e, n);
          case 6:
            return t.visitStyle(e, n);
          case 8:
            return t.visitReference(e, n);
          case 9:
            return t.visitAnimateChild(e, n);
          case 10:
            return t.visitAnimateRef(e, n);
          case 11:
            return t.visitQuery(e, n);
          case 12:
            return t.visitStagger(e, n);
          default:
            throw new Error('Unable to resolve animation metadata node #' + e.type);
        }
      }
      function on(t, e) {
        return window.getComputedStyle(t)[e];
      }
      function an(t, e) {
        const n = [];
        return (
          'string' == typeof t
            ? t.split(/\s*,\s*/).forEach((t) =>
                (function (t, e, n) {
                  if (':' == t[0]) {
                    const i = (function (t, e) {
                      switch (t) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (t, e) => parseFloat(e) > parseFloat(t);
                        case ':decrement':
                          return (t, e) => parseFloat(e) < parseFloat(t);
                        default:
                          return e.push(`The transition alias value "${t}" is not supported`), '* => *';
                      }
                    })(t, n);
                    if ('function' == typeof i) return void e.push(i);
                    t = i;
                  }
                  const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return n.push(`The provided transition expression "${t}" is not supported`), e;
                  const s = i[1],
                    r = i[2],
                    o = i[3];
                  e.push(un(s, o)), '<' != r[0] || ('*' == s && '*' == o) || e.push(un(o, s));
                })(t, n, e)
              )
            : n.push(t),
          n
        );
      }
      const ln = new Set(['true', '1']),
        cn = new Set(['false', '0']);
      function un(t, e) {
        const n = ln.has(t) || cn.has(t),
          i = ln.has(e) || cn.has(e);
        return (s, r) => {
          let o = '*' == t || t == s,
            a = '*' == e || e == r;
          return (
            !o && n && 'boolean' == typeof s && (o = s ? ln.has(t) : cn.has(t)),
            !a && i && 'boolean' == typeof r && (a = r ? ln.has(e) : cn.has(e)),
            o && a
          );
        };
      }
      const hn = new RegExp('s*:selfs*,?', 'g');
      function dn(t, e, n) {
        return new pn(t).build(e, n);
      }
      class pn {
        constructor(t) {
          this._driver = t;
        }
        build(t, e) {
          const n = new mn(e);
          return this._resetContextStyleTimingState(n), rn(this, Qe(t), n);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ''), (t.collectedStyles = {}), (t.collectedStyles[''] = {}), (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let n = (e.queryCount = 0),
            i = (e.depCount = 0);
          const s = [],
            r = [];
          return (
            '@' == t.name.charAt(0) &&
              e.errors.push("animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"),
            t.definitions.forEach((t) => {
              if ((this._resetContextStyleTimingState(e), 0 == t.type)) {
                const n = t,
                  i = n.name;
                i
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((t) => {
                    (n.name = t), s.push(this.visitState(n, e));
                  }),
                  (n.name = i);
              } else if (1 == t.type) {
                const s = this.visitTransition(t, e);
                (n += s.queryCount), (i += s.depCount), r.push(s);
              } else e.errors.push('only state() and transition() definitions can sit inside of a trigger()');
            }),
            { type: 7, name: t.name, states: s, transitions: r, queryCount: n, depCount: i, options: null }
          );
        }
        visitState(t, e) {
          const n = this.visitStyle(t.styles, e),
            i = (t.options && t.options.params) || null;
          if (n.containsDynamicStyles) {
            const s = new Set(),
              r = i || {};
            if (
              (n.styles.forEach((t) => {
                if (fn(t)) {
                  const e = t;
                  Object.keys(e).forEach((t) => {
                    Ge(e[t]).forEach((t) => {
                      r.hasOwnProperty(t) || s.add(t);
                    });
                  });
                }
              }),
              s.size)
            ) {
              const n = Je(s.values());
              e.errors.push(
                `state("${t.name}", ...) must define default values for all the following style substitutions: ${n.join(
                  ', '
                )}`
              );
            }
          }
          return { type: 0, name: t.name, style: n, options: i ? { params: i } : null };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const n = rn(this, Qe(t.animation), e);
          return {
            type: 1,
            matchers: an(t.expr, e.errors),
            animation: n,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: gn(t.options),
          };
        }
        visitSequence(t, e) {
          return { type: 2, steps: t.steps.map((t) => rn(this, t, e)), options: gn(t.options) };
        }
        visitGroup(t, e) {
          const n = e.currentTime;
          let i = 0;
          const s = t.steps.map((t) => {
            e.currentTime = n;
            const s = rn(this, t, e);
            return (i = Math.max(i, e.currentTime)), s;
          });
          return (e.currentTime = i), { type: 3, steps: s, options: gn(t.options) };
        }
        visitAnimate(t, e) {
          const n = (function (t, e) {
            let n = null;
            if (t.hasOwnProperty('duration')) n = t;
            else if ('number' == typeof t) return bn(Ue(t, e).duration, 0, '');
            const i = t;
            if (i.split(/\s+/).some((t) => '{' == t.charAt(0) && '{' == t.charAt(1))) {
              const t = bn(0, 0, '');
              return (t.dynamic = !0), (t.strValue = i), t;
            }
            return (n = n || Ue(i, e)), bn(n.duration, n.delay, n.easing);
          })(t.timings, e.errors);
          let i;
          e.currentAnimateTimings = n;
          let s = t.styles ? t.styles : de({});
          if (5 == s.type) i = this.visitKeyframes(s, e);
          else {
            let s = t.styles,
              r = !1;
            if (!s) {
              r = !0;
              const t = {};
              n.easing && (t.easing = n.easing), (s = de(t));
            }
            e.currentTime += n.duration + n.delay;
            const o = this.visitStyle(s, e);
            (o.isEmptyStep = r), (i = o);
          }
          return (e.currentAnimateTimings = null), { type: 4, timings: n, style: i, options: null };
        }
        visitStyle(t, e) {
          const n = this._makeStyleAst(t, e);
          return this._validateStyleAst(n, e), n;
        }
        _makeStyleAst(t, e) {
          const n = [];
          Array.isArray(t.styles)
            ? t.styles.forEach((t) => {
                'string' == typeof t
                  ? '*' == t
                    ? n.push(t)
                    : e.errors.push(`The provided style string value ${t} is not allowed.`)
                  : n.push(t);
              })
            : n.push(t.styles);
          let i = !1,
            s = null;
          return (
            n.forEach((t) => {
              if (fn(t)) {
                const e = t,
                  n = e.easing;
                if ((n && ((s = n), delete e.easing), !i))
                  for (let t in e)
                    if (e[t].toString().indexOf('{{') >= 0) {
                      i = !0;
                      break;
                    }
              }
            }),
            { type: 6, styles: n, easing: s, offset: t.offset, containsDynamicStyles: i, options: null }
          );
        }
        _validateStyleAst(t, e) {
          const n = e.currentAnimateTimings;
          let i = e.currentTime,
            s = e.currentTime;
          n && s > 0 && (s -= n.duration + n.delay),
            t.styles.forEach((t) => {
              'string' != typeof t &&
                Object.keys(t).forEach((n) => {
                  if (!this._driver.validateStyleProperty(n))
                    return void e.errors.push(
                      `The provided animation property "${n}" is not a supported CSS property for animations`
                    );
                  const r = e.collectedStyles[e.currentQuerySelector],
                    o = r[n];
                  let a = !0;
                  o &&
                    (s != i &&
                      s >= o.startTime &&
                      i <= o.endTime &&
                      (e.errors.push(
                        `The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${s}ms" and "${i}ms"`
                      ),
                      (a = !1)),
                    (s = o.startTime)),
                    a && (r[n] = { startTime: s, endTime: i }),
                    e.options &&
                      (function (t, e, n) {
                        const i = e.params || {},
                          s = Ge(t);
                        s.length &&
                          s.forEach((t) => {
                            i.hasOwnProperty(t) ||
                              n.push(`Unable to resolve the local animation param ${t} in the given list of values`);
                          });
                      })(t[n], e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const n = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return e.errors.push('keyframes() must be placed inside of a call to animate()'), n;
          let i = 0;
          const s = [];
          let r = !1,
            o = !1,
            a = 0;
          const l = t.steps.map((t) => {
            const n = this._makeStyleAst(t, e);
            let l =
                null != n.offset
                  ? n.offset
                  : (function (t) {
                      if ('string' == typeof t) return null;
                      let e = null;
                      if (Array.isArray(t))
                        t.forEach((t) => {
                          if (fn(t) && t.hasOwnProperty('offset')) {
                            const n = t;
                            (e = parseFloat(n.offset)), delete n.offset;
                          }
                        });
                      else if (fn(t) && t.hasOwnProperty('offset')) {
                        const n = t;
                        (e = parseFloat(n.offset)), delete n.offset;
                      }
                      return e;
                    })(n.styles),
              c = 0;
            return (
              null != l && (i++, (c = n.offset = l)), (o = o || c < 0 || c > 1), (r = r || c < a), (a = c), s.push(c), n
            );
          });
          o && e.errors.push('Please ensure that all keyframe offsets are between 0 and 1'),
            r && e.errors.push('Please ensure that all keyframe offsets are in order');
          const c = t.steps.length;
          let u = 0;
          i > 0 && i < c
            ? e.errors.push('Not all style() steps within the declared keyframes() contain offsets')
            : 0 == i && (u = 1 / (c - 1));
          const h = c - 1,
            d = e.currentTime,
            p = e.currentAnimateTimings,
            m = p.duration;
          return (
            l.forEach((t, i) => {
              const r = u > 0 ? (i == h ? 1 : u * i) : s[i],
                o = r * m;
              (e.currentTime = d + p.delay + o),
                (p.duration = o),
                this._validateStyleAst(t, e),
                (t.offset = r),
                n.styles.push(t);
            }),
            n
          );
        }
        visitReference(t, e) {
          return { type: 8, animation: rn(this, Qe(t.animation), e), options: gn(t.options) };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: gn(t.options) };
        }
        visitAnimateRef(t, e) {
          return { type: 10, animation: this.visitReference(t.animation, e), options: gn(t.options) };
        }
        visitQuery(t, e) {
          const n = e.currentQuerySelector,
            i = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [s, r] = (function (t) {
            const e = !!t.split(/\s*,\s*/).find((t) => ':self' == t);
            return (
              e && (t = t.replace(hn, '')),
              [
                (t = t
                  .replace(/@\*/g, '.ng-trigger')
                  .replace(/@\w+/g, (t) => '.ng-trigger-' + t.substr(1))
                  .replace(/:animating/g, '.ng-animating')),
                e,
              ]
            );
          })(t.selector);
          (e.currentQuerySelector = n.length ? n + ' ' + s : s), Ee(e.collectedStyles, e.currentQuerySelector, {});
          const o = rn(this, Qe(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = n),
            {
              type: 11,
              selector: s,
              limit: i.limit || 0,
              optional: !!i.optional,
              includeSelf: r,
              animation: o,
              originalSelector: t.selector,
              options: gn(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery || e.errors.push('stagger() can only be used inside of query()');
          const n = 'full' === t.timings ? { duration: 0, delay: 0, easing: 'full' } : Ue(t.timings, e.errors, !0);
          return { type: 12, animation: rn(this, Qe(t.animation), e), timings: n, options: null };
        }
      }
      class mn {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function fn(t) {
        return !Array.isArray(t) && 'object' == typeof t;
      }
      function gn(t) {
        var e;
        return t ? (t = ze(t)).params && (t.params = (e = t.params) ? ze(e) : null) : (t = {}), t;
      }
      function bn(t, e, n) {
        return { duration: t, delay: e, easing: n };
      }
      function _n(t, e, n, i, s, r, o = null, a = !1) {
        return {
          type: 1,
          element: t,
          keyframes: e,
          preStyleProps: n,
          postStyleProps: i,
          duration: s,
          delay: r,
          totalTime: s + r,
          easing: o,
          subTimeline: a,
        };
      }
      class yn {
        constructor() {
          this._map = new Map();
        }
        consume(t) {
          let e = this._map.get(t);
          return e ? this._map.delete(t) : (e = []), e;
        }
        append(t, e) {
          let n = this._map.get(t);
          n || this._map.set(t, (n = [])), n.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const vn = new RegExp(':enter', 'g'),
        wn = new RegExp(':leave', 'g');
      function xn(t, e, n, i, s, r = {}, o = {}, a, l, c = []) {
        return new Cn().buildKeyframes(t, e, n, i, s, r, o, a, l, c);
      }
      class Cn {
        buildKeyframes(t, e, n, i, s, r, o, a, l, c = []) {
          l = l || new yn();
          const u = new En(t, e, l, i, s, c, []);
          (u.options = a), u.currentTimeline.setStyles([r], null, u.errors, a), rn(this, n, u);
          const h = u.timelines.filter((t) => t.containsAnimation());
          if (h.length && Object.keys(o).length) {
            const t = h[h.length - 1];
            t.allowOnlyTimelineStyles() || t.setStyles([o], null, u.errors, a);
          }
          return h.length ? h.map((t) => t.buildKeyframes()) : [_n(e, [], [], [], 0, 0, '', !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const n = e.subInstructions.consume(e.element);
          if (n) {
            const i = e.createSubContext(t.options),
              s = e.currentTimeline.currentTime,
              r = this._visitSubInstructions(n, i, i.options);
            s != r && e.transformIntoNewTimeline(r);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const n = e.createSubContext(t.options);
          n.transformIntoNewTimeline(),
            this.visitReference(t.animation, n),
            e.transformIntoNewTimeline(n.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _visitSubInstructions(t, e, n) {
          let i = e.currentTimeline.currentTime;
          const s = null != n.duration ? He(n.duration) : null,
            r = null != n.delay ? He(n.delay) : null;
          return (
            0 !== s &&
              t.forEach((t) => {
                const n = e.appendInstructionToTimeline(t, s, r);
                i = Math.max(i, n.duration + n.delay);
              }),
            i
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0), rn(this, t.animation, e), (e.previousNode = t);
        }
        visitSequence(t, e) {
          const n = e.subContextCount;
          let i = e;
          const s = t.options;
          if (
            s &&
            (s.params || s.delay) &&
            ((i = e.createSubContext(s)), i.transformIntoNewTimeline(), null != s.delay)
          ) {
            6 == i.previousNode.type && (i.currentTimeline.snapshotCurrentStyles(), (i.previousNode = Sn));
            const t = He(s.delay);
            i.delayNextStep(t);
          }
          t.steps.length &&
            (t.steps.forEach((t) => rn(this, t, i)),
            i.currentTimeline.applyStylesToKeyframe(),
            i.subContextCount > n && i.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const n = [];
          let i = e.currentTimeline.currentTime;
          const s = t.options && t.options.delay ? He(t.options.delay) : 0;
          t.steps.forEach((r) => {
            const o = e.createSubContext(t.options);
            s && o.delayNextStep(s),
              rn(this, r, o),
              (i = Math.max(i, o.currentTimeline.currentTime)),
              n.push(o.currentTimeline);
          }),
            n.forEach((t) => e.currentTimeline.mergeTimelineCollectedStyles(t)),
            e.transformIntoNewTimeline(i),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const n = t.strValue;
            return Ue(e.params ? Xe(n, e.params, e.errors) : n, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const n = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            i = e.currentTimeline;
          n.delay && (e.incrementTime(n.delay), i.snapshotCurrentStyles());
          const s = t.style;
          5 == s.type
            ? this.visitKeyframes(s, e)
            : (e.incrementTime(n.duration), this.visitStyle(s, e), i.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const n = e.currentTimeline,
            i = e.currentAnimateTimings;
          !i && n.getCurrentStyleProperties().length && n.forwardFrame();
          const s = (i && i.easing) || t.easing;
          t.isEmptyStep ? n.applyEmptyStep(s) : n.setStyles(t.styles, s, e.errors, e.options), (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const n = e.currentAnimateTimings,
            i = e.currentTimeline.duration,
            s = n.duration,
            r = e.createSubContext().currentTimeline;
          (r.easing = n.easing),
            t.styles.forEach((t) => {
              r.forwardTime((t.offset || 0) * s),
                r.setStyles(t.styles, t.easing, e.errors, e.options),
                r.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(r),
            e.transformIntoNewTimeline(i + s),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const n = e.currentTimeline.currentTime,
            i = t.options || {},
            s = i.delay ? He(i.delay) : 0;
          s &&
            (6 === e.previousNode.type || (0 == n && e.currentTimeline.getCurrentStyleProperties().length)) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = Sn));
          let r = n;
          const o = e.invokeQuery(t.selector, t.originalSelector, t.limit, t.includeSelf, !!i.optional, e.errors);
          e.currentQueryTotal = o.length;
          let a = null;
          o.forEach((n, i) => {
            e.currentQueryIndex = i;
            const o = e.createSubContext(t.options, n);
            s && o.delayNextStep(s),
              n === e.element && (a = o.currentTimeline),
              rn(this, t.animation, o),
              o.currentTimeline.applyStylesToKeyframe(),
              (r = Math.max(r, o.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(r),
            a && (e.currentTimeline.mergeTimelineCollectedStyles(a), e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const n = e.parentContext,
            i = e.currentTimeline,
            s = t.timings,
            r = Math.abs(s.duration),
            o = r * (e.currentQueryTotal - 1);
          let a = r * e.currentQueryIndex;
          switch (s.duration < 0 ? 'reverse' : s.easing) {
            case 'reverse':
              a = o - a;
              break;
            case 'full':
              a = n.currentStaggerTime;
          }
          const l = e.currentTimeline;
          a && l.delayNextStep(a);
          const c = l.currentTime;
          rn(this, t.animation, e),
            (e.previousNode = t),
            (n.currentStaggerTime = i.currentTime - c + (i.startTime - n.currentTimeline.startTime));
        }
      }
      const Sn = {};
      class En {
        constructor(t, e, n, i, s, r, o, a) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = n),
            (this._enterClassName = i),
            (this._leaveClassName = s),
            (this.errors = r),
            (this.timelines = o),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Sn),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = a || new kn(this._driver, e, 0)),
            o.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const n = t;
          let i = this.options;
          null != n.duration && (i.duration = He(n.duration)), null != n.delay && (i.delay = He(n.delay));
          const s = n.params;
          if (s) {
            let t = i.params;
            t || (t = this.options.params = {}),
              Object.keys(s).forEach((n) => {
                (e && t.hasOwnProperty(n)) || (t[n] = Xe(s[n], t, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const n = (t.params = {});
              Object.keys(e).forEach((t) => {
                n[t] = e[t];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, n) {
          const i = e || this.element,
            s = new En(
              this._driver,
              i,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(i, n || 0)
            );
          return (
            (s.previousNode = this.previousNode),
            (s.currentAnimateTimings = this.currentAnimateTimings),
            (s.options = this._copyOptions()),
            s.updateOptions(t),
            (s.currentQueryIndex = this.currentQueryIndex),
            (s.currentQueryTotal = this.currentQueryTotal),
            (s.parentContext = this),
            this.subContextCount++,
            s
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = Sn),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, n) {
          const i = {
              duration: null != e ? e : t.duration,
              delay: this.currentTimeline.currentTime + (null != n ? n : 0) + t.delay,
              easing: '',
            },
            s = new On(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              i,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(s), i;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, n, i, s, r) {
          let o = [];
          if ((i && o.push(this.element), t.length > 0)) {
            t = (t = t.replace(vn, '.' + this._enterClassName)).replace(wn, '.' + this._leaveClassName);
            let e = this._driver.query(this.element, t, 1 != n);
            0 !== n && (e = n < 0 ? e.slice(e.length + n, e.length) : e.slice(0, n)), o.push(...e);
          }
          return (
            s ||
              0 != o.length ||
              r.push(
                `\`query("${e}")\` returned zero elements. (Use \`query("${e}", { optional: true })\` if you wish to allow this.)`
              ),
            o
          );
        }
      }
      class kn {
        constructor(t, e, n, i) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = n),
            (this._elementTimelineStylesLookup = i),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles = this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(e, this._localTimelineStyles)),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 == this._keyframes.size && Object.keys(this._pendingStyles).length;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t), e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new kn(this._driver, t, e || this.currentTime, this._elementTimelineStylesLookup)
          );
        }
        _loadKeyframe() {
          this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(), (this.duration = t), this._loadKeyframe();
        }
        _updateStyle(t, e) {
          (this._localTimelineStyles[t] = e),
            (this._globalTimelineStyles[t] = e),
            (this._styleSummary[t] = { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && (this._previousKeyframe.easing = t),
            Object.keys(this._globalTimelineStyles).forEach((t) => {
              (this._backFill[t] = this._globalTimelineStyles[t] || '*'), (this._currentKeyframe[t] = '*');
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(t, e, n, i) {
          e && (this._previousKeyframe.easing = e);
          const s = (i && i.params) || {},
            r = (function (t, e) {
              const n = {};
              let i;
              return (
                t.forEach((t) => {
                  '*' === t
                    ? ((i = i || Object.keys(e)),
                      i.forEach((t) => {
                        n[t] = '*';
                      }))
                    : Ye(t, !1, n);
                }),
                n
              );
            })(t, this._globalTimelineStyles);
          Object.keys(r).forEach((t) => {
            const e = Xe(r[t], s, n);
            (this._pendingStyles[t] = e),
              this._localTimelineStyles.hasOwnProperty(t) ||
                (this._backFill[t] = this._globalTimelineStyles.hasOwnProperty(t)
                  ? this._globalTimelineStyles[t]
                  : '*'),
              this._updateStyle(t, e);
          });
        }
        applyStylesToKeyframe() {
          const t = this._pendingStyles,
            e = Object.keys(t);
          0 != e.length &&
            ((this._pendingStyles = {}),
            e.forEach((e) => {
              this._currentKeyframe[e] = t[e];
            }),
            Object.keys(this._localTimelineStyles).forEach((t) => {
              this._currentKeyframe.hasOwnProperty(t) || (this._currentKeyframe[t] = this._localTimelineStyles[t]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((t) => {
            const e = this._localTimelineStyles[t];
            (this._pendingStyles[t] = e), this._updateStyle(t, e);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          Object.keys(t._styleSummary).forEach((e) => {
            const n = this._styleSummary[e],
              i = t._styleSummary[e];
            (!n || i.time > n.time) && this._updateStyle(e, i.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            n = 1 === this._keyframes.size && 0 === this.duration;
          let i = [];
          this._keyframes.forEach((s, r) => {
            const o = Ye(s, !0);
            Object.keys(o).forEach((n) => {
              const i = o[n];
              '!' == i ? t.add(n) : '*' == i && e.add(n);
            }),
              n || (o.offset = r / this.duration),
              i.push(o);
          });
          const s = t.size ? Je(t.values()) : [],
            r = e.size ? Je(e.values()) : [];
          if (n) {
            const t = i[0],
              e = ze(t);
            (t.offset = 0), (e.offset = 1), (i = [t, e]);
          }
          return _n(this.element, i, s, r, this.duration, this.startTime, this.easing, !1);
        }
      }
      class On extends kn {
        constructor(t, e, n, i, s, r, o = !1) {
          super(t, e, r.delay),
            (this.element = e),
            (this.keyframes = n),
            (this.preStyleProps = i),
            (this.postStyleProps = s),
            (this._stretchStartingKeyframe = o),
            (this.timings = { duration: r.duration, delay: r.delay, easing: r.easing });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: n, easing: i } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const s = [],
              r = n + e,
              o = e / r,
              a = Ye(t[0], !1);
            (a.offset = 0), s.push(a);
            const l = Ye(t[0], !1);
            (l.offset = An(o)), s.push(l);
            const c = t.length - 1;
            for (let i = 1; i <= c; i++) {
              let o = Ye(t[i], !1);
              (o.offset = An((e + o.offset * n) / r)), s.push(o);
            }
            (n = r), (e = 0), (i = ''), (t = s);
          }
          return _n(this.element, t, this.preStyleProps, this.postStyleProps, n, e, i, !0);
        }
      }
      function An(t, e = 3) {
        const n = Math.pow(10, e - 1);
        return Math.round(t * n) / n;
      }
      class Tn {}
      class In extends Tn {
        normalizePropertyName(t, e) {
          return en(t);
        }
        normalizeStyleValue(t, e, n, i) {
          let s = '';
          const r = n.toString().trim();
          if (Rn[e] && 0 !== n && '0' !== n)
            if ('number' == typeof n) s = 'px';
            else {
              const e = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              e && 0 == e[1].length && i.push(`Please provide a CSS unit value for ${t}:${n}`);
            }
          return r + s;
        }
      }
      const Rn = (() =>
        (function (t) {
          const e = {};
          return t.forEach((t) => (e[t] = !0)), e;
        })(
          'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
            ','
          )
        ))();
      function Pn(t, e, n, i, s, r, o, a, l, c, u, h, d) {
        return {
          type: 0,
          element: t,
          triggerName: e,
          isRemovalTransition: s,
          fromState: n,
          fromStyles: r,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: h,
          errors: d,
        };
      }
      const Dn = {};
      class jn {
        constructor(t, e, n) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = n);
        }
        match(t, e, n, i) {
          return (function (t, e, n, i, s) {
            return t.some((t) => t(e, n, i, s));
          })(this.ast.matchers, t, e, n, i);
        }
        buildStyles(t, e, n) {
          const i = this._stateStyles['*'],
            s = this._stateStyles[t],
            r = i ? i.buildStyles(e, n) : {};
          return s ? s.buildStyles(e, n) : r;
        }
        build(t, e, n, i, s, r, o, a, l, c) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || Dn,
            d = this.buildStyles(n, (o && o.params) || Dn, u),
            p = (a && a.params) || Dn,
            m = this.buildStyles(i, p, u),
            f = new Set(),
            g = new Map(),
            b = new Map(),
            _ = 'void' === i,
            y = { params: Object.assign(Object.assign({}, h), p) },
            v = c ? [] : xn(t, e, this.ast.animation, s, r, d, m, y, l, u);
          let w = 0;
          if (
            (v.forEach((t) => {
              w = Math.max(t.duration + t.delay, w);
            }),
            u.length)
          )
            return Pn(e, this._triggerName, n, i, _, d, m, [], [], g, b, w, u);
          v.forEach((t) => {
            const n = t.element,
              i = Ee(g, n, {});
            t.preStyleProps.forEach((t) => (i[t] = !0));
            const s = Ee(b, n, {});
            t.postStyleProps.forEach((t) => (s[t] = !0)), n !== e && f.add(n);
          });
          const x = Je(f.values());
          return Pn(e, this._triggerName, n, i, _, d, m, v, x, g, b, w);
        }
      }
      class Ln {
        constructor(t, e) {
          (this.styles = t), (this.defaultParams = e);
        }
        buildStyles(t, e) {
          const n = {},
            i = ze(this.defaultParams);
          return (
            Object.keys(t).forEach((e) => {
              const n = t[e];
              null != n && (i[e] = n);
            }),
            this.styles.styles.forEach((t) => {
              if ('string' != typeof t) {
                const s = t;
                Object.keys(s).forEach((t) => {
                  let r = s[t];
                  r.length > 1 && (r = Xe(r, i, e)), (n[t] = r);
                });
              }
            }),
            n
          );
        }
      }
      class Mn {
        constructor(t, e) {
          (this.name = t),
            (this.ast = e),
            (this.transitionFactories = []),
            (this.states = {}),
            e.states.forEach((t) => {
              this.states[t.name] = new Ln(t.style, (t.options && t.options.params) || {});
            }),
            Nn(this.states, 'true', '1'),
            Nn(this.states, 'false', '0'),
            e.transitions.forEach((e) => {
              this.transitionFactories.push(new jn(t, e, this.states));
            }),
            (this.fallbackTransition = new jn(
              t,
              {
                type: 1,
                animation: { type: 2, steps: [], options: null },
                matchers: [(t, e) => !0],
                options: null,
                queryCount: 0,
                depCount: 0,
              },
              this.states
            ));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, n, i) {
          return this.transitionFactories.find((s) => s.match(t, e, n, i)) || null;
        }
        matchStyles(t, e, n) {
          return this.fallbackTransition.buildStyles(t, e, n);
        }
      }
      function Nn(t, e, n) {
        t.hasOwnProperty(e) ? t.hasOwnProperty(n) || (t[n] = t[e]) : t.hasOwnProperty(n) && (t[e] = t[n]);
      }
      const Fn = new yn();
      class Vn {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = n),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(t, e) {
          const n = [],
            i = dn(this._driver, e, n);
          if (n.length) throw new Error('Unable to build the animation due to the following errors: ' + n.join('\n'));
          this._animations[t] = i;
        }
        _buildPlayer(t, e, n) {
          const i = t.element,
            s = we(0, this._normalizer, 0, t.keyframes, e, n);
          return this._driver.animate(i, s, t.duration, t.delay, t.easing, [], !0);
        }
        create(t, e, n = {}) {
          const i = [],
            s = this._animations[t];
          let r;
          const o = new Map();
          if (
            (s
              ? ((r = xn(this._driver, e, s, 'ng-enter', 'ng-leave', {}, {}, n, Fn, i)),
                r.forEach((t) => {
                  const e = Ee(o, t.element, {});
                  t.postStyleProps.forEach((t) => (e[t] = null));
                }))
              : (i.push("The requested animation doesn't exist or has already been destroyed"), (r = [])),
            i.length)
          )
            throw new Error('Unable to create the animation due to the following errors: ' + i.join('\n'));
          o.forEach((t, e) => {
            Object.keys(t).forEach((n) => {
              t[n] = this._driver.computeStyle(e, n, '*');
            });
          });
          const a = ve(
            r.map((t) => {
              const e = o.get(t.element);
              return this._buildPlayer(t, {}, e);
            })
          );
          return (this._playersById[t] = a), a.onDestroy(() => this.destroy(t)), this.players.push(a), a;
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), delete this._playersById[t];
          const n = this.players.indexOf(e);
          n >= 0 && this.players.splice(n, 1);
        }
        _getPlayer(t) {
          const e = this._playersById[t];
          if (!e) throw new Error('Unable to find the timeline player referenced by ' + t);
          return e;
        }
        listen(t, e, n, i) {
          const s = Se(e, '', '', '');
          return xe(this._getPlayer(t), n, s, i), () => {};
        }
        command(t, e, n, i) {
          if ('register' == n) return void this.register(t, i[0]);
          if ('create' == n) return void this.create(t, e, i[0] || {});
          const s = this._getPlayer(t);
          switch (n) {
            case 'play':
              s.play();
              break;
            case 'pause':
              s.pause();
              break;
            case 'reset':
              s.reset();
              break;
            case 'restart':
              s.restart();
              break;
            case 'finish':
              s.finish();
              break;
            case 'init':
              s.init();
              break;
            case 'setPosition':
              s.setPosition(parseFloat(i[0]));
              break;
            case 'destroy':
              this.destroy(t);
          }
        }
      }
      const Hn = [],
        Bn = { namespaceId: '', setForRemoval: !1, setForMove: !1, hasAnimation: !1, removedBeforeQueried: !1 },
        Un = { namespaceId: '', setForMove: !1, setForRemoval: !1, hasAnimation: !1, removedBeforeQueried: !0 };
      class zn {
        constructor(t, e = '') {
          this.namespaceId = e;
          const n = t && t.hasOwnProperty('value');
          if (((this.value = null != (i = n ? t.value : t) ? i : null), n)) {
            const e = ze(t);
            delete e.value, (this.options = e);
          } else this.options = {};
          var i;
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const t = this.options.params;
            Object.keys(e).forEach((n) => {
              null == t[n] && (t[n] = e[n]);
            });
          }
        }
      }
      const Yn = new zn('void');
      class $n {
        constructor(t, e, n) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = n),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + t),
            Xn(e, this._hostClassName);
        }
        listen(t, e, n, i) {
          if (!this._triggers.hasOwnProperty(e))
            throw new Error(
              `Unable to listen on the animation trigger event "${n}" because the animation trigger "${e}" doesn't exist!`
            );
          if (null == n || 0 == n.length)
            throw new Error(
              `Unable to listen on the animation trigger "${e}" because the provided event is undefined!`
            );
          if ('start' != (s = n) && 'done' != s)
            throw new Error(
              `The provided animation trigger event "${n}" for the animation trigger "${e}" is not supported!`
            );
          var s;
          const r = Ee(this._elementListeners, t, []),
            o = { name: e, phase: n, callback: i };
          r.push(o);
          const a = Ee(this._engine.statesByElement, t, {});
          return (
            a.hasOwnProperty(e) || (Xn(t, 'ng-trigger'), Xn(t, 'ng-trigger-' + e), (a[e] = Yn)),
            () => {
              this._engine.afterFlush(() => {
                const t = r.indexOf(o);
                t >= 0 && r.splice(t, 1), this._triggers[e] || delete a[e];
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers[t] && ((this._triggers[t] = e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers[t];
          if (!e) throw new Error(`The provided animation trigger "${t}" has not been registered!`);
          return e;
        }
        trigger(t, e, n, i = !0) {
          const s = this._getTrigger(e),
            r = new Wn(this.id, e, t);
          let o = this._engine.statesByElement.get(t);
          o || (Xn(t, 'ng-trigger'), Xn(t, 'ng-trigger-' + e), this._engine.statesByElement.set(t, (o = {})));
          let a = o[e];
          const l = new zn(n, this.id);
          if (
            (!(n && n.hasOwnProperty('value')) && a && l.absorbOptions(a.options),
            (o[e] = l),
            a || (a = Yn),
            'void' !== l.value && a.value === l.value)
          ) {
            if (
              !(function (t, e) {
                const n = Object.keys(t),
                  i = Object.keys(e);
                if (n.length != i.length) return !1;
                for (let s = 0; s < n.length; s++) {
                  const i = n[s];
                  if (!e.hasOwnProperty(i) || t[i] !== e[i]) return !1;
                }
                return !0;
              })(a.params, l.params)
            ) {
              const e = [],
                n = s.matchStyles(a.value, a.params, e),
                i = s.matchStyles(l.value, l.params, e);
              e.length
                ? this._engine.reportError(e)
                : this._engine.afterFlush(() => {
                    Ke(t, n), We(t, i);
                  });
            }
            return;
          }
          const c = Ee(this._engine.playersByElement, t, []);
          c.forEach((t) => {
            t.namespaceId == this.id && t.triggerName == e && t.queued && t.destroy();
          });
          let u = s.matchTransition(a.value, l.value, t, l.params),
            h = !1;
          if (!u) {
            if (!i) return;
            (u = s.fallbackTransition), (h = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: u,
              fromState: a,
              toState: l,
              player: r,
              isFallbackTransition: h,
            }),
            h ||
              (Xn(t, 'ng-animate-queued'),
              r.onStart(() => {
                Jn(t, 'ng-animate-queued');
              })),
            r.onDone(() => {
              let e = this.players.indexOf(r);
              e >= 0 && this.players.splice(e, 1);
              const n = this._engine.playersByElement.get(t);
              if (n) {
                let t = n.indexOf(r);
                t >= 0 && n.splice(t, 1);
              }
            }),
            this.players.push(r),
            c.push(r),
            r
          );
        }
        deregister(t) {
          delete this._triggers[t],
            this._engine.statesByElement.forEach((e, n) => {
              delete e[t];
            }),
            this._elementListeners.forEach((e, n) => {
              this._elementListeners.set(
                n,
                e.filter((e) => e.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t), this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e && (e.forEach((t) => t.destroy()), this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const n = this._engine.driver.query(t, '.ng-trigger', !0);
          n.forEach((t) => {
            if (t.__ng_removed) return;
            const n = this._engine.fetchNamespacesByElement(t);
            n.size ? n.forEach((n) => n.triggerLeaveAnimation(t, e, !1, !0)) : this.clearElementCache(t);
          }),
            this._engine.afterFlushAnimationsDone(() => n.forEach((t) => this.clearElementCache(t)));
        }
        triggerLeaveAnimation(t, e, n, i) {
          const s = this._engine.statesByElement.get(t);
          if (s) {
            const r = [];
            if (
              (Object.keys(s).forEach((e) => {
                if (this._triggers[e]) {
                  const n = this.trigger(t, e, 'void', i);
                  n && r.push(n);
                }
              }),
              r.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e),
                n && ve(r).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t);
          if (e) {
            const n = new Set();
            e.forEach((e) => {
              const i = e.name;
              if (n.has(i)) return;
              n.add(i);
              const s = this._triggers[i].fallbackTransition,
                r = this._engine.statesByElement.get(t)[i] || Yn,
                o = new zn('void'),
                a = new Wn(this.id, i, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: i,
                  transition: s,
                  fromState: r,
                  toState: o,
                  player: a,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const n = this._engine;
          if ((t.childElementCount && this._signalRemovalForInnerTriggers(t, e), this.triggerLeaveAnimation(t, e, !0)))
            return;
          let i = !1;
          if (n.totalAnimations) {
            const e = n.players.length ? n.playersByQueriedElement.get(t) : [];
            if (e && e.length) i = !0;
            else {
              let e = t;
              for (; (e = e.parentNode); )
                if (n.statesByElement.get(e)) {
                  i = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), i)) n.markElementAsRemoved(this.id, t, !1, e);
          else {
            const i = t.__ng_removed;
            (i && i !== Bn) ||
              (n.afterFlush(() => this.clearElementCache(t)), n.destroyInnerAnimations(t), n._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          Xn(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((n) => {
              const i = n.player;
              if (i.destroyed) return;
              const s = n.element,
                r = this._elementListeners.get(s);
              r &&
                r.forEach((e) => {
                  if (e.name == n.triggerName) {
                    const i = Se(s, n.triggerName, n.fromState.value, n.toState.value);
                    (i._data = t), xe(n.player, e.phase, i, e.callback);
                  }
                }),
                i.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      i.destroy();
                    })
                  : e.push(n);
            }),
            (this._queue = []),
            e.sort((t, e) => {
              const n = t.transition.ast.depCount,
                i = e.transition.ast.depCount;
              return 0 == n || 0 == i ? n - i : this._engine.driver.containsElement(t.element, e.element) ? 1 : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((t) => t.destroy()), this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return this._elementListeners.has(t) && (e = !0), (e = !!this._queue.find((e) => e.element === t) || e), e;
        }
      }
      class qn {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = n),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (t, e) => {});
        }
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((e) => {
                e.queued && t.push(e);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const n = new $n(t, e, this);
          return (
            e.parentNode
              ? this._balanceNamespaceList(n, e)
              : (this.newHostElements.set(e, n), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = n)
          );
        }
        _balanceNamespaceList(t, e) {
          const n = this._namespaceList.length - 1;
          if (n >= 0) {
            let i = !1;
            for (let s = n; s >= 0; s--)
              if (this.driver.containsElement(this._namespaceList[s].hostElement, e)) {
                this._namespaceList.splice(s + 1, 0, t), (i = !0);
                break;
              }
            i || this._namespaceList.splice(0, 0, t);
          } else this._namespaceList.push(t);
          return this.namespacesByHostElement.set(e, t), t;
        }
        register(t, e) {
          let n = this._namespaceLookup[t];
          return n || (n = this.createNamespace(t, e)), n;
        }
        registerTrigger(t, e, n) {
          let i = this._namespaceLookup[t];
          i && i.register(e, n) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const n = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(n.hostElement), delete this._namespaceLookup[t];
            const e = this._namespaceList.indexOf(n);
            e >= 0 && this._namespaceList.splice(e, 1);
          }),
            this.afterFlushAnimationsDone(() => n.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            n = this.statesByElement.get(t);
          if (n) {
            const t = Object.keys(n);
            for (let i = 0; i < t.length; i++) {
              const s = n[t[i]].namespaceId;
              if (s) {
                const t = this._fetchNamespace(s);
                t && e.add(t);
              }
            }
          }
          return e;
        }
        trigger(t, e, n, i) {
          if (Kn(e)) {
            const s = this._fetchNamespace(t);
            if (s) return s.trigger(e, n, i), !0;
          }
          return !1;
        }
        insertNode(t, e, n, i) {
          if (!Kn(e)) return;
          const s = e.__ng_removed;
          if (s && s.setForRemoval) {
            (s.setForRemoval = !1), (s.setForMove = !0);
            const t = this.collectedLeaveElements.indexOf(e);
            t >= 0 && this.collectedLeaveElements.splice(t, 1);
          }
          if (t) {
            const i = this._fetchNamespace(t);
            i && i.insertNode(e, n);
          }
          i && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) || (this.disabledNodes.add(t), Xn(t, 'ng-animate-disabled'))
            : this.disabledNodes.has(t) && (this.disabledNodes.delete(t), Jn(t, 'ng-animate-disabled'));
        }
        removeNode(t, e, n, i) {
          if (Kn(e)) {
            const s = t ? this._fetchNamespace(t) : null;
            if ((s ? s.removeNode(e, i) : this.markElementAsRemoved(t, e, !1, i), n)) {
              const n = this.namespacesByHostElement.get(e);
              n && n.id !== t && n.removeNode(e, i);
            }
          } else this._onRemovalComplete(e, i);
        }
        markElementAsRemoved(t, e, n, i) {
          this.collectedLeaveElements.push(e),
            (e.__ng_removed = { namespaceId: t, setForRemoval: i, hasAnimation: n, removedBeforeQueried: !1 });
        }
        listen(t, e, n, i, s) {
          return Kn(e) ? this._fetchNamespace(t).listen(e, n, i, s) : () => {};
        }
        _buildInstruction(t, e, n, i, s) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            n,
            i,
            t.fromState.options,
            t.toState.options,
            e,
            s
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, '.ng-trigger', !0);
          e.forEach((t) => this.destroyActiveAnimationsForElement(t)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, '.ng-animating', !0)),
              e.forEach((t) => this.finishActiveQueriedAnimationOnElement(t)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((t) => {
              t.queued ? (t.markedForDestroy = !0) : t.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((t) => t.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return ve(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t.__ng_removed;
          if (e && e.setForRemoval) {
            if (((t.__ng_removed = Bn), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const n = this._fetchNamespace(e.namespaceId);
              n && n.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          this.driver.matchesElement(t, '.ng-animate-disabled') && this.markElementAsDisabled(t, !1),
            this.driver.query(t, '.ng-animate-disabled', !0).forEach((t) => {
              this.markElementAsDisabled(t, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((t, e) => this._balanceNamespaceList(t, e)), this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let n = 0; n < this.collectedEnterElements.length; n++)
              Xn(this.collectedEnterElements[n], 'ng-star-inserted');
          if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
            const n = [];
            try {
              e = this._flushAnimations(n, t);
            } finally {
              for (let t = 0; t < n.length; t++) n[t]();
            }
          } else
            for (let n = 0; n < this.collectedLeaveElements.length; n++)
              this.processLeaveNode(this.collectedLeaveElements[n]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((t) => t()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const t = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? ve(e).onDone(() => {
                    t.forEach((t) => t());
                  })
                : t.forEach((t) => t());
          }
        }
        reportError(t) {
          throw new Error(
            'Unable to process animations due to the following failed trigger transitions\n ' + t.join('\n')
          );
        }
        _flushAnimations(t, e) {
          const n = new yn(),
            i = [],
            s = new Map(),
            r = [],
            o = new Map(),
            a = new Map(),
            l = new Map(),
            c = new Set();
          this.disabledNodes.forEach((t) => {
            c.add(t);
            const e = this.driver.query(t, '.ng-animate-queued', !0);
            for (let n = 0; n < e.length; n++) c.add(e[n]);
          });
          const u = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            d = Gn(h, this.collectedEnterElements),
            p = new Map();
          let m = 0;
          d.forEach((t, e) => {
            const n = 'ng-enter' + m++;
            p.set(e, n), t.forEach((t) => Xn(t, n));
          });
          const f = [],
            g = new Set(),
            b = new Set();
          for (let I = 0; I < this.collectedLeaveElements.length; I++) {
            const t = this.collectedLeaveElements[I],
              e = t.__ng_removed;
            e &&
              e.setForRemoval &&
              (f.push(t),
              g.add(t),
              e.hasAnimation ? this.driver.query(t, '.ng-star-inserted', !0).forEach((t) => g.add(t)) : b.add(t));
          }
          const _ = new Map(),
            y = Gn(h, Array.from(g));
          y.forEach((t, e) => {
            const n = 'ng-leave' + m++;
            _.set(e, n), t.forEach((t) => Xn(t, n));
          }),
            t.push(() => {
              d.forEach((t, e) => {
                const n = p.get(e);
                t.forEach((t) => Jn(t, n));
              }),
                y.forEach((t, e) => {
                  const n = _.get(e);
                  t.forEach((t) => Jn(t, n));
                }),
                f.forEach((t) => {
                  this.processLeaveNode(t);
                });
            });
          const v = [],
            w = [];
          for (let I = this._namespaceList.length - 1; I >= 0; I--)
            this._namespaceList[I].drainQueuedTransitions(e).forEach((t) => {
              const e = t.player,
                s = t.element;
              if ((v.push(e), this.collectedEnterElements.length)) {
                const t = s.__ng_removed;
                if (t && t.setForMove) return void e.destroy();
              }
              const c = !u || !this.driver.containsElement(u, s),
                h = _.get(s),
                d = p.get(s),
                m = this._buildInstruction(t, n, d, h, c);
              if (m.errors && m.errors.length) w.push(m);
              else {
                if (c)
                  return e.onStart(() => Ke(s, m.fromStyles)), e.onDestroy(() => We(s, m.toStyles)), void i.push(e);
                if (t.isFallbackTransition)
                  return e.onStart(() => Ke(s, m.fromStyles)), e.onDestroy(() => We(s, m.toStyles)), void i.push(e);
                m.timelines.forEach((t) => (t.stretchStartingKeyframe = !0)),
                  n.append(s, m.timelines),
                  r.push({ instruction: m, player: e, element: s }),
                  m.queriedElements.forEach((t) => Ee(o, t, []).push(e)),
                  m.preStyleProps.forEach((t, e) => {
                    const n = Object.keys(t);
                    if (n.length) {
                      let t = a.get(e);
                      t || a.set(e, (t = new Set())), n.forEach((e) => t.add(e));
                    }
                  }),
                  m.postStyleProps.forEach((t, e) => {
                    const n = Object.keys(t);
                    let i = l.get(e);
                    i || l.set(e, (i = new Set())), n.forEach((t) => i.add(t));
                  });
              }
            });
          if (w.length) {
            const t = [];
            w.forEach((e) => {
              t.push(`@${e.triggerName} has failed due to:\n`), e.errors.forEach((e) => t.push(`- ${e}\n`));
            }),
              v.forEach((t) => t.destroy()),
              this.reportError(t);
          }
          const x = new Map(),
            C = new Map();
          r.forEach((t) => {
            const e = t.element;
            n.has(e) && (C.set(e, e), this._beforeAnimationBuild(t.player.namespaceId, t.instruction, x));
          }),
            i.forEach((t) => {
              const e = t.element;
              this._getPreviousPlayers(e, !1, t.namespaceId, t.triggerName, null).forEach((t) => {
                Ee(x, e, []).push(t), t.destroy();
              });
            });
          const S = f.filter((t) => ei(t, a, l)),
            E = new Map();
          Zn(E, this.driver, b, l, '*').forEach((t) => {
            ei(t, a, l) && S.push(t);
          });
          const k = new Map();
          d.forEach((t, e) => {
            Zn(k, this.driver, new Set(t), a, '!');
          }),
            S.forEach((t) => {
              const e = E.get(t),
                n = k.get(t);
              E.set(t, Object.assign(Object.assign({}, e), n));
            });
          const O = [],
            A = [],
            T = {};
          r.forEach((t) => {
            const { element: e, player: r, instruction: o } = t;
            if (n.has(e)) {
              if (c.has(e))
                return (
                  r.onDestroy(() => We(e, o.toStyles)),
                  (r.disabled = !0),
                  r.overrideTotalTime(o.totalTime),
                  void i.push(r)
                );
              let t = T;
              if (C.size > 1) {
                let n = e;
                const i = [];
                for (; (n = n.parentNode); ) {
                  const e = C.get(n);
                  if (e) {
                    t = e;
                    break;
                  }
                  i.push(n);
                }
                i.forEach((e) => C.set(e, t));
              }
              const n = this._buildAnimation(r.namespaceId, o, x, s, k, E);
              if ((r.setRealPlayer(n), t === T)) O.push(r);
              else {
                const e = this.playersByElement.get(t);
                e && e.length && (r.parentPlayer = ve(e)), i.push(r);
              }
            } else Ke(e, o.fromStyles), r.onDestroy(() => We(e, o.toStyles)), A.push(r), c.has(e) && i.push(r);
          }),
            A.forEach((t) => {
              const e = s.get(t.element);
              if (e && e.length) {
                const n = ve(e);
                t.setRealPlayer(n);
              }
            }),
            i.forEach((t) => {
              t.parentPlayer ? t.syncPlayerEvents(t.parentPlayer) : t.destroy();
            });
          for (let I = 0; I < f.length; I++) {
            const t = f[I],
              e = t.__ng_removed;
            if ((Jn(t, 'ng-leave'), e && e.hasAnimation)) continue;
            let n = [];
            if (o.size) {
              let e = o.get(t);
              e && e.length && n.push(...e);
              let i = this.driver.query(t, '.ng-animating', !0);
              for (let t = 0; t < i.length; t++) {
                let e = o.get(i[t]);
                e && e.length && n.push(...e);
              }
            }
            const i = n.filter((t) => !t.destroyed);
            i.length ? ti(this, t, i) : this.processLeaveNode(t);
          }
          return (
            (f.length = 0),
            O.forEach((t) => {
              this.players.push(t),
                t.onDone(() => {
                  t.destroy();
                  const e = this.players.indexOf(t);
                  this.players.splice(e, 1);
                }),
                t.play();
            }),
            O
          );
        }
        elementContainsData(t, e) {
          let n = !1;
          const i = e.__ng_removed;
          return (
            i && i.setForRemoval && (n = !0),
            this.playersByElement.has(e) && (n = !0),
            this.playersByQueriedElement.has(e) && (n = !0),
            this.statesByElement.has(e) && (n = !0),
            this._fetchNamespace(t).elementContainsData(e) || n
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, n, i, s) {
          let r = [];
          if (e) {
            const e = this.playersByQueriedElement.get(t);
            e && (r = e);
          } else {
            const e = this.playersByElement.get(t);
            if (e) {
              const t = !s || 'void' == s;
              e.forEach((e) => {
                e.queued || ((t || e.triggerName == i) && r.push(e));
              });
            }
          }
          return (n || i) && (r = r.filter((t) => !((n && n != t.namespaceId) || (i && i != t.triggerName)))), r;
        }
        _beforeAnimationBuild(t, e, n) {
          const i = e.element,
            s = e.isRemovalTransition ? void 0 : t,
            r = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const o of e.timelines) {
            const t = o.element,
              a = t !== i,
              l = Ee(n, t, []);
            this._getPreviousPlayers(t, a, s, r, e.toState).forEach((t) => {
              const e = t.getRealPlayer();
              e.beforeDestroy && e.beforeDestroy(), t.destroy(), l.push(t);
            });
          }
          Ke(i, e.fromStyles);
        }
        _buildAnimation(t, e, n, i, s, r) {
          const o = e.triggerName,
            a = e.element,
            l = [],
            c = new Set(),
            u = new Set(),
            h = e.timelines.map((e) => {
              const h = e.element;
              c.add(h);
              const d = h.__ng_removed;
              if (d && d.removedBeforeQueried) return new be(e.duration, e.delay);
              const p = h !== a,
                m = (function (t) {
                  const e = [];
                  return (
                    (function t(e, n) {
                      for (let i = 0; i < e.length; i++) {
                        const s = e[i];
                        s instanceof _e ? t(s.players, n) : n.push(s);
                      }
                    })(t, e),
                    e
                  );
                })((n.get(h) || Hn).map((t) => t.getRealPlayer())).filter((t) => !!t.element && t.element === h),
                f = s.get(h),
                g = r.get(h),
                b = we(0, this._normalizer, 0, e.keyframes, f, g),
                _ = this._buildPlayer(e, b, m);
              if ((e.subTimeline && i && u.add(h), p)) {
                const e = new Wn(t, o, h);
                e.setRealPlayer(_), l.push(e);
              }
              return _;
            });
          l.forEach((t) => {
            Ee(this.playersByQueriedElement, t.element, []).push(t),
              t.onDone(() =>
                (function (t, e, n) {
                  let i;
                  if (t instanceof Map) {
                    if (((i = t.get(e)), i)) {
                      if (i.length) {
                        const t = i.indexOf(n);
                        i.splice(t, 1);
                      }
                      0 == i.length && t.delete(e);
                    }
                  } else if (((i = t[e]), i)) {
                    if (i.length) {
                      const t = i.indexOf(n);
                      i.splice(t, 1);
                    }
                    0 == i.length && delete t[e];
                  }
                  return i;
                })(this.playersByQueriedElement, t.element, t)
              );
          }),
            c.forEach((t) => Xn(t, 'ng-animating'));
          const d = ve(h);
          return (
            d.onDestroy(() => {
              c.forEach((t) => Jn(t, 'ng-animating')), We(a, e.toStyles);
            }),
            u.forEach((t) => {
              Ee(i, t, []).push(d);
            }),
            d
          );
        }
        _buildPlayer(t, e, n) {
          return e.length > 0
            ? this.driver.animate(t.element, e, t.duration, t.delay, t.easing, n)
            : new be(t.duration, t.delay);
        }
      }
      class Wn {
        constructor(t, e, n) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = n),
            (this._player = new be()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            Object.keys(this._queuedCallbacks).forEach((e) => {
              this._queuedCallbacks[e].forEach((n) => xe(t, e, void 0, n));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback('start')),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          Ee(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent('done', t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent('start', t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent('destroy', t), this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function Kn(t) {
        return t && 1 === t.nodeType;
      }
      function Qn(t, e) {
        const n = t.style.display;
        return (t.style.display = null != e ? e : 'none'), n;
      }
      function Zn(t, e, n, i, s) {
        const r = [];
        n.forEach((t) => r.push(Qn(t)));
        const o = [];
        i.forEach((n, i) => {
          const r = {};
          n.forEach((t) => {
            const n = (r[t] = e.computeStyle(i, t, s));
            (n && 0 != n.length) || ((i.__ng_removed = Un), o.push(i));
          }),
            t.set(i, r);
        });
        let a = 0;
        return n.forEach((t) => Qn(t, r[a++])), o;
      }
      function Gn(t, e) {
        const n = new Map();
        if ((t.forEach((t) => n.set(t, [])), 0 == e.length)) return n;
        const i = new Set(e),
          s = new Map();
        return (
          e.forEach((t) => {
            const e = (function t(e) {
              if (!e) return 1;
              let r = s.get(e);
              if (r) return r;
              const o = e.parentNode;
              return (r = n.has(o) ? o : i.has(o) ? 1 : t(o)), s.set(e, r), r;
            })(t);
            1 !== e && n.get(e).push(t);
          }),
          n
        );
      }
      function Xn(t, e) {
        if (t.classList) t.classList.add(e);
        else {
          let n = t.$$classes;
          n || (n = t.$$classes = {}), (n[e] = !0);
        }
      }
      function Jn(t, e) {
        if (t.classList) t.classList.remove(e);
        else {
          let n = t.$$classes;
          n && delete n[e];
        }
      }
      function ti(t, e, n) {
        ve(n).onDone(() => t.processLeaveNode(e));
      }
      function ei(t, e, n) {
        const i = n.get(t);
        if (!i) return !1;
        let s = e.get(t);
        return s ? i.forEach((t) => s.add(t)) : e.set(t, i), n.delete(t), !0;
      }
      class ni {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (t, e) => {}),
            (this._transitionEngine = new qn(t, e, n)),
            (this._timelineEngine = new Vn(t, e, n)),
            (this._transitionEngine.onRemovalComplete = (t, e) => this.onRemovalComplete(t, e));
        }
        registerTrigger(t, e, n, i, s) {
          const r = t + '-' + i;
          let o = this._triggerCache[r];
          if (!o) {
            const t = [],
              e = dn(this._driver, s, t);
            if (t.length)
              throw new Error(
                `The animation trigger "${i}" has failed to build due to the following errors:\n - ${t.join('\n - ')}`
              );
            (o = (function (t, e) {
              return new Mn(t, e);
            })(i, e)),
              (this._triggerCache[r] = o);
          }
          this._transitionEngine.registerTrigger(e, i, o);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, n, i) {
          this._transitionEngine.insertNode(t, e, n, i);
        }
        onRemove(t, e, n, i) {
          this._transitionEngine.removeNode(t, e, i || !1, n);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, n, i) {
          if ('@' == n.charAt(0)) {
            const [t, s] = ke(n);
            this._timelineEngine.command(t, e, s, i);
          } else this._transitionEngine.trigger(t, e, n, i);
        }
        listen(t, e, n, i, s) {
          if ('@' == n.charAt(0)) {
            const [t, i] = ke(n);
            return this._timelineEngine.listen(t, e, i, s);
          }
          return this._transitionEngine.listen(t, e, n, i, s);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(this._timelineEngine.players);
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function ii(t, e) {
        let n = null,
          i = null;
        return (
          Array.isArray(e) && e.length ? ((n = ri(e[0])), e.length > 1 && (i = ri(e[e.length - 1]))) : e && (n = ri(e)),
          n || i ? new si(t, n, i) : null
        );
      }
      let si = (() => {
        class t {
          constructor(e, n, i) {
            (this._element = e), (this._startStyles = n), (this._endStyles = i), (this._state = 0);
            let s = t.initialStylesByElement.get(e);
            s || t.initialStylesByElement.set(e, (s = {})), (this._initialStyles = s);
          }
          start() {
            this._state < 1 &&
              (this._startStyles && We(this._element, this._startStyles, this._initialStyles), (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (We(this._element, this._initialStyles),
                this._endStyles && (We(this._element, this._endStyles), (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (t.initialStylesByElement.delete(this._element),
                this._startStyles && (Ke(this._element, this._startStyles), (this._endStyles = null)),
                this._endStyles && (Ke(this._element, this._endStyles), (this._endStyles = null)),
                We(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (t.initialStylesByElement = new WeakMap()), t;
      })();
      function ri(t) {
        let e = null;
        const n = Object.keys(t);
        for (let i = 0; i < n.length; i++) {
          const s = n[i];
          oi(s) && ((e = e || {}), (e[s] = t[s]));
        }
        return e;
      }
      function oi(t) {
        return 'display' === t || 'position' === t;
      }
      class ai {
        constructor(t, e, n, i, s, r, o) {
          (this._element = t),
            (this._name = e),
            (this._duration = n),
            (this._delay = i),
            (this._easing = s),
            (this._fillMode = r),
            (this._onDoneFn = o),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (t) => this._handleCallback(t));
        }
        apply() {
          !(function (t, e) {
            const n = pi(t, '').trim();
            n.length &&
              ((function (t, e) {
                let n = 0;
                for (let i = 0; i < t.length; i++) ',' === t.charAt(i) && n++;
              })(n),
              (e = `${n}, ${e}`)),
              di(t, '', e);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            hi(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          li(this._element, this._name, 'paused');
        }
        resume() {
          li(this._element, this._name, 'running');
        }
        setPosition(t) {
          const e = ci(this._element, this._name);
          (this._position = t * this._duration), di(this._element, 'Delay', `-${this._position}ms`, e);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(t) {
          const e = t._ngTestManualTimestamp || Date.now(),
            n = 1e3 * parseFloat(t.elapsedTime.toFixed(3));
          t.animationName == this._name &&
            Math.max(e - this._startTime, 0) >= this._delay &&
            n >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished || ((this._finished = !0), this._onDoneFn(), hi(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (t, e) {
              const n = pi(t, '').split(','),
                i = ui(n, e);
              i >= 0 && (n.splice(i, 1), di(t, '', n.join(',')));
            })(this._element, this._name));
        }
      }
      function li(t, e, n) {
        di(t, 'PlayState', n, ci(t, e));
      }
      function ci(t, e) {
        const n = pi(t, '');
        return n.indexOf(',') > 0 ? ui(n.split(','), e) : ui([n], e);
      }
      function ui(t, e) {
        for (let n = 0; n < t.length; n++) if (t[n].indexOf(e) >= 0) return n;
        return -1;
      }
      function hi(t, e, n) {
        n ? t.removeEventListener('animationend', e) : t.addEventListener('animationend', e);
      }
      function di(t, e, n, i) {
        const s = 'animation' + e;
        if (null != i) {
          const e = t.style[s];
          if (e.length) {
            const t = e.split(',');
            (t[i] = n), (n = t.join(','));
          }
        }
        t.style[s] = n;
      }
      function pi(t, e) {
        return t.style['animation' + e];
      }
      class mi {
        constructor(t, e, n, i, s, r, o, a) {
          (this.element = t),
            (this.keyframes = e),
            (this.animationName = n),
            (this._duration = i),
            (this._delay = s),
            (this._finalStyles = o),
            (this._specialStyles = a),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = r || 'linear'),
            (this.totalTime = i + s),
            this._buildStyler();
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        destroy() {
          this.init(),
            this._state >= 4 ||
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((t) => t()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            this._state >= 3 ||
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(t) {
          this._styler.setPosition(t);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 || ((this._state = 1), this._styler.apply(), this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(), (this._state = 2), this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          this._styler.destroy(), this._buildStyler(), this._styler.apply();
        }
        _buildStyler() {
          this._styler = new ai(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            'forwards',
            () => this.finish()
          );
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
        beforeDestroy() {
          this.init();
          const t = {};
          if (this.hasStarted()) {
            const e = this._state >= 3;
            Object.keys(this._finalStyles).forEach((n) => {
              'offset' != n && (t[n] = e ? this._finalStyles[n] : on(this.element, n));
            });
          }
          this.currentSnapshot = t;
        }
      }
      class fi extends be {
        constructor(t, e) {
          super(), (this.element = t), (this._startingStyles = {}), (this.__initialized = !1), (this._styles = Ne(e));
        }
        init() {
          !this.__initialized &&
            this._startingStyles &&
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((t) => {
              this._startingStyles[t] = this.element.style[t];
            }),
            super.init());
        }
        play() {
          this._startingStyles &&
            (this.init(),
            Object.keys(this._styles).forEach((t) => this.element.style.setProperty(t, this._styles[t])),
            super.play());
        }
        destroy() {
          this._startingStyles &&
            (Object.keys(this._startingStyles).forEach((t) => {
              const e = this._startingStyles[t];
              e ? this.element.style.setProperty(t, e) : this.element.style.removeProperty(t);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class gi {
        constructor() {
          (this._count = 0), (this._head = document.querySelector('head')), (this._warningIssued = !1);
        }
        validateStyleProperty(t) {
          return De(t);
        }
        matchesElement(t, e) {
          return je(t, e);
        }
        containsElement(t, e) {
          return Le(t, e);
        }
        query(t, e, n) {
          return Me(t, e, n);
        }
        computeStyle(t, e, n) {
          return window.getComputedStyle(t)[e];
        }
        buildKeyframeElement(t, e, n) {
          n = n.map((t) => Ne(t));
          let i = `@keyframes ${e} {\n`,
            s = '';
          n.forEach((t) => {
            s = ' ';
            const e = parseFloat(t.offset);
            (i += `${s}${100 * e}% {\n`),
              (s += ' '),
              Object.keys(t).forEach((e) => {
                const n = t[e];
                switch (e) {
                  case 'offset':
                    return;
                  case 'easing':
                    return void (n && (i += `${s}animation-timing-function: ${n};\n`));
                  default:
                    return void (i += `${s}${e}: ${n};\n`);
                }
              }),
              (i += s + '}\n');
          }),
            (i += '}\n');
          const r = document.createElement('style');
          return (r.innerHTML = i), r;
        }
        animate(t, e, n, i, s, r = [], o) {
          o && this._notifyFaultyScrubber();
          const a = r.filter((t) => t instanceof mi),
            l = {};
          nn(n, i) &&
            a.forEach((t) => {
              let e = t.currentSnapshot;
              Object.keys(e).forEach((t) => (l[t] = e[t]));
            });
          const c = (function (t) {
            let e = {};
            return (
              t &&
                (Array.isArray(t) ? t : [t]).forEach((t) => {
                  Object.keys(t).forEach((n) => {
                    'offset' != n && 'easing' != n && (e[n] = t[n]);
                  });
                }),
              e
            );
          })((e = sn(t, e, l)));
          if (0 == n) return new fi(t, c);
          const u = 'gen_css_kf_' + this._count++,
            h = this.buildKeyframeElement(t, u, e);
          document.querySelector('head').appendChild(h);
          const d = ii(t, e),
            p = new mi(t, e, u, n, i, s, c, d);
          return (
            p.onDestroy(() => {
              var t;
              (t = h).parentNode.removeChild(t);
            }),
            p
          );
        }
        _notifyFaultyScrubber() {
          this._warningIssued ||
            (console.warn(
              '@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\n',
              '  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill.'
            ),
            (this._warningIssued = !0));
        }
      }
      class bi {
        constructor(t, e, n, i) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = n),
            (this._specialStyles = i),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = n.duration),
            (this._delay = n.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(this.element, t, this.options)),
            (this._finalKeyframe = t.length ? t[t.length - 1] : {}),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(t, e, n) {
          return t.animate(e, n);
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(), this._specialStyles && this._specialStyles.finish(), this._onFinish(), this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          this.domPlayer.currentTime = t * this.time;
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((e) => {
              'offset' != e && (t[e] = this._finished ? this._finalKeyframe[e] : on(this.element, e));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      class _i {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(yi().toString())),
            (this._cssKeyframesDriver = new gi());
        }
        validateStyleProperty(t) {
          return De(t);
        }
        matchesElement(t, e) {
          return je(t, e);
        }
        containsElement(t, e) {
          return Le(t, e);
        }
        query(t, e, n) {
          return Me(t, e, n);
        }
        computeStyle(t, e, n) {
          return window.getComputedStyle(t)[e];
        }
        overrideWebAnimationsSupport(t) {
          this._isNativeImpl = t;
        }
        animate(t, e, n, i, s, r = [], o) {
          if (!o && !this._isNativeImpl) return this._cssKeyframesDriver.animate(t, e, n, i, s, r);
          const a = { duration: n, delay: i, fill: 0 == i ? 'both' : 'forwards' };
          s && (a.easing = s);
          const l = {},
            c = r.filter((t) => t instanceof bi);
          nn(n, i) &&
            c.forEach((t) => {
              let e = t.currentSnapshot;
              Object.keys(e).forEach((t) => (l[t] = e[t]));
            });
          const u = ii(t, (e = sn(t, (e = e.map((t) => Ye(t, !1))), l)));
          return new bi(t, e, a, u);
        }
      }
      function yi() {
        return ('undefined' != typeof window && void 0 !== window.document && Element.prototype.animate) || {};
      }
      let vi = (() => {
        class t extends ae {
          constructor(t, e) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = t.createRenderer(e.body, {
                id: '0',
                encapsulation: s.Q.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(t) {
            const e = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const n = Array.isArray(t) ? he(t) : t;
            return Ci(this._renderer, null, e, 'register', [n]), new wi(e, this._renderer);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(s.G), s.Yb(r.d));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class wi extends class {} {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new xi(this._id, t, e || {}, this._renderer);
        }
      }
      class xi {
        constructor(t, e, n, i) {
          (this.id = t),
            (this.element = e),
            (this._renderer = i),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', n);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return Ci(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen('done', t);
        }
        onStart(t) {
          this._listen('start', t);
        }
        onDestroy(t) {
          this._listen('destroy', t);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset');
        }
        setPosition(t) {
          this._command('setPosition', t);
        }
        getPosition() {
          return 0;
        }
      }
      function Ci(t, e, n, i, s) {
        return t.setProperty(e, `@@${n}:${i}`, s);
      }
      let Si = (() => {
        class t {
          constructor(t, e, n) {
            (this.delegate = t),
              (this.engine = e),
              (this._zone = n),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (e.onRemovalComplete = (t, e) => {
                e && e.parentNode(t) && e.removeChild(t.parentNode, t);
              });
          }
          createRenderer(t, e) {
            const n = this.delegate.createRenderer(t, e);
            if (!(t && e && e.data && e.data.animation)) {
              let t = this._rendererCache.get(n);
              return t || ((t = new Ei('', n, this.engine)), this._rendererCache.set(n, t)), t;
            }
            const i = e.id,
              s = e.id + '-' + this._currentId;
            this._currentId++, this.engine.register(s, t);
            const r = (e) => {
              Array.isArray(e) ? e.forEach(r) : this.engine.registerTrigger(i, s, t, e.name, e);
            };
            return e.data.animation.forEach(r), new ki(this, s, n, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(t, e, n) {
            t >= 0 && t < this._microtaskId
              ? this._zone.run(() => e(n))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((t) => {
                        const [e, n] = t;
                        e(n);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([e, n]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(), this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(s.G), s.Yb(ni), s.Yb(s.A));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Ei {
        constructor(t, e, n) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = n),
            (this.destroyNode = this.delegate.destroyNode ? (t) => e.destroyNode(t) : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate), this.delegate.destroy();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e), this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, n) {
          this.delegate.insertBefore(t, e, n), this.engine.onInsert(this.namespaceId, e, t, !0);
        }
        removeChild(t, e, n) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, n);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, n, i) {
          this.delegate.setAttribute(t, e, n, i);
        }
        removeAttribute(t, e, n) {
          this.delegate.removeAttribute(t, e, n);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, n, i) {
          this.delegate.setStyle(t, e, n, i);
        }
        removeStyle(t, e, n) {
          this.delegate.removeStyle(t, e, n);
        }
        setProperty(t, e, n) {
          '@' == e.charAt(0) && '@.disabled' == e ? this.disableAnimations(t, !!n) : this.delegate.setProperty(t, e, n);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, n) {
          return this.delegate.listen(t, e, n);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class ki extends Ei {
        constructor(t, e, n, i) {
          super(e, n, i), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, n) {
          '@' == e.charAt(0)
            ? '.' == e.charAt(1) && '@.disabled' == e
              ? this.disableAnimations(t, (n = void 0 === n || !!n))
              : this.engine.process(this.namespaceId, t, e.substr(1), n)
            : this.delegate.setProperty(t, e, n);
        }
        listen(t, e, n) {
          if ('@' == e.charAt(0)) {
            const i = (function (t) {
              switch (t) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return t;
              }
            })(t);
            let s = e.substr(1),
              r = '';
            return (
              '@' != s.charAt(0) &&
                ([s, r] = (function (t) {
                  const e = t.indexOf('.');
                  return [t.substring(0, e), t.substr(e + 1)];
                })(s)),
              this.engine.listen(this.namespaceId, i, s, r, (t) => {
                this.factory.scheduleListenerCallback(t._data || -1, n, t);
              })
            );
          }
          return this.delegate.listen(t, e, n);
        }
      }
      let Oi = (() => {
        class t extends ni {
          constructor(t, e, n) {
            super(t.body, e, n);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(r.d), s.Yb(Ve), s.Yb(Tn));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Ai = new s.r('AnimationModuleType'),
        Ti = [
          {
            provide: Ve,
            useFactory: function () {
              return 'function' == typeof yi() ? new _i() : new gi();
            },
          },
          { provide: Ai, useValue: 'BrowserAnimations' },
          { provide: ae, useClass: vi },
          {
            provide: Tn,
            useFactory: function () {
              return new In();
            },
          },
          { provide: ni, useClass: Oi },
          {
            provide: s.G,
            useFactory: function (t, e, n) {
              return new Si(t, e, n);
            },
            deps: [i.f, ni, s.A],
          },
        ];
      let Ii = (() => {
        class t {}
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: Ti,
            imports: [i.a],
          })),
          t
        );
      })();
      function Ri(t, ...e) {
        return e.length ? e.some((e) => t[e]) : t.altKey || t.shiftKey || t.ctrlKey || t.metaKey;
      }
      function Pi() {}
      var Di = n('n6bG');
      function ji(t, e, n) {
        return function (i) {
          return i.lift(new Li(t, e, n));
        };
      }
      class Li {
        constructor(t, e, n) {
          (this.nextOrObserver = t), (this.error = e), (this.complete = n);
        }
        call(t, e) {
          return e.subscribe(new Mi(t, this.nextOrObserver, this.error, this.complete));
        }
      }
      class Mi extends x.a {
        constructor(t, e, n, i) {
          super(t),
            (this._tapNext = Pi),
            (this._tapError = Pi),
            (this._tapComplete = Pi),
            (this._tapError = n || Pi),
            (this._tapComplete = i || Pi),
            Object(Di.a)(e)
              ? ((this._context = this), (this._tapNext = e))
              : e &&
                ((this._context = e),
                (this._tapNext = e.next || Pi),
                (this._tapError = e.error || Pi),
                (this._tapComplete = e.complete || Pi));
        }
        _next(t) {
          try {
            this._tapNext.call(this._context, t);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.next(t);
        }
        _error(t) {
          try {
            this._tapError.call(this._context, t);
          } catch (t) {
            return void this.destination.error(t);
          }
          this.destination.error(t);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (t) {
            return void this.destination.error(t);
          }
          return this.destination.complete();
        }
      }
      const Ni = new wt(_t);
      function Fi(t, e = Ni) {
        return (n) => n.lift(new Vi(t, e));
      }
      class Vi {
        constructor(t, e) {
          (this.dueTime = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new Hi(t, this.dueTime, this.scheduler));
        }
      }
      class Hi extends x.a {
        constructor(t, e, n) {
          super(t),
            (this.dueTime = e),
            (this.scheduler = n),
            (this.debouncedSubscription = null),
            (this.lastValue = null),
            (this.hasValue = !1);
        }
        _next(t) {
          this.clearDebounce(),
            (this.lastValue = t),
            (this.hasValue = !0),
            this.add((this.debouncedSubscription = this.scheduler.schedule(Bi, this.dueTime, this)));
        }
        _complete() {
          this.debouncedNext(), this.destination.complete();
        }
        debouncedNext() {
          if ((this.clearDebounce(), this.hasValue)) {
            const { lastValue: t } = this;
            (this.lastValue = null), (this.hasValue = !1), this.destination.next(t);
          }
        }
        clearDebounce() {
          const t = this.debouncedSubscription;
          null !== t && (this.remove(t), t.unsubscribe(), (this.debouncedSubscription = null));
        }
      }
      function Bi(t) {
        t.debouncedNext();
      }
      function Ui(t) {
        return null != t && '' + t != 'false';
      }
      function zi(t, e = 0) {
        return (function (t) {
          return !isNaN(parseFloat(t)) && !isNaN(Number(t));
        })(t)
          ? Number(t)
          : e;
      }
      function Yi(t) {
        return Array.isArray(t) ? t : [t];
      }
      function $i(t) {
        return null == t ? '' : 'string' == typeof t ? t : t + 'px';
      }
      function qi(t) {
        return t instanceof s.l ? t.nativeElement : t;
      }
      let Wi;
      try {
        Wi = 'undefined' != typeof Intl && Intl.v8BreakIterator;
      } catch (Dm) {
        Wi = !1;
      }
      let Ki,
        Qi,
        Zi,
        Gi = (() => {
          class t {
            constructor(t) {
              (this._platformId = t),
                (this.isBrowser = this._platformId
                  ? Object(r.t)(this._platformId)
                  : 'object' == typeof document && !!document),
                (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !Wi) &&
                  'undefined' != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window)),
                (this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT),
                (this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(s.C, 8));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(s.C, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Xi = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
      function Ji(t) {
        return (function () {
          if (null == Ki && 'undefined' != typeof window)
            try {
              window.addEventListener('test', null, Object.defineProperty({}, 'passive', { get: () => (Ki = !0) }));
            } finally {
              Ki = Ki || !1;
            }
          return Ki;
        })()
          ? t
          : !!t.capture;
      }
      function ts() {
        if ('object' != typeof document || !document) return 0;
        if (null == Qi) {
          const t = document.createElement('div'),
            e = t.style;
          (t.dir = 'rtl'),
            (e.height = '1px'),
            (e.width = '1px'),
            (e.overflow = 'auto'),
            (e.visibility = 'hidden'),
            (e.pointerEvents = 'none'),
            (e.position = 'absolute');
          const n = document.createElement('div'),
            i = n.style;
          (i.width = '2px'),
            (i.height = '1px'),
            t.appendChild(n),
            document.body.appendChild(t),
            (Qi = 0),
            0 === t.scrollLeft && ((t.scrollLeft = 1), (Qi = 0 === t.scrollLeft ? 1 : 2)),
            t.parentNode.removeChild(t);
        }
        return Qi;
      }
      function es(t) {
        if (
          (function () {
            if (null == Zi) {
              const t = 'undefined' != typeof document ? document.head : null;
              Zi = !(!t || (!t.createShadowRoot && !t.attachShadow));
            }
            return Zi;
          })()
        ) {
          const e = t.getRootNode ? t.getRootNode() : null;
          if ('undefined' != typeof ShadowRoot && ShadowRoot && e instanceof ShadowRoot) return e;
        }
        return null;
      }
      let ns = (() => {
          class t {
            create(t) {
              return 'undefined' == typeof MutationObserver ? null : new MutationObserver(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        is = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [ns],
            })),
            t
          );
        })();
      class ss extends class {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new ft.a()),
            (this._typeaheadSubscription = gt.a.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._skipPredicateFn = (t) => t.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new ft.a()),
            (this.change = new ft.a()),
            t instanceof s.E &&
              t.changes.subscribe((t) => {
                if (this._activeItem) {
                  const e = t.toArray().indexOf(this._activeItem);
                  e > -1 && e !== this._activeItemIndex && (this._activeItemIndex = e);
                }
              });
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          if (this._items.length && this._items.some((t) => 'function' != typeof t.getLabel))
            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                ji((t) => this._pressedLetters.push(t)),
                Fi(t),
                C(() => this._pressedLetters.length > 0),
                Object(l.a)(() => this._pressedLetters.join(''))
              )
              .subscribe((t) => {
                const e = this._getItemsArray();
                for (let n = 1; n < e.length + 1; n++) {
                  const i = (this._activeItemIndex + n) % e.length,
                    s = e[i];
                  if (!this._skipPredicateFn(s) && 0 === s.getLabel().toUpperCase().trim().indexOf(t)) {
                    this.setActiveItem(i);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        setActiveItem(t) {
          const e = this._activeItemIndex;
          this.updateActiveItem(t), this._activeItemIndex !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            n = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              (e) => !t[e] || this._allowedModifierKeys.indexOf(e) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && n) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && n) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && n) {
                'rtl' === this._horizontal ? this.setPreviousItemActive() : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && n) {
                'rtl' === this._horizontal ? this.setNextItemActive() : this.setPreviousItemActive();
                break;
              }
              return;
            default:
              return void (
                (n || Ri(t, 'shiftKey')) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            n = 'number' == typeof t ? t : e.indexOf(t),
            i = e[n];
          (this._activeItem = null == i ? null : i), (this._activeItemIndex = n);
        }
        _setActiveItemByDelta(t) {
          this._wrap ? this._setActiveInWrapMode(t) : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let n = 1; n <= e.length; n++) {
            const i = (this._activeItemIndex + t * n + e.length) % e.length;
            if (!this._skipPredicateFn(e[i])) return void this.setActiveItem(i);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const n = this._getItemsArray();
          if (n[t]) {
            for (; this._skipPredicateFn(n[t]); ) if (!n[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof s.E ? this._items.toArray() : this._items;
        }
      } {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(t) {
          return (this._origin = t), this;
        }
        setActiveItem(t) {
          super.setActiveItem(t), this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let rs = (() => {
        class t {
          constructor(t) {
            this._platform = t;
          }
          isDisabled(t) {
            return t.hasAttribute('disabled');
          }
          isVisible(t) {
            return (
              (function (t) {
                return !!(
                  t.offsetWidth ||
                  t.offsetHeight ||
                  ('function' == typeof t.getClientRects && t.getClientRects().length)
                );
              })(t) && 'visible' === getComputedStyle(t).visibility
            );
          }
          isTabbable(t) {
            if (!this._platform.isBrowser) return !1;
            const e = (function (t) {
              try {
                return t.frameElement;
              } catch (Dm) {
                return null;
              }
            })(((n = t).ownerDocument && n.ownerDocument.defaultView) || window);
            var n;
            if (e) {
              const t = e && e.nodeName.toLowerCase();
              if (-1 === as(e)) return !1;
              if ((this._platform.BLINK || this._platform.WEBKIT) && 'object' === t) return !1;
              if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(e)) return !1;
            }
            let i = t.nodeName.toLowerCase(),
              s = as(t);
            if (t.hasAttribute('contenteditable')) return -1 !== s;
            if ('iframe' === i) return !1;
            if ('audio' === i) {
              if (!t.hasAttribute('controls')) return !1;
              if (this._platform.BLINK) return !0;
            }
            if ('video' === i) {
              if (!t.hasAttribute('controls') && this._platform.TRIDENT) return !1;
              if (this._platform.BLINK || this._platform.FIREFOX) return !0;
            }
            return (
              ('object' !== i || (!this._platform.BLINK && !this._platform.WEBKIT)) &&
              !(
                this._platform.WEBKIT &&
                this._platform.IOS &&
                !(function (t) {
                  let e = t.nodeName.toLowerCase(),
                    n = 'input' === e && t.type;
                  return 'text' === n || 'password' === n || 'select' === e || 'textarea' === e;
                })(t)
              ) &&
              t.tabIndex >= 0
            );
          }
          isFocusable(t) {
            return (
              (function (t) {
                return (
                  !(function (t) {
                    return (
                      (function (t) {
                        return 'input' == t.nodeName.toLowerCase();
                      })(t) && 'hidden' == t.type
                    );
                  })(t) &&
                  ((function (t) {
                    let e = t.nodeName.toLowerCase();
                    return 'input' === e || 'select' === e || 'button' === e || 'textarea' === e;
                  })(t) ||
                    (function (t) {
                      return (
                        (function (t) {
                          return 'a' == t.nodeName.toLowerCase();
                        })(t) && t.hasAttribute('href')
                      );
                    })(t) ||
                    t.hasAttribute('contenteditable') ||
                    os(t))
                );
              })(t) &&
              !this.isDisabled(t) &&
              this.isVisible(t)
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(Gi));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(Gi));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function os(t) {
        if (!t.hasAttribute('tabindex') || void 0 === t.tabIndex) return !1;
        let e = t.getAttribute('tabindex');
        return '-32768' != e && !(!e || isNaN(parseInt(e, 10)));
      }
      function as(t) {
        if (!os(t)) return null;
        const e = parseInt(t.getAttribute('tabindex') || '', 10);
        return isNaN(e) ? -1 : e;
      }
      class ls {
        constructor(t, e, n, i, s = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = n),
            (this._document = i),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            s || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t && (t.removeEventListener('focus', this.startAnchorListener), t.parentNode && t.parentNode.removeChild(t)),
            e && (e.removeEventListener('focus', this.endAnchorListener), e.parentNode && e.parentNode.removeChild(e)),
            (this._startAnchor = this._endAnchor = null);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener('focus', this.startAnchorListener)),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener('focus', this.endAnchorListener));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(this._startAnchor, this._element),
              this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusInitialElement()));
          });
        }
        focusFirstTabbableElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusFirstTabbableElement()));
          });
        }
        focusLastTabbableElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusLastTabbableElement()));
          });
        }
        _getRegionBoundary(t) {
          let e = this._element.querySelectorAll(`[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`);
          for (let n = 0; n < e.length; n++)
            e[n].hasAttribute('cdk-focus-' + t)
              ? console.warn(
                  `Found use of deprecated attribute 'cdk-focus-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[n]
                )
              : e[n].hasAttribute('cdk-focus-region-' + t) &&
                console.warn(
                  `Found use of deprecated attribute 'cdk-focus-region-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[n]
                );
          return 'start' == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement() {
          const t = this._element.querySelector('[cdk-focus-initial], [cdkFocusInitial]');
          return t
            ? (t.hasAttribute('cdk-focus-initial') &&
                console.warn(
                  "Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",
                  t
                ),
              Object(s.W)() &&
                !this._checker.isFocusable(t) &&
                console.warn("Element matching '[cdkFocusInitial]' is not focusable.", t),
              t.focus(),
              !0)
            : this.focusFirstTabbableElement();
        }
        focusFirstTabbableElement() {
          const t = this._getRegionBoundary('start');
          return t && t.focus(), !!t;
        }
        focusLastTabbableElement() {
          const t = this._getRegionBoundary('end');
          return t && t.focus(), !!t;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
          let e = t.children || t.childNodes;
          for (let n = 0; n < e.length; n++) {
            let t = e[n].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(e[n]) : null;
            if (t) return t;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
          let e = t.children || t.childNodes;
          for (let n = e.length - 1; n >= 0; n--) {
            let t = e[n].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(e[n]) : null;
            if (t) return t;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add('cdk-visually-hidden'),
            t.classList.add('cdk-focus-trap-anchor'),
            t.setAttribute('aria-hidden', 'true'),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute('tabindex', '0') : e.removeAttribute('tabindex');
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable ? t() : this._ngZone.onStable.asObservable().pipe(dt(1)).subscribe(t);
        }
      }
      let cs = (() => {
        class t {
          constructor(t, e, n) {
            (this._checker = t), (this._ngZone = e), (this._document = n);
          }
          create(t, e = !1) {
            return new ls(t, this._checker, this._ngZone, this._document, e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(rs), s.Yb(s.A), s.Yb(r.d));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(rs), Object(s.Yb)(s.A), Object(s.Yb)(r.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function us(t) {
        return 0 === t.buttons;
      }
      'undefined' != typeof Element && Element;
      const hs = new s.r('cdk-focus-monitor-default-options'),
        ds = Ji({ passive: !0, capture: !0 });
      let ps = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._ngZone = t),
              (this._platform = e),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._documentKeydownListener = () => {
                (this._lastTouchTarget = null), this._setOriginForCurrentEventQueue('keyboard');
              }),
              (this._documentMousedownListener = (t) => {
                if (!this._lastTouchTarget) {
                  const e = us(t) ? 'keyboard' : 'mouse';
                  this._setOriginForCurrentEventQueue(e);
                }
              }),
              (this._documentTouchstartListener = (t) => {
                null != this._touchTimeoutId && clearTimeout(this._touchTimeoutId),
                  (this._lastTouchTarget = ms(t)),
                  (this._touchTimeoutId = setTimeout(() => (this._lastTouchTarget = null), 650));
              }),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0), (this._windowFocusTimeoutId = setTimeout(() => (this._windowFocused = !1)));
              }),
              (this._rootNodeFocusAndBlurListener = (t) => {
                const e = ms(t),
                  n = 'focus' === t.type ? this._onFocus : this._onBlur;
                for (let i = e; i; i = i.parentElement) n.call(this, t, i);
              }),
              (this._document = n),
              (this._detectionMode = (null == i ? void 0 : i.detectionMode) || 0);
          }
          monitor(t, e = !1) {
            if (!this._platform.isBrowser) return y(null);
            const n = qi(t),
              i = es(n) || this._getDocument(),
              s = this._elementInfo.get(n);
            if (s) return e && (s.checkChildren = !0), s.subject.asObservable();
            const r = { checkChildren: e, subject: new ft.a(), rootNode: i };
            return this._elementInfo.set(n, r), this._registerGlobalListeners(r), r.subject.asObservable();
          }
          stopMonitoring(t) {
            const e = qi(t),
              n = this._elementInfo.get(e);
            n &&
              (n.subject.complete(), this._setClasses(e), this._elementInfo.delete(e), this._removeGlobalListeners(n));
          }
          focusVia(t, e, n) {
            const i = qi(t);
            this._setOriginForCurrentEventQueue(e), 'function' == typeof i.focus && i.focus(n);
          }
          ngOnDestroy() {
            this._elementInfo.forEach((t, e) => this.stopMonitoring(e));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _toggleClass(t, e, n) {
            n ? t.classList.add(e) : t.classList.remove(e);
          }
          _getFocusOrigin(t) {
            return this._origin
              ? this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : this._wasCausedByTouch(t)
              ? 'touch'
              : 'program';
          }
          _setClasses(t, e) {
            this._toggleClass(t, 'cdk-focused', !!e),
              this._toggleClass(t, 'cdk-touch-focused', 'touch' === e),
              this._toggleClass(t, 'cdk-keyboard-focused', 'keyboard' === e),
              this._toggleClass(t, 'cdk-mouse-focused', 'mouse' === e),
              this._toggleClass(t, 'cdk-program-focused', 'program' === e);
          }
          _setOriginForCurrentEventQueue(t) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = t),
                0 === this._detectionMode && (this._originTimeoutId = setTimeout(() => (this._origin = null), 1));
            });
          }
          _wasCausedByTouch(t) {
            const e = ms(t);
            return (
              this._lastTouchTarget instanceof Node &&
              e instanceof Node &&
              (e === this._lastTouchTarget || e.contains(this._lastTouchTarget))
            );
          }
          _onFocus(t, e) {
            const n = this._elementInfo.get(e);
            if (!n || (!n.checkChildren && e !== ms(t))) return;
            const i = this._getFocusOrigin(t);
            this._setClasses(e, i), this._emitOrigin(n.subject, i), (this._lastFocusOrigin = i);
          }
          _onBlur(t, e) {
            const n = this._elementInfo.get(e);
            !n ||
              (n.checkChildren && t.relatedTarget instanceof Node && e.contains(t.relatedTarget)) ||
              (this._setClasses(e), this._emitOrigin(n.subject, null));
          }
          _emitOrigin(t, e) {
            this._ngZone.run(() => t.next(e));
          }
          _registerGlobalListeners(t) {
            if (!this._platform.isBrowser) return;
            const e = t.rootNode,
              n = this._rootNodeFocusListenerCount.get(e) || 0;
            n ||
              this._ngZone.runOutsideAngular(() => {
                e.addEventListener('focus', this._rootNodeFocusAndBlurListener, ds),
                  e.addEventListener('blur', this._rootNodeFocusAndBlurListener, ds);
              }),
              this._rootNodeFocusListenerCount.set(e, n + 1),
              1 == ++this._monitoredElementCount &&
                this._ngZone.runOutsideAngular(() => {
                  const t = this._getDocument(),
                    e = this._getWindow();
                  t.addEventListener('keydown', this._documentKeydownListener, ds),
                    t.addEventListener('mousedown', this._documentMousedownListener, ds),
                    t.addEventListener('touchstart', this._documentTouchstartListener, ds),
                    e.addEventListener('focus', this._windowFocusListener);
                });
          }
          _removeGlobalListeners(t) {
            const e = t.rootNode;
            if (this._rootNodeFocusListenerCount.has(e)) {
              const t = this._rootNodeFocusListenerCount.get(e);
              t > 1
                ? this._rootNodeFocusListenerCount.set(e, t - 1)
                : (e.removeEventListener('focus', this._rootNodeFocusAndBlurListener, ds),
                  e.removeEventListener('blur', this._rootNodeFocusAndBlurListener, ds),
                  this._rootNodeFocusListenerCount.delete(e));
            }
            if (!--this._monitoredElementCount) {
              const t = this._getDocument(),
                e = this._getWindow();
              t.removeEventListener('keydown', this._documentKeydownListener, ds),
                t.removeEventListener('mousedown', this._documentMousedownListener, ds),
                t.removeEventListener('touchstart', this._documentTouchstartListener, ds),
                e.removeEventListener('focus', this._windowFocusListener),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._touchTimeoutId),
                clearTimeout(this._originTimeoutId);
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(s.A), s.Yb(Gi), s.Yb(r.d, 8), s.Yb(hs, 8));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(s.A), Object(s.Yb)(Gi), Object(s.Yb)(r.d, 8), Object(s.Yb)(hs, 8));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function ms(t) {
        return t.composedPath ? t.composedPath()[0] : t.target;
      }
      let fs = (() => {
          class t {
            constructor(t, e) {
              (this._platform = t), (this._document = e);
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const t = this._document.createElement('div');
              (t.style.backgroundColor = 'rgb(1,2,3)'),
                (t.style.position = 'absolute'),
                this._document.body.appendChild(t);
              const e = this._document.defaultView || window,
                n = e && e.getComputedStyle ? e.getComputedStyle(t) : null,
                i = ((n && n.backgroundColor) || '').replace(/ /g, '');
              switch ((this._document.body.removeChild(t), i)) {
                case 'rgb(0,0,0)':
                  return 2;
                case 'rgb(255,255,255)':
                  return 1;
              }
              return 0;
            }
            _applyBodyHighContrastModeCssClasses() {
              if (this._platform.isBrowser && this._document.body) {
                const t = this._document.body.classList;
                t.remove('cdk-high-contrast-active'),
                  t.remove('cdk-high-contrast-black-on-white'),
                  t.remove('cdk-high-contrast-white-on-black');
                const e = this.getHighContrastMode();
                1 === e
                  ? (t.add('cdk-high-contrast-active'), t.add('cdk-high-contrast-black-on-white'))
                  : 2 === e && (t.add('cdk-high-contrast-active'), t.add('cdk-high-contrast-white-on-black'));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(Gi), s.Yb(r.d));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(Gi), Object(s.Yb)(r.d));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        gs = (() => {
          class t {
            constructor(t) {
              t._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)(s.Yb(fs));
              },
              imports: [[Xi, is]],
            })),
            t
          );
        })();
      const bs = new s.r('cdk-dir-doc', {
        providedIn: 'root',
        factory: function () {
          return Object(s.V)(r.d);
        },
      });
      let _s = (() => {
          class t {
            constructor(t) {
              if (((this.value = 'ltr'), (this.change = new s.o()), t)) {
                const e = t.documentElement ? t.documentElement.dir : null,
                  n = (t.body ? t.body.dir : null) || e;
                this.value = 'ltr' === n || 'rtl' === n ? n : 'ltr';
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(bs, 8));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(bs, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        ys = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
      const vs = new s.O('9.2.4');
      function ws(...t) {
        const e = t[t.length - 1];
        return Object(g.a)(e) ? (t.pop(), (n) => at(t, n, e)) : (e) => at(t, e);
      }
      const xs = new s.O('9.2.4'),
        Cs = new s.r('mat-sanity-checks', {
          providedIn: 'root',
          factory: function () {
            return !0;
          },
        });
      let Ss = (() => {
        class t {
          constructor(t, e, n) {
            (this._hasDoneGlobalChecks = !1),
              (this._document = n),
              t._applyBodyHighContrastModeCssClasses(),
              (this._sanityChecks = e),
              this._hasDoneGlobalChecks ||
                (this._checkDoctypeIsDefined(),
                this._checkThemeIsPresent(),
                this._checkCdkVersionMatch(),
                (this._hasDoneGlobalChecks = !0));
          }
          _getDocument() {
            const t = this._document || document;
            return 'object' == typeof t && t ? t : null;
          }
          _getWindow() {
            const t = this._getDocument(),
              e = (null == t ? void 0 : t.defaultView) || window;
            return 'object' == typeof e && e ? e : null;
          }
          _checksAreEnabled() {
            return Object(s.W)() && !this._isTestEnv();
          }
          _isTestEnv() {
            const t = this._getWindow();
            return t && (t.__karma__ || t.jasmine);
          }
          _checkDoctypeIsDefined() {
            const t = this._checksAreEnabled() && (!0 === this._sanityChecks || this._sanityChecks.doctype),
              e = this._getDocument();
            t &&
              e &&
              !e.doctype &&
              console.warn(
                'Current document does not have a doctype. This may cause some Angular Material components not to behave as expected.'
              );
          }
          _checkThemeIsPresent() {
            const t = !this._checksAreEnabled() || !1 === this._sanityChecks || !this._sanityChecks.theme,
              e = this._getDocument();
            if (t || !e || !e.body || 'function' != typeof getComputedStyle) return;
            const n = e.createElement('div');
            n.classList.add('mat-theme-loaded-marker'), e.body.appendChild(n);
            const i = getComputedStyle(n);
            i &&
              'none' !== i.display &&
              console.warn(
                'Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming'
              ),
              e.body.removeChild(n);
          }
          _checkCdkVersionMatch() {
            this._checksAreEnabled() &&
              (!0 === this._sanityChecks || this._sanityChecks.version) &&
              xs.full !== vs.full &&
              console.warn(
                'The Angular Material version (' +
                  xs.full +
                  ') does not match the Angular CDK version (' +
                  vs.full +
                  ').\nPlease ensure the versions of these two packages exactly match.'
              );
          }
        }
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)(s.Yb(fs), s.Yb(Cs, 8), s.Yb(r.d, 8));
            },
            imports: [[ys], ys],
          })),
          t
        );
      })();
      function Es(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = Ui(t);
          }
        };
      }
      function ks(t, e) {
        return class extends t {
          constructor(...t) {
            super(...t), (this.color = e);
          }
          get color() {
            return this._color;
          }
          set color(t) {
            const n = t || e;
            n !== this._color &&
              (this._color && this._elementRef.nativeElement.classList.remove('mat-' + this._color),
              n && this._elementRef.nativeElement.classList.add('mat-' + n),
              (this._color = n));
          }
        };
      }
      function Os(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = Ui(t);
          }
        };
      }
      const As = new s.r('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function () {
          return Object(s.V)(s.v);
        },
      });
      class Ts {
        constructor() {
          this._localeChanges = new ft.a();
        }
        get localeChanges() {
          return this._localeChanges;
        }
        deserialize(t) {
          return null == t || (this.isDateInstance(t) && this.isValid(t)) ? t : this.invalid();
        }
        setLocale(t) {
          (this.locale = t), this._localeChanges.next();
        }
        compareDate(t, e) {
          return (
            this.getYear(t) - this.getYear(e) ||
            this.getMonth(t) - this.getMonth(e) ||
            this.getDate(t) - this.getDate(e)
          );
        }
        sameDate(t, e) {
          if (t && e) {
            let n = this.isValid(t),
              i = this.isValid(e);
            return n && i ? !this.compareDate(t, e) : n == i;
          }
          return t == e;
        }
        clampDate(t, e, n) {
          return e && this.compareDate(t, e) < 0 ? e : n && this.compareDate(t, n) > 0 ? n : t;
        }
      }
      const Is = new s.r('mat-date-formats');
      let Rs;
      try {
        Rs = 'undefined' != typeof Intl;
      } catch (Dm) {
        Rs = !1;
      }
      const Ps = {
          long: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
          short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
        },
        Ds = Ms(31, (t) => String(t + 1)),
        js = {
          long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
          short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
        },
        Ls = /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function Ms(t, e) {
        const n = Array(t);
        for (let i = 0; i < t; i++) n[i] = e(i);
        return n;
      }
      let Ns = (() => {
          class t extends Ts {
            constructor(t, e) {
              super(),
                (this.useUtcForDisplay = !0),
                super.setLocale(t),
                (this.useUtcForDisplay = !e.TRIDENT),
                (this._clampDate = e.TRIDENT || e.EDGE);
            }
            getYear(t) {
              return t.getFullYear();
            }
            getMonth(t) {
              return t.getMonth();
            }
            getDate(t) {
              return t.getDate();
            }
            getDayOfWeek(t) {
              return t.getDay();
            }
            getMonthNames(t) {
              if (Rs) {
                const e = new Intl.DateTimeFormat(this.locale, { month: t, timeZone: 'utc' });
                return Ms(12, (t) => this._stripDirectionalityCharacters(this._format(e, new Date(2017, t, 1))));
              }
              return Ps[t];
            }
            getDateNames() {
              if (Rs) {
                const t = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });
                return Ms(31, (e) => this._stripDirectionalityCharacters(this._format(t, new Date(2017, 0, e + 1))));
              }
              return Ds;
            }
            getDayOfWeekNames(t) {
              if (Rs) {
                const e = new Intl.DateTimeFormat(this.locale, { weekday: t, timeZone: 'utc' });
                return Ms(7, (t) => this._stripDirectionalityCharacters(this._format(e, new Date(2017, 0, t + 1))));
              }
              return js[t];
            }
            getYearName(t) {
              if (Rs) {
                const e = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });
                return this._stripDirectionalityCharacters(this._format(e, t));
              }
              return String(this.getYear(t));
            }
            getFirstDayOfWeek() {
              return 0;
            }
            getNumDaysInMonth(t) {
              return this.getDate(this._createDateWithOverflow(this.getYear(t), this.getMonth(t) + 1, 0));
            }
            clone(t) {
              return new Date(t.getTime());
            }
            createDate(t, e, n) {
              if (e < 0 || e > 11) throw Error(`Invalid month index "${e}". Month index has to be between 0 and 11.`);
              if (n < 1) throw Error(`Invalid date "${n}". Date has to be greater than 0.`);
              let i = this._createDateWithOverflow(t, e, n);
              if (i.getMonth() != e) throw Error(`Invalid date "${n}" for month with index "${e}".`);
              return i;
            }
            today() {
              return new Date();
            }
            parse(t) {
              return 'number' == typeof t ? new Date(t) : t ? new Date(Date.parse(t)) : null;
            }
            format(t, e) {
              if (!this.isValid(t)) throw Error('NativeDateAdapter: Cannot format invalid date.');
              if (Rs) {
                this._clampDate &&
                  (t.getFullYear() < 1 || t.getFullYear() > 9999) &&
                  (t = this.clone(t)).setFullYear(Math.max(1, Math.min(9999, t.getFullYear()))),
                  (e = Object.assign(Object.assign({}, e), { timeZone: 'utc' }));
                const n = new Intl.DateTimeFormat(this.locale, e);
                return this._stripDirectionalityCharacters(this._format(n, t));
              }
              return this._stripDirectionalityCharacters(t.toDateString());
            }
            addCalendarYears(t, e) {
              return this.addCalendarMonths(t, 12 * e);
            }
            addCalendarMonths(t, e) {
              let n = this._createDateWithOverflow(this.getYear(t), this.getMonth(t) + e, this.getDate(t));
              return (
                this.getMonth(n) != (((this.getMonth(t) + e) % 12) + 12) % 12 &&
                  (n = this._createDateWithOverflow(this.getYear(n), this.getMonth(n), 0)),
                n
              );
            }
            addCalendarDays(t, e) {
              return this._createDateWithOverflow(this.getYear(t), this.getMonth(t), this.getDate(t) + e);
            }
            toIso8601(t) {
              return [t.getUTCFullYear(), this._2digit(t.getUTCMonth() + 1), this._2digit(t.getUTCDate())].join('-');
            }
            deserialize(t) {
              if ('string' == typeof t) {
                if (!t) return null;
                if (Ls.test(t)) {
                  let e = new Date(t);
                  if (this.isValid(e)) return e;
                }
              }
              return super.deserialize(t);
            }
            isDateInstance(t) {
              return t instanceof Date;
            }
            isValid(t) {
              return !isNaN(t.getTime());
            }
            invalid() {
              return new Date(NaN);
            }
            _createDateWithOverflow(t, e, n) {
              const i = new Date(t, e, n);
              return t >= 0 && t < 100 && i.setFullYear(this.getYear(i) - 1900), i;
            }
            _2digit(t) {
              return ('00' + t).slice(-2);
            }
            _stripDirectionalityCharacters(t) {
              return t.replace(/[\u200e\u200f]/g, '');
            }
            _format(t, e) {
              const n = new Date(
                Date.UTC(
                  e.getFullYear(),
                  e.getMonth(),
                  e.getDate(),
                  e.getHours(),
                  e.getMinutes(),
                  e.getSeconds(),
                  e.getMilliseconds()
                )
              );
              return t.format(n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(As, 8), s.Yb(Gi));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Fs = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [{ provide: Ts, useClass: Ns }],
              imports: [[Xi]],
            })),
            t
          );
        })();
      const Vs = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let Hs = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [{ provide: Is, useValue: Vs }],
              imports: [[Fs]],
            })),
            t
          );
        })(),
        Bs = (() => {
          class t {
            isErrorState(t, e) {
              return !!(t && t.invalid && (t.touched || (e && e.submitted)));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Us = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'mat-line', ''],
                ['', 'matLine', ''],
              ],
              hostAttrs: [1, 'mat-line'],
            })),
            t
          );
        })();
      function zs(t, e, n) {
        const i = t.nativeElement.classList;
        n ? i.add(e) : i.remove(e);
      }
      let Ys = (() => {
        class t {}
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[Ss], Ss],
          })),
          t
        );
      })();
      class $s {
        constructor(t, e, n) {
          (this._renderer = t), (this.element = e), (this.config = n), (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const qs = { enterDuration: 450, exitDuration: 400 },
        Ws = Ji({ passive: !0 }),
        Ks = ['mousedown', 'touchstart'],
        Qs = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class Zs {
        constructor(t, e, n, i) {
          (this._target = t),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            i.isBrowser && (this._containerElement = qi(n));
        }
        fadeInRipple(t, e, n = {}) {
          const i = (this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect()),
            s = Object.assign(Object.assign({}, qs), n.animation);
          n.centered && ((t = i.left + i.width / 2), (e = i.top + i.height / 2));
          const r =
              n.radius ||
              (function (t, e, n) {
                const i = Math.max(Math.abs(t - n.left), Math.abs(t - n.right)),
                  s = Math.max(Math.abs(e - n.top), Math.abs(e - n.bottom));
                return Math.sqrt(i * i + s * s);
              })(t, e, i),
            o = t - i.left,
            a = e - i.top,
            l = s.enterDuration,
            c = document.createElement('div');
          c.classList.add('mat-ripple-element'),
            (c.style.left = o - r + 'px'),
            (c.style.top = a - r + 'px'),
            (c.style.height = 2 * r + 'px'),
            (c.style.width = 2 * r + 'px'),
            null != n.color && (c.style.backgroundColor = n.color),
            (c.style.transitionDuration = l + 'ms'),
            this._containerElement.appendChild(c),
            window.getComputedStyle(c).getPropertyValue('opacity'),
            (c.style.transform = 'scale(1)');
          const u = new $s(this, c, n);
          return (
            (u.state = 0),
            this._activeRipples.add(u),
            n.persistent || (this._mostRecentTransientRipple = u),
            this._runTimeoutOutsideZone(() => {
              const t = u === this._mostRecentTransientRipple;
              (u.state = 1), n.persistent || (t && this._isPointerDown) || u.fadeOut();
            }, l),
            u
          );
        }
        fadeOutRipple(t) {
          const e = this._activeRipples.delete(t);
          if (
            (t === this._mostRecentTransientRipple && (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !e)
          )
            return;
          const n = t.element,
            i = Object.assign(Object.assign({}, qs), t.config.animation);
          (n.style.transitionDuration = i.exitDuration + 'ms'),
            (n.style.opacity = '0'),
            (t.state = 2),
            this._runTimeoutOutsideZone(() => {
              (t.state = 3), n.parentNode.removeChild(n);
            }, i.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((t) => t.fadeOut());
        }
        setupTriggerEvents(t) {
          const e = qi(t);
          e &&
            e !== this._triggerElement &&
            (this._removeTriggerEvents(), (this._triggerElement = e), this._registerEvents(Ks));
        }
        handleEvent(t) {
          'mousedown' === t.type
            ? this._onMousedown(t)
            : 'touchstart' === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered || (this._registerEvents(Qs), (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(t) {
          const e = us(t),
            n = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + 800;
          this._target.rippleDisabled ||
            e ||
            n ||
            ((this._isPointerDown = !0), this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled) {
            (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let t = 0; t < e.length; t++) this.fadeInRipple(e[t].clientX, e[t].clientY, this._target.rippleConfig);
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((t) => {
              !t.config.persistent &&
                (1 === t.state || (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(t, e = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(t, e));
        }
        _registerEvents(t) {
          this._ngZone.runOutsideAngular(() => {
            t.forEach((t) => {
              this._triggerElement.addEventListener(t, this, Ws);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (Ks.forEach((t) => {
              this._triggerElement.removeEventListener(t, this, Ws);
            }),
            this._pointerUpEventsRegistered &&
              Qs.forEach((t) => {
                this._triggerElement.removeEventListener(t, this, Ws);
              }));
        }
      }
      const Gs = new s.r('mat-ripple-global-options');
      let Xs = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this._elementRef = t),
                (this._animationMode = s),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = i || {}),
                (this._rippleRenderer = new Zs(this, e, t, n));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              (this._disabled = t), this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(t) {
              (this._trigger = t), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    'NoopAnimations' === this._animationMode ? { enterDuration: 0, exitDuration: 0 } : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled && this._isInitialized && this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(t, e = 0, n) {
              return 'number' == typeof t
                ? this._rippleRenderer.fadeInRipple(t, e, Object.assign(Object.assign({}, this.rippleConfig), n))
                : this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(s.A), s.Ob(Gi), s.Ob(Gs, 8), s.Ob(Ai, 8));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && s.Fb('mat-ripple-unbounded', e.unbounded);
              },
              inputs: {
                radius: ['matRippleRadius', 'radius'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                animation: ['matRippleAnimation', 'animation'],
              },
              exportAs: ['matRipple'],
            })),
            t
          );
        })(),
        Js = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ss, Xi], Ss],
            })),
            t
          );
        })(),
        tr = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        er = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Js, r.c, tr]],
            })),
            t
          );
        })();
      var nr = n('VRyK');
      function ir(t, e, n, i) {
        return (
          Object(Di.a)(n) && ((i = n), (n = void 0)),
          i
            ? ir(t, e, n).pipe(Object(l.a)((t) => (Object(a.a)(t) ? i(...t) : i(t))))
            : new o.a((i) => {
                !(function t(e, n, i, s, r) {
                  let o;
                  if (
                    (function (t) {
                      return t && 'function' == typeof t.addEventListener && 'function' == typeof t.removeEventListener;
                    })(e)
                  ) {
                    const t = e;
                    e.addEventListener(n, i, r), (o = () => t.removeEventListener(n, i, r));
                  } else if (
                    (function (t) {
                      return t && 'function' == typeof t.on && 'function' == typeof t.off;
                    })(e)
                  ) {
                    const t = e;
                    e.on(n, i), (o = () => t.off(n, i));
                  } else if (
                    (function (t) {
                      return t && 'function' == typeof t.addListener && 'function' == typeof t.removeListener;
                    })(e)
                  ) {
                    const t = e;
                    e.addListener(n, i), (o = () => t.removeListener(n, i));
                  } else {
                    if (!e || !e.length) throw new TypeError('Invalid event target');
                    for (let o = 0, a = e.length; o < a; o++) t(e[o], n, i, s, r);
                  }
                  s.add(o);
                })(
                  t,
                  e,
                  function (t) {
                    i.next(arguments.length > 1 ? Array.prototype.slice.call(arguments) : t);
                  },
                  i,
                  n
                );
              })
        );
      }
      let sr = 1;
      const rr = (() => Promise.resolve())(),
        or = {};
      function ar(t) {
        return t in or && (delete or[t], !0);
      }
      const lr = {
        setImmediate(t) {
          const e = sr++;
          return (or[e] = !0), rr.then(() => ar(e) && t()), e;
        },
        clearImmediate(t) {
          ar(t);
        },
      };
      class cr extends _t {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e);
        }
        requestAsyncId(t, e, n = 0) {
          return null !== n && n > 0
            ? super.requestAsyncId(t, e, n)
            : (t.actions.push(this), t.scheduled || (t.scheduled = lr.setImmediate(t.flush.bind(t, null))));
        }
        recycleAsyncId(t, e, n = 0) {
          if ((null !== n && n > 0) || (null === n && this.delay > 0)) return super.recycleAsyncId(t, e, n);
          0 === t.actions.length && (lr.clearImmediate(e), (t.scheduled = void 0));
        }
      }
      class ur extends wt {
        flush(t) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: e } = this;
          let n,
            i = -1,
            s = e.length;
          t = t || e.shift();
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while (++i < s && (t = e.shift()));
          if (((this.active = !1), n)) {
            for (; ++i < s && (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      }
      const hr = new ur(cr);
      class dr {
        constructor(t, e) {
          (this.compare = t), (this.keySelector = e);
        }
        call(t, e) {
          return e.subscribe(new pr(t, this.compare, this.keySelector));
        }
      }
      class pr extends x.a {
        constructor(t, e, n) {
          super(t), (this.keySelector = n), (this.hasKey = !1), 'function' == typeof e && (this.compare = e);
        }
        compare(t, e) {
          return t === e;
        }
        _next(t) {
          let e;
          try {
            const { keySelector: n } = this;
            e = n ? n(t) : t;
          } catch (i) {
            return this.destination.error(i);
          }
          let n = !1;
          if (this.hasKey)
            try {
              const { compare: t } = this;
              n = t(this.key, e);
            } catch (i) {
              return this.destination.error(i);
            }
          else this.hasKey = !0;
          n || ((this.key = e), this.destination.next(t));
        }
      }
      class mr {
        constructor(t) {
          this.durationSelector = t;
        }
        call(t, e) {
          return e.subscribe(new fr(t, this.durationSelector));
        }
      }
      class fr extends jt.a {
        constructor(t, e) {
          super(t), (this.durationSelector = e), (this.hasValue = !1);
        }
        _next(t) {
          if (((this.value = t), (this.hasValue = !0), !this.throttled)) {
            let n;
            try {
              const { durationSelector: e } = this;
              n = e(t);
            } catch (e) {
              return this.destination.error(e);
            }
            const i = Object(Mt.a)(this, n);
            !i || i.closed ? this.clearThrottle() : this.add((this.throttled = i));
          }
        }
        clearThrottle() {
          const { value: t, hasValue: e, throttled: n } = this;
          n && (this.remove(n), (this.throttled = null), n.unsubscribe()),
            e && ((this.value = null), (this.hasValue = !1), this.destination.next(t));
        }
        notifyNext(t, e, n, i) {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      function gr(t) {
        return !Object(a.a)(t) && t - parseFloat(t) + 1 >= 0;
      }
      function br(t) {
        const { index: e, period: n, subscriber: i } = t;
        if ((i.next(e), !i.closed)) {
          if (-1 === n) return i.complete();
          (t.index = e + 1), this.schedule(t, n);
        }
      }
      function _r(t, e = Ni) {
        return (
          (n = () =>
            (function (t = 0, e, n) {
              let i = -1;
              return (
                gr(e) ? (i = Number(e) < 1 ? 1 : Number(e)) : Object(g.a)(e) && (n = e),
                Object(g.a)(n) || (n = Ni),
                new o.a((e) => {
                  const s = gr(t) ? t : +t - n.now();
                  return n.schedule(br, s, { index: 0, period: i, subscriber: e });
                })
              );
            })(t, e)),
          function (t) {
            return t.lift(new mr(n));
          }
        );
        var n;
      }
      function yr(t) {
        return (e) => e.lift(new vr(t));
      }
      class vr {
        constructor(t) {
          this.notifier = t;
        }
        call(t, e) {
          const n = new wr(t),
            i = Object(Mt.a)(n, this.notifier);
          return i && !n.seenValue ? (n.add(i), e.subscribe(n)) : n;
        }
      }
      class wr extends jt.a {
        constructor(t) {
          super(t), (this.seenValue = !1);
        }
        notifyNext(t, e, n, i, s) {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
      let xr = (() => {
          class t {
            constructor(t, e, n) {
              (this._ngZone = t),
                (this._platform = e),
                (this._scrolled = new ft.a()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = n);
            }
            register(t) {
              this.scrollContainers.has(t) ||
                this.scrollContainers.set(
                  t,
                  t.elementScrolled().subscribe(() => this._scrolled.next(t))
                );
            }
            deregister(t) {
              const e = this.scrollContainers.get(t);
              e && (e.unsubscribe(), this.scrollContainers.delete(t));
            }
            scrolled(t = 20) {
              return this._platform.isBrowser
                ? new o.a((e) => {
                    this._globalSubscription || this._addGlobalListener();
                    const n = t > 0 ? this._scrolled.pipe(_r(t)).subscribe(e) : this._scrolled.subscribe(e);
                    return (
                      this._scrolledCount++,
                      () => {
                        n.unsubscribe(), this._scrolledCount--, this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : y();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((t, e) => this.deregister(e)),
                this._scrolled.complete();
            }
            ancestorScrolled(t, e) {
              const n = this.getAncestorScrollContainers(t);
              return this.scrolled(e).pipe(C((t) => !t || n.indexOf(t) > -1));
            }
            getAncestorScrollContainers(t) {
              const e = [];
              return (
                this.scrollContainers.forEach((n, i) => {
                  this._scrollableContainsElement(i, t) && e.push(i);
                }),
                e
              );
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _scrollableContainsElement(t, e) {
              let n = e.nativeElement,
                i = t.getElementRef().nativeElement;
              do {
                if (n == i) return !0;
              } while ((n = n.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                ir(this._getWindow().document, 'scroll').subscribe(() => this._scrolled.next())
              );
            }
            _removeGlobalListener() {
              this._globalSubscription && (this._globalSubscription.unsubscribe(), (this._globalSubscription = null));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(s.A), s.Yb(Gi), s.Yb(r.d, 8));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(s.A), Object(s.Yb)(Gi), Object(s.Yb)(r.d, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Cr = (() => {
          class t {
            constructor(t, e, n, i) {
              (this.elementRef = t),
                (this.scrollDispatcher = e),
                (this.ngZone = n),
                (this.dir = i),
                (this._destroyed = new ft.a()),
                (this._elementScrolled = new o.a((t) =>
                  this.ngZone.runOutsideAngular(() =>
                    ir(this.elementRef.nativeElement, 'scroll').pipe(yr(this._destroyed)).subscribe(t)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this), this._destroyed.next(), this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(t) {
              const e = this.elementRef.nativeElement,
                n = this.dir && 'rtl' == this.dir.value;
              null == t.left && (t.left = n ? t.end : t.start),
                null == t.right && (t.right = n ? t.start : t.end),
                null != t.bottom && (t.top = e.scrollHeight - e.clientHeight - t.bottom),
                n && 0 != ts()
                  ? (null != t.left && (t.right = e.scrollWidth - e.clientWidth - t.left),
                    2 == ts() ? (t.left = t.right) : 1 == ts() && (t.left = t.right ? -t.right : t.right))
                  : null != t.right && (t.left = e.scrollWidth - e.clientWidth - t.right),
                this._applyScrollToOptions(t);
            }
            _applyScrollToOptions(t) {
              const e = this.elementRef.nativeElement;
              'object' == typeof document && 'scrollBehavior' in document.documentElement.style
                ? e.scrollTo(t)
                : (null != t.top && (e.scrollTop = t.top), null != t.left && (e.scrollLeft = t.left));
            }
            measureScrollOffset(t) {
              const e = this.elementRef.nativeElement;
              if ('top' == t) return e.scrollTop;
              if ('bottom' == t) return e.scrollHeight - e.clientHeight - e.scrollTop;
              const n = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == t ? (t = n ? 'right' : 'left') : 'end' == t && (t = n ? 'left' : 'right'),
                n && 2 == ts()
                  ? 'left' == t
                    ? e.scrollWidth - e.clientWidth - e.scrollLeft
                    : e.scrollLeft
                  : n && 1 == ts()
                  ? 'left' == t
                    ? e.scrollLeft + e.scrollWidth - e.clientWidth
                    : -e.scrollLeft
                  : 'left' == t
                  ? e.scrollLeft
                  : e.scrollWidth - e.clientWidth - e.scrollLeft
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(xr), s.Ob(s.A), s.Ob(_s, 8));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
            })),
            t
          );
        })(),
        Sr = (() => {
          class t {
            constructor(t, e, n) {
              (this._platform = t),
                (this._document = n),
                e.runOutsideAngular(() => {
                  const e = this._getWindow();
                  (this._change = t.isBrowser ? Object(nr.a)(ir(e, 'resize'), ir(e, 'orientationchange')) : y()),
                    (this._invalidateCache = this.change().subscribe(() => this._updateViewportSize()));
                });
            }
            ngOnDestroy() {
              this._invalidateCache.unsubscribe();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const t = { width: this._viewportSize.width, height: this._viewportSize.height };
              return this._platform.isBrowser || (this._viewportSize = null), t;
            }
            getViewportRect() {
              const t = this.getViewportScrollPosition(),
                { width: e, height: n } = this.getViewportSize();
              return { top: t.top, left: t.left, bottom: t.top + n, right: t.left + e, height: n, width: e };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const t = this._getDocument(),
                e = this._getWindow(),
                n = t.documentElement,
                i = n.getBoundingClientRect();
              return {
                top: -i.top || t.body.scrollTop || e.scrollY || n.scrollTop || 0,
                left: -i.left || t.body.scrollLeft || e.scrollX || n.scrollLeft || 0,
              };
            }
            change(t = 20) {
              return t > 0 ? this._change.pipe(_r(t)) : this._change;
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _updateViewportSize() {
              const t = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: t.innerWidth, height: t.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(Gi), s.Yb(s.A), s.Yb(r.d, 8));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(Gi), Object(s.Yb)(s.A), Object(s.Yb)(r.d, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Er = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        kr = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[ys, Xi, Er], ys, Er],
            })),
            t
          );
        })();
      function Or() {
        throw Error('Host already has a portal attached');
      }
      class Ar {
        attach(t) {
          return (
            null == t &&
              (function () {
                throw Error('Attempting to attach a portal to a null PortalOutlet');
              })(),
            t.hasAttached() && Or(),
            (this._attachedHost = t),
            t.attach(this)
          );
        }
        detach() {
          let t = this._attachedHost;
          null == t
            ? (function () {
                throw Error('Attempting to detach a portal that is not attached to a host');
              })()
            : ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class Tr extends Ar {
        constructor(t, e, n, i) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = n),
            (this.componentFactoryResolver = i);
        }
      }
      class Ir extends Ar {
        constructor(t, e, n) {
          super(), (this.templateRef = t), (this.viewContainerRef = e), (this.context = n);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class Rr extends Ar {
        constructor(t) {
          super(), (this.element = t instanceof s.l ? t.nativeElement : t);
        }
      }
      class Pr {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return (
            t ||
              (function () {
                throw Error('Must provide a portal to attach');
              })(),
            this.hasAttached() && Or(),
            this._isDisposed &&
              (function () {
                throw Error('This PortalOutlet has already been disposed');
              })(),
            t instanceof Tr
              ? ((this._attachedPortal = t), this.attachComponentPortal(t))
              : t instanceof Ir
              ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
              : this.attachDomPortal && t instanceof Rr
              ? ((this._attachedPortal = t), this.attachDomPortal(t))
              : void (function () {
                  throw Error(
                    'Attempting to attach an unknown Portal type. BasePortalOutlet accepts either a ComponentPortal or a TemplatePortal.'
                  );
                })()
          );
        }
        detach() {
          this._attachedPortal && (this._attachedPortal.setAttachedHost(null), (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(), this._invokeDisposeFn(), (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class Dr extends Pr {
        constructor(t, e, n, i, s) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = n),
            (this._defaultInjector = i),
            (this.attachDomPortal = (t) => {
              if (!this._document) throw Error('Cannot attach DOM portal without _document constructor parameter');
              const e = t.element;
              if (!e.parentNode) throw Error('DOM portal content must be attached to a parent node.');
              const n = this._document.createComment('dom-portal');
              e.parentNode.insertBefore(n, e),
                this.outletElement.appendChild(e),
                super.setDisposeFn(() => {
                  n.parentNode && n.parentNode.replaceChild(e, n);
                });
            }),
            (this._document = s);
        }
        attachComponentPortal(t) {
          const e = (t.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(t.component);
          let n;
          return (
            t.viewContainerRef
              ? ((n = t.viewContainerRef.createComponent(
                  e,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector
                )),
                this.setDisposeFn(() => n.destroy()))
              : ((n = e.create(t.injector || this._defaultInjector)),
                this._appRef.attachView(n.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(n.hostView), n.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(n)),
            n
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            n = e.createEmbeddedView(t.templateRef, t.context);
          return (
            n.detectChanges(),
            n.rootNodes.forEach((t) => this.outletElement.appendChild(t)),
            this.setDisposeFn(() => {
              let t = e.indexOf(n);
              -1 !== t && e.remove(t);
            }),
            n
          );
        }
        dispose() {
          super.dispose(),
            null != this.outletElement.parentNode && this.outletElement.parentNode.removeChild(this.outletElement);
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let jr = (() => {
          class t extends Pr {
            constructor(t, e, n) {
              super(),
                (this._componentFactoryResolver = t),
                (this._viewContainerRef = e),
                (this._isInitialized = !1),
                (this.attached = new s.o()),
                (this.attachDomPortal = (t) => {
                  if (!this._document) throw Error('Cannot attach DOM portal without _document constructor parameter');
                  const e = t.element;
                  if (!e.parentNode) throw Error('DOM portal content must be attached to a parent node.');
                  const n = this._document.createComment('dom-portal');
                  t.setAttachedHost(this),
                    e.parentNode.insertBefore(n, e),
                    this._getRootNode().appendChild(e),
                    super.setDisposeFn(() => {
                      n.parentNode && n.parentNode.replaceChild(e, n);
                    });
                }),
                (this._document = n);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(t) {
              (!this.hasAttached() || t || this._isInitialized) &&
                (this.hasAttached() && super.detach(), t && super.attach(t), (this._attachedPortal = t));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(), (this._attachedPortal = null), (this._attachedRef = null);
            }
            attachComponentPortal(t) {
              t.setAttachedHost(this);
              const e = null != t.viewContainerRef ? t.viewContainerRef : this._viewContainerRef,
                n = (t.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(t.component),
                i = e.createComponent(n, e.length, t.injector || e.injector);
              return (
                e !== this._viewContainerRef && this._getRootNode().appendChild(i.hostView.rootNodes[0]),
                super.setDisposeFn(() => i.destroy()),
                (this._attachedPortal = t),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            attachTemplatePortal(t) {
              t.setAttachedHost(this);
              const e = this._viewContainerRef.createEmbeddedView(t.templateRef, t.context);
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = t),
                (this._attachedRef = e),
                this.attached.emit(e),
                e
              );
            }
            _getRootNode() {
              const t = this._viewContainerRef.element.nativeElement;
              return t.nodeType === t.ELEMENT_NODE ? t : t.parentNode;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.j), s.Ob(s.P), s.Ob(r.d));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [s.zb],
            })),
            t
          );
        })(),
        Lr = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })();
      class Mr {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ''),
              (this._previousHTMLStyles.top = t.style.top || ''),
              (t.style.left = $i(-this._previousScrollPosition.left)),
              (t.style.top = $i(-this._previousScrollPosition.top)),
              t.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              e = t.style,
              n = this._document.body.style,
              i = e.scrollBehavior || '',
              s = n.scrollBehavior || '';
            (this._isEnabled = !1),
              (e.left = this._previousHTMLStyles.left),
              (e.top = this._previousHTMLStyles.top),
              t.classList.remove('cdk-global-scrollblock'),
              (e.scrollBehavior = n.scrollBehavior = 'auto'),
              window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top),
              (e.scrollBehavior = i),
              (n.scrollBehavior = s);
          }
        }
        _canBeEnabled() {
          if (this._document.documentElement.classList.contains('cdk-global-scrollblock') || this._isEnabled) return !1;
          const t = this._document.body,
            e = this._viewportRuler.getViewportSize();
          return t.scrollHeight > e.height || t.scrollWidth > e.width;
        }
      }
      function Nr() {
        return Error('Scroll strategy has already been attached.');
      }
      class Fr {
        constructor(t, e, n, i) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = n),
            (this._config = i),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(), this._overlayRef.hasAttached() && this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          if (this._overlayRef) throw Nr();
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const t = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(t - this._initialScrollPosition) > this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class Vr {
        enable() {}
        disable() {}
        attach() {}
      }
      function Hr(t, e) {
        return e.some((e) => t.bottom < e.top || t.top > e.bottom || t.right < e.left || t.left > e.right);
      }
      function Br(t, e) {
        return e.some((e) => t.top < e.top || t.bottom > e.bottom || t.left < e.left || t.right > e.right);
      }
      class Ur {
        constructor(t, e, n, i) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = n),
            (this._config = i),
            (this._scrollSubscription = null);
        }
        attach(t) {
          if (this._overlayRef) throw Nr();
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if ((this._overlayRef.updatePosition(), this._config && this._config.autoClose)) {
                  const t = this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: e, height: n } = this._viewportRuler.getViewportSize();
                  Hr(t, [{ width: e, height: n, bottom: n, right: e, top: 0, left: 0 }]) &&
                    (this.disable(), this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let zr = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._scrollDispatcher = t),
              (this._viewportRuler = e),
              (this._ngZone = n),
              (this.noop = () => new Vr()),
              (this.close = (t) => new Fr(this._scrollDispatcher, this._ngZone, this._viewportRuler, t)),
              (this.block = () => new Mr(this._viewportRuler, this._document)),
              (this.reposition = (t) => new Ur(this._scrollDispatcher, this._viewportRuler, this._ngZone, t)),
              (this._document = i);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(xr), s.Yb(Sr), s.Yb(s.A), s.Yb(r.d));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(xr), Object(s.Yb)(Sr), Object(s.Yb)(s.A), Object(s.Yb)(r.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class Yr {
        constructor(t) {
          if (
            ((this.scrollStrategy = new Vr()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const n of e) void 0 !== t[n] && (this[n] = t[n]);
          }
        }
      }
      class $r {
        constructor(t, e, n, i, s) {
          (this.offsetX = n),
            (this.offsetY = i),
            (this.panelClass = s),
            (this.originX = t.originX),
            (this.originY = t.originY),
            (this.overlayX = e.overlayX),
            (this.overlayY = e.overlayY);
        }
      }
      class qr {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      function Wr(t, e) {
        if ('top' !== e && 'bottom' !== e && 'center' !== e)
          throw Error(`ConnectedPosition: Invalid ${t} "${e}". Expected "top", "bottom" or "center".`);
      }
      function Kr(t, e) {
        if ('start' !== e && 'end' !== e && 'center' !== e)
          throw Error(`ConnectedPosition: Invalid ${t} "${e}". Expected "start", "end" or "center".`);
      }
      let Qr = (() => {
        class t {
          constructor(t) {
            (this._attachedOverlays = []),
              (this._keydownListener = (t) => {
                const e = this._attachedOverlays;
                for (let n = e.length - 1; n > -1; n--)
                  if (e[n]._keydownEvents.observers.length > 0) {
                    e[n]._keydownEvents.next(t);
                    break;
                  }
              }),
              (this._document = t);
          }
          ngOnDestroy() {
            this._detach();
          }
          add(t) {
            this.remove(t),
              this._isAttached ||
                (this._document.body.addEventListener('keydown', this._keydownListener), (this._isAttached = !0)),
              this._attachedOverlays.push(t);
          }
          remove(t) {
            const e = this._attachedOverlays.indexOf(t);
            e > -1 && this._attachedOverlays.splice(e, 1), 0 === this._attachedOverlays.length && this._detach();
          }
          _detach() {
            this._isAttached &&
              (this._document.body.removeEventListener('keydown', this._keydownListener), (this._isAttached = !1));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(r.d));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(r.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const Zr = !('undefined' == typeof window || !window || (!window.__karma__ && !window.jasmine));
      let Gr = (() => {
        class t {
          constructor(t, e) {
            (this._platform = e), (this._document = t);
          }
          ngOnDestroy() {
            const t = this._containerElement;
            t && t.parentNode && t.parentNode.removeChild(t);
          }
          getContainerElement() {
            return this._containerElement || this._createContainer(), this._containerElement;
          }
          _createContainer() {
            const t = this._platform ? this._platform.isBrowser : 'undefined' != typeof window;
            if (t || Zr) {
              const t = this._document.querySelectorAll(
                '.cdk-overlay-container[platform="server"], .cdk-overlay-container[platform="test"]'
              );
              for (let e = 0; e < t.length; e++) t[e].parentNode.removeChild(t[e]);
            }
            const e = this._document.createElement('div');
            e.classList.add('cdk-overlay-container'),
              Zr ? e.setAttribute('platform', 'test') : t || e.setAttribute('platform', 'server'),
              this._document.body.appendChild(e),
              (this._containerElement = e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(r.d), s.Yb(Gi));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(r.d), Object(s.Yb)(Gi));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class Xr {
        constructor(t, e, n, i, s, r, o, a) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = n),
            (this._config = i),
            (this._ngZone = s),
            (this._keyboardDispatcher = r),
            (this._document = o),
            (this._location = a),
            (this._backdropElement = null),
            (this._backdropClick = new ft.a()),
            (this._attachments = new ft.a()),
            (this._detachments = new ft.a()),
            (this._locationChanges = gt.a.EMPTY),
            (this._backdropClickHandler = (t) => this._backdropClick.next(t)),
            (this._keydownEvents = new ft.a()),
            i.scrollStrategy && ((this._scrollStrategy = i.scrollStrategy), this._scrollStrategy.attach(this)),
            (this._positionStrategy = i.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          let e = this._portalOutlet.attach(t);
          return (
            !this._host.parentElement && this._previousHostParent && this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable
              .asObservable()
              .pipe(dt(1))
              .subscribe(() => {
                this.hasAttached() && this.updatePosition();
              }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              this._location &&
              (this._locationChanges = this._location.subscribe(() => this.dispose())),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy && this._positionStrategy.detach && this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this.detachBackdrop(),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._host && this._host.parentNode && (this._host.parentNode.removeChild(this._host), (this._host = null)),
            (this._previousHostParent = this._pane = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick.asObservable();
        }
        attachments() {
          return this._attachments.asObservable();
        }
        detachments() {
          return this._detachments.asObservable();
        }
        keydownEvents() {
          return this._keydownEvents.asObservable();
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = Object.assign(Object.assign({}, this._config), t)), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = Object.assign(Object.assign({}, this._config), { direction: t })),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ('string' == typeof t ? t : t.value) : 'ltr';
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = $i(this._config.width)),
            (t.height = $i(this._config.height)),
            (t.minWidth = $i(this._config.minWidth)),
            (t.minHeight = $i(this._config.minHeight)),
            (t.maxWidth = $i(this._config.maxWidth)),
            (t.maxHeight = $i(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? 'auto' : 'none';
        }
        _attachBackdrop() {
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._config.backdropClass && this._toggleClasses(this._backdropElement, this._config.backdropClass, !0),
            this._host.parentElement.insertBefore(this._backdropElement, this._host),
            this._backdropElement.addEventListener('click', this._backdropClickHandler),
            'undefined' != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement && this._backdropElement.classList.add('cdk-overlay-backdrop-showing');
                  });
                })
              : this._backdropElement.classList.add('cdk-overlay-backdrop-showing');
        }
        _updateStackingOrder() {
          this._host.nextSibling && this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          let t,
            e = this._backdropElement;
          if (!e) return;
          let n = () => {
            e &&
              (e.removeEventListener('click', this._backdropClickHandler),
              e.removeEventListener('transitionend', n),
              e.parentNode && e.parentNode.removeChild(e)),
              this._backdropElement == e && (this._backdropElement = null),
              this._config.backdropClass && this._toggleClasses(e, this._config.backdropClass, !1),
              clearTimeout(t);
          };
          e.classList.remove('cdk-overlay-backdrop-showing'),
            this._ngZone.runOutsideAngular(() => {
              e.addEventListener('transitionend', n);
            }),
            (e.style.pointerEvents = 'none'),
            (t = this._ngZone.runOutsideAngular(() => setTimeout(n, 500)));
        }
        _toggleClasses(t, e, n) {
          const i = t.classList;
          Yi(e).forEach((t) => {
            t && (n ? i.add(t) : i.remove(t));
          });
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .asObservable()
              .pipe(yr(Object(nr.a)(this._attachments, this._detachments)))
              .subscribe(() => {
                (this._pane && this._host && 0 !== this._pane.children.length) ||
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(this._pane, this._config.panelClass, !1),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._previousHostParent.removeChild(this._host)),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
      }
      const Jr = /([A-Za-z%]+)$/;
      class to {
        constructor(t, e, n, i, s) {
          (this._viewportRuler = e),
            (this._document = n),
            (this._platform = i),
            (this._overlayContainer = s),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new ft.a()),
            (this._resizeSubscription = gt.a.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges.asObservable()),
            this.setOrigin(t);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          if (this._overlayRef && t !== this._overlayRef)
            throw Error('This position strategy is already attached to an overlay');
          this._validatePositions(),
            t.hostElement.classList.add('cdk-overlay-connected-position-bounding-box'),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler.change().subscribe(() => {
              (this._isInitialRender = !0), this.apply();
            }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (!this._isInitialRender && this._positionLocked && this._lastPosition)
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            n = this._viewportRect,
            i = [];
          let s;
          for (let r of this._preferredPositions) {
            let o = this._getOriginPoint(t, r),
              a = this._getOverlayPoint(o, e, r),
              l = this._getOverlayFit(a, e, n, r);
            if (l.isCompletelyWithinViewport) return (this._isPushed = !1), void this._applyPosition(r, o);
            this._canFitWithFlexibleDimensions(l, a, n)
              ? i.push({
                  position: r,
                  origin: o,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(o, r),
                })
              : (!s || s.overlayFit.visibleArea < l.visibleArea) &&
                (s = { overlayFit: l, overlayPoint: a, originPoint: o, position: r, overlayRect: e });
          }
          if (i.length) {
            let t = null,
              e = -1;
            for (const n of i) {
              const i = n.boundingBoxRect.width * n.boundingBoxRect.height * (n.position.weight || 1);
              i > e && ((e = i), (t = n));
            }
            return (this._isPushed = !1), void this._applyPosition(t.position, t.origin);
          }
          if (this._canPush) return (this._isPushed = !0), void this._applyPosition(s.position, s.originPoint);
          this._applyPosition(s.position, s.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              eo(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove('cdk-overlay-connected-position-bounding-box'),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect());
            const t = this._lastPosition || this._preferredPositions[0],
              e = this._getOriginPoint(this._originRect, t);
            this._applyPosition(t, e);
          }
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e) {
          let n, i;
          if ('center' == e.originX) n = t.left + t.width / 2;
          else {
            const i = this._isRtl() ? t.right : t.left,
              s = this._isRtl() ? t.left : t.right;
            n = 'start' == e.originX ? i : s;
          }
          return (
            (i = 'center' == e.originY ? t.top + t.height / 2 : 'top' == e.originY ? t.top : t.bottom), { x: n, y: i }
          );
        }
        _getOverlayPoint(t, e, n) {
          let i, s;
          return (
            (i =
              'center' == n.overlayX
                ? -e.width / 2
                : 'start' === n.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (s = 'center' == n.overlayY ? -e.height / 2 : 'top' == n.overlayY ? 0 : -e.height),
            { x: t.x + i, y: t.y + s }
          );
        }
        _getOverlayFit(t, e, n, i) {
          let { x: s, y: r } = t,
            o = this._getOffset(i, 'x'),
            a = this._getOffset(i, 'y');
          o && (s += o), a && (r += a);
          let l = 0 - r,
            c = r + e.height - n.height,
            u = this._subtractOverflows(e.width, 0 - s, s + e.width - n.width),
            h = this._subtractOverflows(e.height, l, c),
            d = u * h;
          return {
            visibleArea: d,
            isCompletelyWithinViewport: e.width * e.height === d,
            fitsInViewportVertically: h === e.height,
            fitsInViewportHorizontally: u == e.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, n) {
          if (this._hasFlexibleDimensions) {
            const i = n.bottom - e.y,
              s = n.right - e.x,
              r = no(this._overlayRef.getConfig().minHeight),
              o = no(this._overlayRef.getConfig().minWidth),
              a = t.fitsInViewportHorizontally || (null != o && o <= s);
            return (t.fitsInViewportVertically || (null != r && r <= i)) && a;
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, n) {
          if (this._previousPushAmount && this._positionLocked)
            return { x: t.x + this._previousPushAmount.x, y: t.y + this._previousPushAmount.y };
          const i = this._viewportRect,
            s = Math.max(t.x + e.width - i.right, 0),
            r = Math.max(t.y + e.height - i.bottom, 0),
            o = Math.max(i.top - n.top - t.y, 0),
            a = Math.max(i.left - n.left - t.x, 0);
          let l = 0,
            c = 0;
          return (
            (l = e.width <= i.width ? a || -s : t.x < this._viewportMargin ? i.left - n.left - t.x : 0),
            (c = e.height <= i.height ? o || -r : t.y < this._viewportMargin ? i.top - n.top - t.y : 0),
            (this._previousPushAmount = { x: l, y: c }),
            { x: t.x + l, y: t.y + c }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const e = this._getScrollVisibility(),
              n = new qr(t, e);
            this._positionChanges.next(n);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(this._transformOriginSelector);
          let n,
            i = t.overlayY;
          n =
            'center' === t.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === t.overlayX
                ? 'right'
                : 'left'
              : 'start' === t.overlayX
              ? 'left'
              : 'right';
          for (let s = 0; s < e.length; s++) e[s].style.transformOrigin = `${n} ${i}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const n = this._viewportRect,
            i = this._isRtl();
          let s, r, o, a, l, c;
          if ('top' === e.overlayY) (r = t.y), (s = n.height - r + this._viewportMargin);
          else if ('bottom' === e.overlayY)
            (o = n.height - t.y + 2 * this._viewportMargin), (s = n.height - o + this._viewportMargin);
          else {
            const e = Math.min(n.bottom - t.y + n.top, t.y),
              i = this._lastBoundingBoxSize.height;
            (s = 2 * e), (r = t.y - e), s > i && !this._isInitialRender && !this._growAfterOpen && (r = t.y - i / 2);
          }
          if (('end' === e.overlayX && !i) || ('start' === e.overlayX && i))
            (c = n.width - t.x + this._viewportMargin), (a = t.x - this._viewportMargin);
          else if (('start' === e.overlayX && !i) || ('end' === e.overlayX && i)) (l = t.x), (a = n.right - t.x);
          else {
            const e = Math.min(n.right - t.x + n.left, t.x),
              i = this._lastBoundingBoxSize.width;
            (a = 2 * e), (l = t.x - e), a > i && !this._isInitialRender && !this._growAfterOpen && (l = t.x - i / 2);
          }
          return { top: r, left: l, bottom: o, right: c, width: a, height: s };
        }
        _setBoundingBoxStyles(t, e) {
          const n = this._calculateBoundingBoxRect(t, e);
          this._isInitialRender ||
            this._growAfterOpen ||
            ((n.height = Math.min(n.height, this._lastBoundingBoxSize.height)),
            (n.width = Math.min(n.width, this._lastBoundingBoxSize.width)));
          const i = {};
          if (this._hasExactPosition())
            (i.top = i.left = '0'), (i.bottom = i.right = i.maxHeight = i.maxWidth = ''), (i.width = i.height = '100%');
          else {
            const t = this._overlayRef.getConfig().maxHeight,
              s = this._overlayRef.getConfig().maxWidth;
            (i.height = $i(n.height)),
              (i.top = $i(n.top)),
              (i.bottom = $i(n.bottom)),
              (i.width = $i(n.width)),
              (i.left = $i(n.left)),
              (i.right = $i(n.right)),
              (i.alignItems = 'center' === e.overlayX ? 'center' : 'end' === e.overlayX ? 'flex-end' : 'flex-start'),
              (i.justifyContent =
                'center' === e.overlayY ? 'center' : 'bottom' === e.overlayY ? 'flex-end' : 'flex-start'),
              t && (i.maxHeight = $i(t)),
              s && (i.maxWidth = $i(s));
          }
          (this._lastBoundingBoxSize = n), eo(this._boundingBox.style, i);
        }
        _resetBoundingBoxStyles() {
          eo(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          eo(this._pane.style, { top: '', left: '', bottom: '', right: '', position: '', transform: '' });
        }
        _setOverlayElementStyles(t, e) {
          const n = {},
            i = this._hasExactPosition(),
            s = this._hasFlexibleDimensions,
            r = this._overlayRef.getConfig();
          if (i) {
            const i = this._viewportRuler.getViewportScrollPosition();
            eo(n, this._getExactOverlayY(e, t, i)), eo(n, this._getExactOverlayX(e, t, i));
          } else n.position = 'static';
          let o = '',
            a = this._getOffset(e, 'x'),
            l = this._getOffset(e, 'y');
          a && (o += `translateX(${a}px) `),
            l && (o += `translateY(${l}px)`),
            (n.transform = o.trim()),
            r.maxHeight && (i ? (n.maxHeight = $i(r.maxHeight)) : s && (n.maxHeight = '')),
            r.maxWidth && (i ? (n.maxWidth = $i(r.maxWidth)) : s && (n.maxWidth = '')),
            eo(this._pane.style, n);
        }
        _getExactOverlayY(t, e, n) {
          let i = { top: '', bottom: '' },
            s = this._getOverlayPoint(e, this._overlayRect, t);
          this._isPushed && (s = this._pushOverlayOnScreen(s, this._overlayRect, n));
          let r = this._overlayContainer.getContainerElement().getBoundingClientRect().top;
          return (
            (s.y -= r),
            'bottom' === t.overlayY
              ? (i.bottom = this._document.documentElement.clientHeight - (s.y + this._overlayRect.height) + 'px')
              : (i.top = $i(s.y)),
            i
          );
        }
        _getExactOverlayX(t, e, n) {
          let i,
            s = { left: '', right: '' },
            r = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed && (r = this._pushOverlayOnScreen(r, this._overlayRect, n)),
            (i = this._isRtl() ? ('end' === t.overlayX ? 'left' : 'right') : 'end' === t.overlayX ? 'right' : 'left'),
            'right' === i
              ? (s.right = this._document.documentElement.clientWidth - (r.x + this._overlayRect.width) + 'px')
              : (s.left = $i(r.x)),
            s
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            n = this._scrollables.map((t) => t.getElementRef().nativeElement.getBoundingClientRect());
          return {
            isOriginClipped: Br(t, n),
            isOriginOutsideView: Hr(t, n),
            isOverlayClipped: Br(e, n),
            isOverlayOutsideView: Hr(e, n),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((t, e) => t - Math.max(e, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            n = this._viewportRuler.getViewportScrollPosition();
          return {
            top: n.top + this._viewportMargin,
            left: n.left + this._viewportMargin,
            right: n.left + t - this._viewportMargin,
            bottom: n.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return 'x' === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {
          if (!this._preferredPositions.length)
            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');
          this._preferredPositions.forEach((t) => {
            Kr('originX', t.originX), Wr('originY', t.originY), Kr('overlayX', t.overlayX), Wr('overlayY', t.overlayY);
          });
        }
        _addPanelClasses(t) {
          this._pane &&
            Yi(t).forEach((t) => {
              '' !== t &&
                -1 === this._appliedPanelClasses.indexOf(t) &&
                (this._appliedPanelClasses.push(t), this._pane.classList.add(t));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof s.l) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            n = t.height || 0;
          return { top: t.y, bottom: t.y + n, left: t.x, right: t.x + e, height: n, width: e };
        }
      }
      function eo(t, e) {
        for (let n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
        return t;
      }
      function no(t) {
        if ('number' != typeof t && null != t) {
          const [e, n] = t.split(Jr);
          return n && 'px' !== n ? null : parseFloat(e);
        }
        return t || null;
      }
      class io {
        constructor(t, e, n, i, s, r, o) {
          (this._preferredPositions = []),
            (this._positionStrategy = new to(n, i, s, r, o)
              .withFlexibleDimensions(!1)
              .withPush(!1)
              .withViewportMargin(0)),
            this.withFallbackPosition(t, e);
        }
        get _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        get onPositionChange() {
          return this._positionStrategy.positionChanges;
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          (this._overlayRef = t),
            this._positionStrategy.attach(t),
            this._direction && (t.setDirection(this._direction), (this._direction = null));
        }
        dispose() {
          this._positionStrategy.dispose();
        }
        detach() {
          this._positionStrategy.detach();
        }
        apply() {
          this._positionStrategy.apply();
        }
        recalculateLastPosition() {
          this._positionStrategy.reapplyLastPosition();
        }
        withScrollableContainers(t) {
          this._positionStrategy.withScrollableContainers(t);
        }
        withFallbackPosition(t, e, n, i) {
          const s = new $r(t, e, n, i);
          return this._preferredPositions.push(s), this._positionStrategy.withPositions(this._preferredPositions), this;
        }
        withDirection(t) {
          return this._overlayRef ? this._overlayRef.setDirection(t) : (this._direction = t), this;
        }
        withOffsetX(t) {
          return this._positionStrategy.withDefaultOffsetX(t), this;
        }
        withOffsetY(t) {
          return this._positionStrategy.withDefaultOffsetY(t), this;
        }
        withLockedPosition(t) {
          return this._positionStrategy.withLockedPosition(t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t.slice()), this._positionStrategy.withPositions(this._preferredPositions), this
          );
        }
        setOrigin(t) {
          return this._positionStrategy.setOrigin(t), this;
        }
      }
      class so {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._leftOffset = ''),
            (this._rightOffset = ''),
            (this._alignItems = ''),
            (this._justifyContent = ''),
            (this._width = ''),
            (this._height = '');
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add('cdk-global-overlay-wrapper'),
            (this._isDisposed = !1);
        }
        top(t = '') {
          return (this._bottomOffset = ''), (this._topOffset = t), (this._alignItems = 'flex-start'), this;
        }
        left(t = '') {
          return (this._rightOffset = ''), (this._leftOffset = t), (this._justifyContent = 'flex-start'), this;
        }
        bottom(t = '') {
          return (this._topOffset = ''), (this._bottomOffset = t), (this._alignItems = 'flex-end'), this;
        }
        right(t = '') {
          return (this._leftOffset = ''), (this._rightOffset = t), (this._justifyContent = 'flex-end'), this;
        }
        width(t = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ width: t }) : (this._width = t), this;
        }
        height(t = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ height: t }) : (this._height = t), this;
        }
        centerHorizontally(t = '') {
          return this.left(t), (this._justifyContent = 'center'), this;
        }
        centerVertically(t = '') {
          return this.top(t), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            n = this._overlayRef.getConfig(),
            { width: i, height: s, maxWidth: r, maxHeight: o } = n,
            a = !(('100%' !== i && '100vw' !== i) || (r && '100%' !== r && '100vw' !== r)),
            l = !(('100%' !== s && '100vh' !== s) || (o && '100%' !== o && '100vh' !== o));
          (t.position = this._cssPosition),
            (t.marginLeft = a ? '0' : this._leftOffset),
            (t.marginTop = l ? '0' : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = this._rightOffset),
            a
              ? (e.justifyContent = 'flex-start')
              : 'center' === this._justifyContent
              ? (e.justifyContent = 'center')
              : 'rtl' === this._overlayRef.getConfig().direction
              ? 'flex-start' === this._justifyContent
                ? (e.justifyContent = 'flex-end')
                : 'flex-end' === this._justifyContent && (e.justifyContent = 'flex-start')
              : (e.justifyContent = this._justifyContent),
            (e.alignItems = l ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            n = e.style;
          e.classList.remove('cdk-global-overlay-wrapper'),
            (n.justifyContent = n.alignItems = t.marginTop = t.marginBottom = t.marginLeft = t.marginRight = t.position =
              ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let ro = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._viewportRuler = t), (this._document = e), (this._platform = n), (this._overlayContainer = i);
            }
            global() {
              return new so();
            }
            connectedTo(t, e, n) {
              return new io(e, n, t, this._viewportRuler, this._document, this._platform, this._overlayContainer);
            }
            flexibleConnectedTo(t) {
              return new to(t, this._viewportRuler, this._document, this._platform, this._overlayContainer);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(Sr), s.Yb(r.d), s.Yb(Gi), s.Yb(Gr));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(Sr), Object(s.Yb)(r.d), Object(s.Yb)(Gi), Object(s.Yb)(Gr));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        oo = 0,
        ao = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a, l, c) {
              (this.scrollStrategies = t),
                (this._overlayContainer = e),
                (this._componentFactoryResolver = n),
                (this._positionBuilder = i),
                (this._keyboardDispatcher = s),
                (this._injector = r),
                (this._ngZone = o),
                (this._document = a),
                (this._directionality = l),
                (this._location = c);
            }
            create(t) {
              const e = this._createHostElement(),
                n = this._createPaneElement(e),
                i = this._createPortalOutlet(n),
                s = new Yr(t);
              return (
                (s.direction = s.direction || this._directionality.value),
                new Xr(i, e, n, s, this._ngZone, this._keyboardDispatcher, this._document, this._location)
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(t) {
              const e = this._document.createElement('div');
              return (e.id = 'cdk-overlay-' + oo++), e.classList.add('cdk-overlay-pane'), t.appendChild(e), e;
            }
            _createHostElement() {
              const t = this._document.createElement('div');
              return this._overlayContainer.getContainerElement().appendChild(t), t;
            }
            _createPortalOutlet(t) {
              return (
                this._appRef || (this._appRef = this._injector.get(s.g)),
                new Dr(t, this._componentFactoryResolver, this._appRef, this._injector, this._document)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                s.Yb(zr),
                s.Yb(Gr),
                s.Yb(s.j),
                s.Yb(ro),
                s.Yb(Qr),
                s.Yb(s.s),
                s.Yb(s.A),
                s.Yb(r.d),
                s.Yb(_s),
                s.Yb(r.g, 8)
              );
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const lo = {
        provide: new s.r('cdk-connected-overlay-scroll-strategy'),
        deps: [ao],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let co = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [ao, lo],
              imports: [[ys, Lr, kr], kr],
            })),
            t
          );
        })(),
        uo = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, Ss, is], Ss],
            })),
            t
          );
        })();
      function ho(t, e = Ni) {
        var n;
        const i = (n = t) instanceof Date && !isNaN(+n) ? +t - e.now() : Math.abs(t);
        return (t) => t.lift(new po(i, e));
      }
      class po {
        constructor(t, e) {
          (this.delay = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new mo(t, this.delay, this.scheduler));
        }
      }
      class mo extends x.a {
        constructor(t, e, n) {
          super(t), (this.delay = e), (this.scheduler = n), (this.queue = []), (this.active = !1), (this.errored = !1);
        }
        static dispatch(t) {
          const e = t.source,
            n = e.queue,
            i = t.scheduler,
            s = t.destination;
          for (; n.length > 0 && n[0].time - i.now() <= 0; ) n.shift().notification.observe(s);
          if (n.length > 0) {
            const e = Math.max(0, n[0].time - i.now());
            this.schedule(t, e);
          } else this.unsubscribe(), (e.active = !1);
        }
        _schedule(t) {
          (this.active = !0),
            this.destination.add(
              t.schedule(mo.dispatch, this.delay, { source: this, destination: this.destination, scheduler: t })
            );
        }
        scheduleNotification(t) {
          if (!0 === this.errored) return;
          const e = this.scheduler,
            n = new fo(e.now() + this.delay, t);
          this.queue.push(n), !1 === this.active && this._schedule(e);
        }
        _next(t) {
          this.scheduleNotification(kt.createNext(t));
        }
        _error(t) {
          (this.errored = !0), (this.queue = []), this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.scheduleNotification(kt.createComplete()), this.unsubscribe();
        }
      }
      class fo {
        constructor(t, e) {
          (this.time = t), (this.notification = e);
        }
      }
      const go = {
        provide: new s.r('mat-autocomplete-scroll-strategy'),
        deps: [ao],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let bo = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [go],
              imports: [[er, co, Ss, r.c], Er, er, Ss],
            })),
            t
          );
        })(),
        _o = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[gs, Ss], Ss],
            })),
            t
          );
        })();
      const yo = ['mat-button', ''],
        vo = ['*'],
        wo = [
          'mat-button',
          'mat-flat-button',
          'mat-icon-button',
          'mat-raised-button',
          'mat-stroked-button',
          'mat-mini-fab',
          'mat-fab',
        ];
      class xo {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const Co = ks(Es(Os(xo)));
      let So = (() => {
          class t extends Co {
            constructor(t, e, n) {
              super(t),
                (this._focusMonitor = e),
                (this._animationMode = n),
                (this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab')),
                (this.isIconButton = this._hasHostAttributes('mat-icon-button'));
              for (const i of wo) this._hasHostAttributes(i) && this._getHostElement().classList.add(i);
              t.nativeElement.classList.add('mat-button-base'),
                this._focusMonitor.monitor(this._elementRef, !0),
                this.isRoundButton && (this.color = 'accent');
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(t = 'program', e) {
              this._focusMonitor.focusVia(this._getHostElement(), t, e);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...t) {
              return t.some((t) => this._getHostElement().hasAttribute(t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(ps), s.Ob(Ai, 8));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-icon-button', ''],
                ['button', 'mat-fab', ''],
                ['button', 'mat-mini-fab', ''],
                ['button', 'mat-stroked-button', ''],
                ['button', 'mat-flat-button', ''],
              ],
              viewQuery: function (t, e) {
                var n;
                1 & t && s.Ec(Xs, !0), 2 & t && s.pc((n = s.dc())) && (e.ripple = n.first);
              },
              hostAttrs: [1, 'mat-focus-indicator'],
              hostVars: 3,
              hostBindings: function (t, e) {
                2 & t &&
                  (s.Db('disabled', e.disabled || null),
                  s.Fb('_mat-animation-noopable', 'NoopAnimations' === e._animationMode));
              },
              inputs: { disabled: 'disabled', disableRipple: 'disableRipple', color: 'color' },
              exportAs: ['matButton'],
              features: [s.zb],
              attrs: yo,
              ngContentSelectors: vo,
              decls: 7,
              vars: 5,
              consts: [
                [1, 'mat-button-wrapper'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-button-focus-overlay'],
              ],
              template: function (t, e) {
                1 & t &&
                  (s.kc(),
                  s.Ub(0, 'span', 0),
                  s.jc(1),
                  s.Tb(),
                  s.Ac(2, '\n'),
                  s.Pb(3, 'div', 1),
                  s.Ac(4, '\n'),
                  s.Pb(5, 'div', 2),
                  s.Ac(6, '\n')),
                  2 & t &&
                    (s.Cb(3),
                    s.Fb('mat-button-ripple-round', e.isRoundButton || e.isIconButton),
                    s.lc('matRippleDisabled', e._isRippleDisabled())('matRippleCentered', e.isIconButton)(
                      'matRippleTrigger',
                      e._getHostElement()
                    ));
              },
              directives: [Xs],
              styles: [
                '.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Eo = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Js, Ss], Ss],
            })),
            t
          );
        })(),
        ko = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ss, Js], Ss],
            })),
            t
          );
        })();
      const Oo = ['*', [['mat-card-footer']]],
        Ao = ['*', 'mat-card-footer'];
      let To = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [['mat-card-content'], ['', 'mat-card-content', ''], ['', 'matCardContent', '']],
              hostAttrs: [1, 'mat-card-content'],
            })),
            t
          );
        })(),
        Io = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [['mat-card-title'], ['', 'mat-card-title', ''], ['', 'matCardTitle', '']],
              hostAttrs: [1, 'mat-card-title'],
            })),
            t
          );
        })(),
        Ro = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [['mat-card-subtitle'], ['', 'mat-card-subtitle', ''], ['', 'matCardSubtitle', '']],
              hostAttrs: [1, 'mat-card-subtitle'],
            })),
            t
          );
        })(),
        Po = (() => {
          class t {
            constructor(t) {
              this._animationMode = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(Ai, 8));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-card']],
              hostAttrs: [1, 'mat-card', 'mat-focus-indicator'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && s.Fb('_mat-animation-noopable', 'NoopAnimations' === e._animationMode);
              },
              exportAs: ['matCard'],
              ngContentSelectors: Ao,
              decls: 4,
              vars: 0,
              template: function (t, e) {
                1 & t && (s.kc(Oo), s.jc(0), s.Ac(1, '\n'), s.jc(2, 1), s.Ac(3, '\n'));
              },
              styles: [
                '.mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Do = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ss], Ss],
            })),
            t
          );
        })(),
        jo = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        Lo = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Js, Ss, is, jo], Ss, jo],
            })),
            t
          );
        })();
      const Mo = new s.r('mat-chips-default-options'),
        No = { separatorKeyCodes: [13] };
      let Fo = (() => {
        class t {}
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: [Bs, { provide: Mo, useValue: No }],
          })),
          t
        );
      })();
      function Vo(t, e) {}
      class Ho {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = !0),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const Bo = {
        dialogContainer: le('dialogContainer', [
          pe('void, exit', de({ opacity: 0, transform: 'scale(0.7)' })),
          pe('enter', de({ transform: 'none' })),
          me('* => enter', ce('150ms cubic-bezier(0, 0, 0.2, 1)', de({ transform: 'none', opacity: 1 }))),
          me('* => void, * => exit', ce('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', de({ opacity: 0 }))),
        ]),
      };
      function Uo() {
        throw Error('Attempting to attach dialog content after content is already attached');
      }
      let zo = (() => {
          class t extends Pr {
            constructor(t, e, n, i, r) {
              super(),
                (this._elementRef = t),
                (this._focusTrapFactory = e),
                (this._changeDetectorRef = n),
                (this._config = r),
                (this._elementFocusedBeforeDialogWasOpened = null),
                (this._state = 'enter'),
                (this._animationStateChanged = new s.o()),
                (this.attachDomPortal = (t) => (
                  this._portalOutlet.hasAttached() && Uo(),
                  this._setupFocusTrap(),
                  this._portalOutlet.attachDomPortal(t)
                )),
                (this._ariaLabelledBy = r.ariaLabelledBy || null),
                (this._document = i);
            }
            attachComponentPortal(t) {
              return (
                this._portalOutlet.hasAttached() && Uo(),
                this._setupFocusTrap(),
                this._portalOutlet.attachComponentPortal(t)
              );
            }
            attachTemplatePortal(t) {
              return (
                this._portalOutlet.hasAttached() && Uo(),
                this._setupFocusTrap(),
                this._portalOutlet.attachTemplatePortal(t)
              );
            }
            _recaptureFocus() {
              this._containsFocus() || this._focusTrap.focusInitialElement() || this._elementRef.nativeElement.focus();
            }
            _trapFocus() {
              this._config.autoFocus
                ? this._focusTrap.focusInitialElementWhenReady()
                : this._containsFocus() || this._elementRef.nativeElement.focus();
            }
            _restoreFocus() {
              const t = this._elementFocusedBeforeDialogWasOpened;
              if (this._config.restoreFocus && t && 'function' == typeof t.focus) {
                const e = this._document.activeElement,
                  n = this._elementRef.nativeElement;
                (e && e !== this._document.body && e !== n && !n.contains(e)) || t.focus();
              }
              this._focusTrap && this._focusTrap.destroy();
            }
            _setupFocusTrap() {
              this._focusTrap || (this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement)),
                this._document &&
                  ((this._elementFocusedBeforeDialogWasOpened = this._document.activeElement),
                  this._elementRef.nativeElement.focus &&
                    Promise.resolve().then(() => this._elementRef.nativeElement.focus()));
            }
            _containsFocus() {
              const t = this._elementRef.nativeElement,
                e = this._document.activeElement;
              return t === e || t.contains(e);
            }
            _onAnimationDone(t) {
              'enter' === t.toState ? this._trapFocus() : 'exit' === t.toState && this._restoreFocus(),
                this._animationStateChanged.emit(t);
            }
            _onAnimationStart(t) {
              this._animationStateChanged.emit(t);
            }
            _startExitAnimation() {
              (this._state = 'exit'), this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(cs), s.Ob(s.h), s.Ob(r.d, 8), s.Ob(Ho));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-dialog-container']],
              viewQuery: function (t, e) {
                var n;
                1 & t && s.wc(jr, !0), 2 & t && s.pc((n = s.dc())) && (e._portalOutlet = n.first);
              },
              hostAttrs: ['tabindex', '-1', 'aria-modal', 'true', 1, 'mat-dialog-container'],
              hostVars: 6,
              hostBindings: function (t, e) {
                1 & t &&
                  s.Gb('@dialogContainer.start', function (t) {
                    return e._onAnimationStart(t);
                  })('@dialogContainer.done', function (t) {
                    return e._onAnimationDone(t);
                  }),
                  2 & t &&
                    (s.Db('id', e._id)('role', e._config.role)(
                      'aria-labelledby',
                      e._config.ariaLabel ? null : e._ariaLabelledBy
                    )('aria-label', e._config.ariaLabel)('aria-describedby', e._config.ariaDescribedBy || null),
                    s.Dc('@dialogContainer', e._state));
              },
              features: [s.zb],
              decls: 2,
              vars: 0,
              consts: [['cdkPortalOutlet', '']],
              template: function (t, e) {
                1 & t && (s.yc(0, Vo, 0, 0, 'ng-template', 0), s.Ac(1, '\n'));
              },
              directives: [jr],
              styles: [
                '.mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n',
              ],
              encapsulation: 2,
              data: { animation: [Bo.dialogContainer] },
            })),
            t
          );
        })(),
        Yo = 0;
      class $o {
        constructor(t, e, n = 'mat-dialog-' + Yo++) {
          (this._overlayRef = t),
            (this._containerInstance = e),
            (this.id = n),
            (this.disableClose = this._containerInstance._config.disableClose),
            (this._afterOpened = new ft.a()),
            (this._afterClosed = new ft.a()),
            (this._beforeClosed = new ft.a()),
            (this._state = 0),
            (e._id = n),
            e._animationStateChanged
              .pipe(
                C((t) => 'done' === t.phaseName && 'enter' === t.toState),
                dt(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            e._animationStateChanged
              .pipe(
                C((t) => 'done' === t.phaseName && 'exit' === t.toState),
                dt(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout), this._finishDialogClose();
              }),
            t.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._afterClosed.next(this._result),
                this._afterClosed.complete(),
                (this.componentInstance = null),
                this._overlayRef.dispose();
            }),
            t
              .keydownEvents()
              .pipe(C((t) => 27 === t.keyCode && !this.disableClose && !Ri(t)))
              .subscribe((t) => {
                t.preventDefault(), this.close();
              }),
            t.backdropClick().subscribe(() => {
              this.disableClose ? this._containerInstance._recaptureFocus() : this.close();
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                C((t) => 'start' === t.phaseName),
                dt(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), e.totalTime + 100));
              }),
            this._containerInstance._startExitAnimation(),
            (this._state = 1);
        }
        afterOpened() {
          return this._afterOpened.asObservable();
        }
        afterClosed() {
          return this._afterClosed.asObservable();
        }
        beforeClosed() {
          return this._beforeClosed.asObservable();
        }
        backdropClick() {
          return this._overlayRef.backdropClick();
        }
        keydownEvents() {
          return this._overlayRef.keydownEvents();
        }
        updatePosition(t) {
          let e = this._getPositionStrategy();
          return (
            t && (t.left || t.right) ? (t.left ? e.left(t.left) : e.right(t.right)) : e.centerHorizontally(),
            t && (t.top || t.bottom) ? (t.top ? e.top(t.top) : e.bottom(t.bottom)) : e.centerVertically(),
            this._overlayRef.updatePosition(),
            this
          );
        }
        updateSize(t = '', e = '') {
          return this._getPositionStrategy().width(t).height(e), this._overlayRef.updatePosition(), this;
        }
        addPanelClass(t) {
          return this._overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._overlayRef.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2), this._overlayRef.dispose();
        }
        _getPositionStrategy() {
          return this._overlayRef.getConfig().positionStrategy;
        }
      }
      const qo = new s.r('MatDialogData'),
        Wo = new s.r('mat-dialog-default-options'),
        Ko = new s.r('mat-dialog-scroll-strategy'),
        Qo = {
          provide: Ko,
          deps: [ao],
          useFactory: function (t) {
            return () => t.scrollStrategies.block();
          },
        };
      let Zo = (() => {
          class t {
            constructor(t, e, n, i, s, r, o) {
              (this._overlay = t),
                (this._injector = e),
                (this._defaultOptions = i),
                (this._parentDialog = r),
                (this._overlayContainer = o),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new ft.a()),
                (this._afterOpenedAtThisLevel = new ft.a()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = ut(() =>
                  this.openDialogs.length ? this._afterAllClosed : this._afterAllClosed.pipe(ws(void 0))
                )),
                (this._scrollStrategy = s);
            }
            get openDialogs() {
              return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;
            }
            get _afterAllClosed() {
              const t = this._parentDialog;
              return t ? t._afterAllClosed : this._afterAllClosedAtThisLevel;
            }
            open(t, e) {
              if (
                (e = (function (t, e) {
                  return Object.assign(Object.assign({}, e), t);
                })(e, this._defaultOptions || new Ho())).id &&
                this.getDialogById(e.id)
              )
                throw Error(`Dialog with id "${e.id}" exists already. The dialog id must be unique.`);
              const n = this._createOverlay(e),
                i = this._attachDialogContainer(n, e),
                s = this._attachDialogContent(t, i, n, e);
              return (
                this.openDialogs.length || this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(s),
                s.afterClosed().subscribe(() => this._removeOpenDialog(s)),
                this.afterOpened.next(s),
                s
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(t) {
              return this.openDialogs.find((e) => e.id === t);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _createOverlay(t) {
              const e = this._getOverlayConfig(t);
              return this._overlay.create(e);
            }
            _getOverlayConfig(t) {
              const e = new Yr({
                positionStrategy: this._overlay.position().global(),
                scrollStrategy: t.scrollStrategy || this._scrollStrategy(),
                panelClass: t.panelClass,
                hasBackdrop: t.hasBackdrop,
                direction: t.direction,
                minWidth: t.minWidth,
                minHeight: t.minHeight,
                maxWidth: t.maxWidth,
                maxHeight: t.maxHeight,
                disposeOnNavigation: t.closeOnNavigation,
              });
              return t.backdropClass && (e.backdropClass = t.backdropClass), e;
            }
            _attachDialogContainer(t, e) {
              const n = s.s.create({
                  parent: (e && e.viewContainerRef && e.viewContainerRef.injector) || this._injector,
                  providers: [{ provide: Ho, useValue: e }],
                }),
                i = new Tr(zo, e.viewContainerRef, n, e.componentFactoryResolver);
              return t.attach(i).instance;
            }
            _attachDialogContent(t, e, n, i) {
              const r = new $o(n, e, i.id);
              if (t instanceof s.M) e.attachTemplatePortal(new Ir(t, null, { $implicit: i.data, dialogRef: r }));
              else {
                const n = this._createInjector(i, r, e),
                  s = e.attachComponentPortal(new Tr(t, i.viewContainerRef, n));
                r.componentInstance = s.instance;
              }
              return r.updateSize(i.width, i.height).updatePosition(i.position), r;
            }
            _createInjector(t, e, n) {
              const i = t && t.viewContainerRef && t.viewContainerRef.injector,
                r = [
                  { provide: zo, useValue: n },
                  { provide: qo, useValue: t.data },
                  { provide: $o, useValue: e },
                ];
              return (
                !t.direction ||
                  (i && i.get(_s, null)) ||
                  r.push({ provide: _s, useValue: { value: t.direction, change: y() } }),
                s.s.create({ parent: i || this._injector, providers: r })
              );
            }
            _removeOpenDialog(t) {
              const e = this.openDialogs.indexOf(t);
              e > -1 &&
                (this.openDialogs.splice(e, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((t, e) => {
                    t ? e.setAttribute('aria-hidden', t) : e.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  this._afterAllClosed.next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const t = this._overlayContainer.getContainerElement();
              if (t.parentElement) {
                const e = t.parentElement.children;
                for (let n = e.length - 1; n > -1; n--) {
                  let i = e[n];
                  i === t ||
                    'SCRIPT' === i.nodeName ||
                    'STYLE' === i.nodeName ||
                    i.hasAttribute('aria-live') ||
                    (this._ariaHiddenElements.set(i, i.getAttribute('aria-hidden')),
                    i.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _closeDialogs(t) {
              let e = t.length;
              for (; e--; ) t[e].close();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(ao), s.Yb(s.s), s.Yb(r.g, 8), s.Yb(Wo, 8), s.Yb(Ko), s.Yb(t, 12), s.Yb(Gr));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Go = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [Zo, Qo],
              imports: [[co, Lr, Ss], Ss],
            })),
            t
          );
        })(),
        Xo = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Xi]],
            })),
            t
          );
        })(),
        Jo = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [Bs],
              imports: [[Xo, uo], Xo, uo],
            })),
            t
          );
        })(),
        ta = (() => {
          class t {
            constructor() {
              (this.changes = new ft.a()),
                (this.calendarLabel = 'Calendar'),
                (this.openCalendarLabel = 'Open calendar'),
                (this.prevMonthLabel = 'Previous month'),
                (this.nextMonthLabel = 'Next month'),
                (this.prevYearLabel = 'Previous year'),
                (this.nextYearLabel = 'Next year'),
                (this.prevMultiYearLabel = 'Previous 20 years'),
                (this.nextMultiYearLabel = 'Next 20 years'),
                (this.switchToMonthViewLabel = 'Choose date'),
                (this.switchToMultiYearViewLabel = 'Choose month and year');
            }
            formatYearRange(t, e) {
              return `${t} \u2013 ${e}`;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const ea = {
        provide: new s.r('mat-datepicker-scroll-strategy'),
        deps: [ao],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let na = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [ta, ea],
              imports: [[r.c, Eo, Go, co, gs, Lr], Er],
            })),
            t
          );
        })(),
        ia = (() => {
          class t {
            constructor() {
              (this._vertical = !1), (this._inset = !1);
            }
            get vertical() {
              return this._vertical;
            }
            set vertical(t) {
              this._vertical = Ui(t);
            }
            get inset() {
              return this._inset;
            }
            set inset(t) {
              this._inset = Ui(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-divider']],
              hostAttrs: ['role', 'separator', 1, 'mat-divider'],
              hostVars: 7,
              hostBindings: function (t, e) {
                2 & t &&
                  (s.Db('aria-orientation', e.vertical ? 'vertical' : 'horizontal'),
                  s.Fb('mat-divider-vertical', e.vertical)('mat-divider-horizontal', !e.vertical)(
                    'mat-divider-inset',
                    e.inset
                  ));
              },
              inputs: { vertical: 'vertical', inset: 'inset' },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              styles: [
                '.mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        sa = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ss], Ss],
            })),
            t
          );
        })(),
        ra = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        oa = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, ra, Lr]],
            })),
            t
          );
        })(),
        aa = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ys, Ss], Ys, Ss],
            })),
            t
          );
        })();
      function la(t) {
        return function (e) {
          const n = new ca(t),
            i = e.lift(n);
          return (n.caught = i);
        };
      }
      class ca {
        constructor(t) {
          this.selector = t;
        }
        call(t, e) {
          return e.subscribe(new ua(t, this.selector, this.caught));
        }
      }
      class ua extends jt.a {
        constructor(t, e, n) {
          super(t), (this.selector = e), (this.caught = n);
        }
        error(t) {
          if (!this.isStopped) {
            let n;
            try {
              n = this.selector(t, this.caught);
            } catch (e) {
              return void super.error(e);
            }
            this._unsubscribeAndRecycle();
            const i = new Lt.a(this, void 0, void 0);
            this.add(i);
            const s = Object(Mt.a)(this, n, void 0, void 0, i);
            s !== i && this.add(s);
          }
        }
      }
      function ha(t) {
        return (e) => e.lift(new da(t));
      }
      class da {
        constructor(t) {
          this.callback = t;
        }
        call(t, e) {
          return e.subscribe(new pa(t, this.callback));
        }
      }
      class pa extends x.a {
        constructor(t, e) {
          super(t), this.add(new gt.a(e));
        }
      }
      var ma = n('w1tV');
      const fa = ['*'];
      function ga(t) {
        return Error(`Unable to find icon with the name "${t}"`);
      }
      function ba(t) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${t}".`
        );
      }
      function _a(t) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${t}".`
        );
      }
      class ya {
        constructor(t, e) {
          (this.options = e), t.nodeName ? (this.svgElement = t) : (this.url = t);
        }
      }
      let va = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._httpClient = t),
              (this._sanitizer = e),
              (this._errorHandler = i),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._defaultFontSetClass = 'material-icons'),
              (this._document = n);
          }
          addSvgIcon(t, e, n) {
            return this.addSvgIconInNamespace('', t, e, n);
          }
          addSvgIconLiteral(t, e, n) {
            return this.addSvgIconLiteralInNamespace('', t, e, n);
          }
          addSvgIconInNamespace(t, e, n, i) {
            return this._addSvgIconConfig(t, e, new ya(n, i));
          }
          addSvgIconLiteralInNamespace(t, e, n, i) {
            const r = this._sanitizer.sanitize(s.J.HTML, n);
            if (!r) throw _a(n);
            const o = this._createSvgElementForSingleIcon(r, i);
            return this._addSvgIconConfig(t, e, new ya(o, i));
          }
          addSvgIconSet(t, e) {
            return this.addSvgIconSetInNamespace('', t, e);
          }
          addSvgIconSetLiteral(t, e) {
            return this.addSvgIconSetLiteralInNamespace('', t, e);
          }
          addSvgIconSetInNamespace(t, e, n) {
            return this._addSvgIconSetConfig(t, new ya(e, n));
          }
          addSvgIconSetLiteralInNamespace(t, e, n) {
            const i = this._sanitizer.sanitize(s.J.HTML, e);
            if (!i) throw _a(e);
            const r = this._svgElementFromString(i);
            return this._addSvgIconSetConfig(t, new ya(r, n));
          }
          registerFontClassAlias(t, e = t) {
            return this._fontCssClassesByAlias.set(t, e), this;
          }
          classNameForFontAlias(t) {
            return this._fontCssClassesByAlias.get(t) || t;
          }
          setDefaultFontSetClass(t) {
            return (this._defaultFontSetClass = t), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(t) {
            const e = this._sanitizer.sanitize(s.J.RESOURCE_URL, t);
            if (!e) throw ba(t);
            const n = this._cachedIconsByUrl.get(e);
            return n
              ? y(wa(n))
              : this._loadSvgIconFromConfig(new ya(t)).pipe(
                  ji((t) => this._cachedIconsByUrl.set(e, t)),
                  Object(l.a)((t) => wa(t))
                );
          }
          getNamedSvgIcon(t, e = '') {
            const n = xa(e, t),
              i = this._svgIconConfigs.get(n);
            if (i) return this._getSvgFromConfig(i);
            const s = this._iconSetConfigs.get(e);
            return s ? this._getSvgFromIconSetConfigs(t, s) : St(ga(n));
          }
          ngOnDestroy() {
            this._svgIconConfigs.clear(), this._iconSetConfigs.clear(), this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(t) {
            return t.svgElement
              ? y(wa(t.svgElement))
              : this._loadSvgIconFromConfig(t).pipe(
                  ji((e) => (t.svgElement = e)),
                  Object(l.a)((t) => wa(t))
                );
          }
          _getSvgFromIconSetConfigs(t, e) {
            const n = this._extractIconWithNameFromAnySet(t, e);
            return n
              ? y(n)
              : h(
                  e
                    .filter((t) => !t.svgElement)
                    .map((t) =>
                      this._loadSvgIconSetFromConfig(t).pipe(
                        la((e) => {
                          const n = `Loading icon set URL: ${this._sanitizer.sanitize(
                            s.J.RESOURCE_URL,
                            t.url
                          )} failed: ${e.message}`;
                          return (
                            this._errorHandler ? this._errorHandler.handleError(new Error(n)) : console.error(n),
                            y(null)
                          );
                        })
                      )
                    )
                ).pipe(
                  Object(l.a)(() => {
                    const n = this._extractIconWithNameFromAnySet(t, e);
                    if (!n) throw ga(t);
                    return n;
                  })
                );
          }
          _extractIconWithNameFromAnySet(t, e) {
            for (let n = e.length - 1; n >= 0; n--) {
              const i = e[n];
              if (i.svgElement) {
                const e = this._extractSvgIconFromSet(i.svgElement, t, i.options);
                if (e) return e;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(t) {
            return this._fetchUrl(t.url).pipe(Object(l.a)((e) => this._createSvgElementForSingleIcon(e, t.options)));
          }
          _loadSvgIconSetFromConfig(t) {
            return t.svgElement
              ? y(t.svgElement)
              : this._fetchUrl(t.url).pipe(
                  Object(l.a)((e) => (t.svgElement || (t.svgElement = this._svgElementFromString(e)), t.svgElement))
                );
          }
          _createSvgElementForSingleIcon(t, e) {
            const n = this._svgElementFromString(t);
            return this._setSvgAttributes(n, e), n;
          }
          _extractSvgIconFromSet(t, e, n) {
            const i = t.querySelector(`[id="${e}"]`);
            if (!i) return null;
            const s = i.cloneNode(!0);
            if ((s.removeAttribute('id'), 'svg' === s.nodeName.toLowerCase())) return this._setSvgAttributes(s, n);
            if ('symbol' === s.nodeName.toLowerCase()) return this._setSvgAttributes(this._toSvgElement(s), n);
            const r = this._svgElementFromString('<svg></svg>');
            return r.appendChild(s), this._setSvgAttributes(r, n);
          }
          _svgElementFromString(t) {
            const e = this._document.createElement('DIV');
            e.innerHTML = t;
            const n = e.querySelector('svg');
            if (!n) throw Error('<svg> tag not found');
            return n;
          }
          _toSvgElement(t) {
            const e = this._svgElementFromString('<svg></svg>'),
              n = t.attributes;
            for (let i = 0; i < n.length; i++) {
              const { name: t, value: s } = n[i];
              'id' !== t && e.setAttribute(t, s);
            }
            for (let i = 0; i < t.childNodes.length; i++)
              t.childNodes[i].nodeType === this._document.ELEMENT_NODE && e.appendChild(t.childNodes[i].cloneNode(!0));
            return e;
          }
          _setSvgAttributes(t, e) {
            return (
              t.setAttribute('fit', ''),
              t.setAttribute('height', '100%'),
              t.setAttribute('width', '100%'),
              t.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              t.setAttribute('focusable', 'false'),
              e && e.viewBox && t.setAttribute('viewBox', e.viewBox),
              t
            );
          }
          _fetchUrl(t) {
            if (!this._httpClient)
              throw Error(
                'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.'
              );
            if (null == t) throw Error(`Cannot fetch icon from URL "${t}".`);
            const e = this._sanitizer.sanitize(s.J.RESOURCE_URL, t);
            if (!e) throw ba(t);
            const n = this._inProgressUrlFetches.get(e);
            if (n) return n;
            const i = this._httpClient.get(e, { responseType: 'text' }).pipe(
              ha(() => this._inProgressUrlFetches.delete(e)),
              Object(ma.a)()
            );
            return this._inProgressUrlFetches.set(e, i), i;
          }
          _addSvgIconConfig(t, e, n) {
            return this._svgIconConfigs.set(xa(t, e), n), this;
          }
          _addSvgIconSetConfig(t, e) {
            const n = this._iconSetConfigs.get(t);
            return n ? n.push(e) : this._iconSetConfigs.set(t, [e]), this;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(U, 8), s.Yb(i.b), s.Yb(r.d, 8), s.Yb(s.n, 8));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(U, 8), Object(s.Yb)(i.b), Object(s.Yb)(r.d, 8), Object(s.Yb)(s.n, 8));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function wa(t) {
        return t.cloneNode(!0);
      }
      function xa(t, e) {
        return t + ':' + e;
      }
      class Ca {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const Sa = ks(Ca),
        Ea = new s.r('mat-icon-location', {
          providedIn: 'root',
          factory: function () {
            const t = Object(s.V)(r.d),
              e = t ? t.location : null;
            return { getPathname: () => (e ? e.pathname + e.search : '') };
          },
        }),
        ka = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        Oa = ka.map((t) => `[${t}]`).join(', '),
        Aa = /^url\(['"]?#(.*?)['"]?\)$/;
      let Ta = (() => {
          class t extends Sa {
            constructor(t, e, n, i, s) {
              super(t),
                (this._iconRegistry = e),
                (this._location = i),
                (this._errorHandler = s),
                (this._inline = !1),
                (this._currentIconFetch = gt.a.EMPTY),
                n || t.nativeElement.setAttribute('aria-hidden', 'true');
            }
            get inline() {
              return this._inline;
            }
            set inline(t) {
              this._inline = Ui(t);
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(t) {
              this._fontSet = this._cleanupFontValue(t);
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(t) {
              this._fontIcon = this._cleanupFontValue(t);
            }
            _splitIconName(t) {
              if (!t) return ['', ''];
              const e = t.split(':');
              switch (e.length) {
                case 1:
                  return ['', e[0]];
                case 2:
                  return e;
                default:
                  throw Error(`Invalid icon name: "${t}"`);
              }
            }
            ngOnChanges(t) {
              const e = t.svgIcon;
              if (e)
                if ((this._currentIconFetch.unsubscribe(), this.svgIcon)) {
                  const [t, e] = this._splitIconName(this.svgIcon);
                  this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(e, t)
                    .pipe(dt(1))
                    .subscribe(
                      (t) => this._setSvgElement(t),
                      (n) => {
                        const i = `Error retrieving icon ${t}:${e}! ${n.message}`;
                        this._errorHandler ? this._errorHandler.handleError(new Error(i)) : console.error(i);
                      }
                    );
                } else e.previousValue && this._clearSvgElement();
              this._usingFontIcon() && this._updateFontIconClasses();
            }
            ngOnInit() {
              this._usingFontIcon() && this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const t = this._elementsWithExternalReferences;
              if (t && this._location && t.size) {
                const t = this._location.getPathname();
                t !== this._previousPath && ((this._previousPath = t), this._prependPathToReferences(t));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(t) {
              this._clearSvgElement();
              const e = t.querySelectorAll('style');
              for (let n = 0; n < e.length; n++) e[n].textContent += ' ';
              if (this._location) {
                const e = this._location.getPathname();
                (this._previousPath = e),
                  this._cacheChildrenWithExternalReferences(t),
                  this._prependPathToReferences(e);
              }
              this._elementRef.nativeElement.appendChild(t);
            }
            _clearSvgElement() {
              const t = this._elementRef.nativeElement;
              let e = t.childNodes.length;
              for (this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear(); e--; ) {
                const n = t.childNodes[e];
                (1 === n.nodeType && 'svg' !== n.nodeName.toLowerCase()) || t.removeChild(n);
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const t = this._elementRef.nativeElement,
                e = this.fontSet
                  ? this._iconRegistry.classNameForFontAlias(this.fontSet)
                  : this._iconRegistry.getDefaultFontSetClass();
              e != this._previousFontSetClass &&
                (this._previousFontSetClass && t.classList.remove(this._previousFontSetClass),
                e && t.classList.add(e),
                (this._previousFontSetClass = e)),
                this.fontIcon != this._previousFontIconClass &&
                  (this._previousFontIconClass && t.classList.remove(this._previousFontIconClass),
                  this.fontIcon && t.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(t) {
              return 'string' == typeof t ? t.trim().split(' ')[0] : t;
            }
            _prependPathToReferences(t) {
              const e = this._elementsWithExternalReferences;
              e &&
                e.forEach((e, n) => {
                  e.forEach((e) => {
                    n.setAttribute(e.name, `url('${t}#${e.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(t) {
              const e = t.querySelectorAll(Oa),
                n = (this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map());
              for (let i = 0; i < e.length; i++)
                ka.forEach((t) => {
                  const s = e[i],
                    r = s.getAttribute(t),
                    o = r ? r.match(Aa) : null;
                  if (o) {
                    let e = n.get(s);
                    e || ((e = []), n.set(s, e)), e.push({ name: t, value: o[1] });
                  }
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(va), s.Zb('aria-hidden'), s.Ob(Ea, 8), s.Ob(s.n, 8));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  s.Fb('mat-icon-inline', e.inline)(
                    'mat-icon-no-color',
                    'primary' !== e.color && 'accent' !== e.color && 'warn' !== e.color
                  );
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
                svgIcon: 'svgIcon',
              },
              exportAs: ['matIcon'],
              features: [s.zb, s.Ab],
              ngContentSelectors: fa,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (s.kc(), s.jc(0));
              },
              styles: [
                '.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Ia = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ss], Ss],
            })),
            t
          );
        })();
      const Ra = ['*'],
        Pa = [
          [
            ['', 'mat-list-avatar', ''],
            ['', 'mat-list-icon', ''],
            ['', 'matListAvatar', ''],
            ['', 'matListIcon', ''],
          ],
          [
            ['', 'mat-line', ''],
            ['', 'matLine', ''],
          ],
          '*',
        ],
        Da = ['[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]', '[mat-line], [matLine]', '*'];
      class ja {}
      const La = Es(Os(ja));
      class Ma {}
      const Na = Os(Ma);
      let Fa = (() => {
        class t extends La {
          constructor() {
            super(...arguments), (this._stateChanges = new ft.a());
          }
          ngOnChanges() {
            this._stateChanges.next();
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Va(e || t);
          }),
          (t.ɵcmp = s.Ib({
            type: t,
            selectors: [['mat-nav-list']],
            hostAttrs: ['role', 'navigation', 1, 'mat-nav-list', 'mat-list-base'],
            inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
            exportAs: ['matNavList'],
            features: [s.zb, s.Ab],
            ngContentSelectors: Ra,
            decls: 2,
            vars: 0,
            template: function (t, e) {
              1 & t && (s.kc(), s.jc(0), s.Ac(1, '\n\n'));
            },
            styles: [
              '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const Va = s.Wb(Fa);
      let Ha = (() => {
          class t extends La {
            constructor(t) {
              super(),
                (this._elementRef = t),
                (this._stateChanges = new ft.a()),
                'action-list' === this._getListType() && t.nativeElement.classList.add('mat-action-list');
            }
            _getListType() {
              const t = this._elementRef.nativeElement.nodeName.toLowerCase();
              return 'mat-list' === t ? 'list' : 'mat-action-list' === t ? 'action-list' : null;
            }
            ngOnChanges() {
              this._stateChanges.next();
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-list'], ['mat-action-list']],
              hostAttrs: [1, 'mat-list', 'mat-list-base'],
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
              exportAs: ['matList'],
              features: [s.zb, s.Ab],
              ngContentSelectors: Ra,
              decls: 2,
              vars: 0,
              template: function (t, e) {
                1 & t && (s.kc(), s.jc(0), s.Ac(1, '\n\n'));
              },
              styles: [
                '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Ba = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'mat-list-avatar', ''],
                ['', 'matListAvatar', ''],
              ],
              hostAttrs: [1, 'mat-list-avatar'],
            })),
            t
          );
        })(),
        Ua = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'mat-list-icon', ''],
                ['', 'matListIcon', ''],
              ],
              hostAttrs: [1, 'mat-list-icon'],
            })),
            t
          );
        })(),
        za = (() => {
          class t extends Na {
            constructor(t, e, n, i) {
              super(),
                (this._element = t),
                (this._isInteractiveList = !1),
                (this._destroyed = new ft.a()),
                (this._disabled = !1),
                (this._isInteractiveList = !!(n || (i && 'action-list' === i._getListType()))),
                (this._list = n || i);
              const s = this._getHostElement();
              'button' !== s.nodeName.toLowerCase() || s.hasAttribute('type') || s.setAttribute('type', 'button'),
                this._list &&
                  this._list._stateChanges.pipe(yr(this._destroyed)).subscribe(() => {
                    e.markForCheck();
                  });
            }
            get disabled() {
              return this._disabled || !(!this._list || !this._list.disabled);
            }
            set disabled(t) {
              this._disabled = Ui(t);
            }
            ngAfterContentInit() {
              !(function (t, e, n = 'mat') {
                t.changes.pipe(ws(t)).subscribe(({ length: t }) => {
                  zs(e, n + '-2-line', !1),
                    zs(e, n + '-3-line', !1),
                    zs(e, n + '-multi-line', !1),
                    2 === t || 3 === t ? zs(e, `${n}-${t}-line`, !0) : t > 3 && zs(e, n + '-multi-line', !0);
                });
              })(this._lines, this._element);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _isRippleDisabled() {
              return !this._isInteractiveList || this.disableRipple || !(!this._list || !this._list.disableRipple);
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(s.h), s.Ob(Fa, 8), s.Ob(Ha, 8));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-list-item'], ['a', 'mat-list-item', ''], ['button', 'mat-list-item', '']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && (s.Hb(n, Ba, !0), s.Hb(n, Ua, !0), s.Hb(n, Us, !0)),
                  2 & t &&
                    (s.pc((i = s.dc())) && (e._avatar = i.first),
                    s.pc((i = s.dc())) && (e._icon = i.first),
                    s.pc((i = s.dc())) && (e._lines = i));
              },
              hostAttrs: [1, 'mat-list-item', 'mat-focus-indicator'],
              hostVars: 6,
              hostBindings: function (t, e) {
                2 & t &&
                  s.Fb('mat-list-item-disabled', e.disabled)('mat-list-item-avatar', e._avatar || e._icon)(
                    'mat-list-item-with-avatar',
                    e._avatar || e._icon
                  );
              },
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
              exportAs: ['matListItem'],
              features: [s.zb],
              ngContentSelectors: Da,
              decls: 13,
              vars: 2,
              consts: [
                [1, 'mat-list-item-content'],
                ['mat-ripple', '', 1, 'mat-list-item-ripple', 3, 'matRippleTrigger', 'matRippleDisabled'],
                [1, 'mat-list-text'],
              ],
              template: function (t, e) {
                1 & t &&
                  (s.kc(Pa),
                  s.Ub(0, 'div', 0),
                  s.Ac(1, '\n  '),
                  s.Ub(2, 'div', 1),
                  s.Ac(3, '\n  '),
                  s.Tb(),
                  s.Ac(4, '\n\n  '),
                  s.jc(5),
                  s.Ac(6, '\n\n  '),
                  s.Ub(7, 'div', 2),
                  s.jc(8, 1),
                  s.Tb(),
                  s.Ac(9, '\n\n  '),
                  s.jc(10, 2),
                  s.Ac(11, '\n'),
                  s.Tb(),
                  s.Ac(12, '\n')),
                  2 & t &&
                    (s.Cb(2),
                    s.lc('matRippleTrigger', e._getHostElement())('matRippleDisabled', e._isRippleDisabled()));
              },
              directives: [Xs],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Ya = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ys, Js, Ss, tr, r.c], Ys, Ss, tr, sa],
            })),
            t
          );
        })();
      const $a = ['mat-menu-item', ''],
        qa = ['*'];
      function Wa(t, e) {
        if (1 & t) {
          const t = s.Vb();
          s.Ac(0, '\n  '),
            s.Ub(1, 'div', 0),
            s.cc('keydown', function (e) {
              return s.sc(t), s.gc()._handleKeydown(e);
            })('click', function () {
              return s.sc(t), s.gc().closed.emit('click');
            })('@transformMenu.start', function (e) {
              return s.sc(t), s.gc()._onAnimationStart(e);
            })('@transformMenu.done', function (e) {
              return s.sc(t), s.gc()._onAnimationDone(e);
            }),
            s.Ac(2, '\n    '),
            s.Ub(3, 'div', 1),
            s.Ac(4, '\n      '),
            s.jc(5),
            s.Ac(6, '\n    '),
            s.Tb(),
            s.Ac(7, '\n  '),
            s.Tb(),
            s.Ac(8, '\n');
        }
        if (2 & t) {
          const t = s.gc();
          s.Cb(1),
            s.lc('id', t.panelId)('ngClass', t._classList)('@transformMenu', t._panelAnimationState),
            s.Db('aria-label', t.ariaLabel || null)('aria-labelledby', t.ariaLabelledby || null)(
              'aria-describedby',
              t.ariaDescribedby || null
            );
        }
      }
      const Ka = {
        transformMenu: le('transformMenu', [
          pe('void', de({ opacity: 0, transform: 'scale(0.8)' })),
          me(
            'void => enter',
            ue([
              fe('.mat-menu-content, .mat-mdc-menu-content', ce('100ms linear', de({ opacity: 1 }))),
              ce('120ms cubic-bezier(0, 0, 0.2, 1)', de({ transform: 'scale(1)' })),
            ])
          ),
          me('* => void', ce('100ms 25ms linear', de({ opacity: 0 }))),
        ]),
        fadeInItems: le('fadeInItems', [
          pe('showing', de({ opacity: 1 })),
          me('void => *', [de({ opacity: 0 }), ce('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')]),
        ]),
      };
      let Qa = (() => {
        class t {
          constructor(t, e, n, i, s, r, o) {
            (this._template = t),
              (this._componentFactoryResolver = e),
              (this._appRef = n),
              (this._injector = i),
              (this._viewContainerRef = s),
              (this._document = r),
              (this._changeDetectorRef = o),
              (this._attached = new ft.a());
          }
          attach(t = {}) {
            this._portal || (this._portal = new Ir(this._template, this._viewContainerRef)),
              this.detach(),
              this._outlet ||
                (this._outlet = new Dr(
                  this._document.createElement('div'),
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector
                ));
            const e = this._template.elementRef.nativeElement;
            e.parentNode.insertBefore(this._outlet.outletElement, e),
              this._changeDetectorRef && this._changeDetectorRef.markForCheck(),
              this._portal.attach(this._outlet, t),
              this._attached.next();
          }
          detach() {
            this._portal.isAttached && this._portal.detach();
          }
          ngOnDestroy() {
            this._outlet && this._outlet.dispose();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(s.M), s.Ob(s.j), s.Ob(s.g), s.Ob(s.s), s.Ob(s.P), s.Ob(r.d), s.Ob(s.h));
          }),
          (t.ɵdir = s.Jb({ type: t, selectors: [['ng-template', 'matMenuContent', '']] })),
          t
        );
      })();
      const Za = new s.r('MAT_MENU_PANEL');
      class Ga {}
      const Xa = Os(Es(Ga));
      let Ja = (() => {
        class t extends Xa {
          constructor(t, e, n, i) {
            super(),
              (this._elementRef = t),
              (this._focusMonitor = n),
              (this._parentMenu = i),
              (this.role = 'menuitem'),
              (this._hovered = new ft.a()),
              (this._focused = new ft.a()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              n && n.monitor(this._elementRef, !1),
              i && i.addItem && i.addItem(this),
              (this._document = e);
          }
          focus(t = 'program', e) {
            this._focusMonitor
              ? this._focusMonitor.focusVia(this._getHostElement(), t, e)
              : this._getHostElement().focus(e),
              this._focused.next(this);
          }
          ngOnDestroy() {
            this._focusMonitor && this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu && this._parentMenu.removeItem && this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(t) {
            this.disabled && (t.preventDefault(), t.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            const t = this._elementRef.nativeElement,
              e = this._document ? this._document.TEXT_NODE : 3;
            let n = '';
            if (t.childNodes) {
              const i = t.childNodes.length;
              for (let s = 0; s < i; s++) t.childNodes[s].nodeType === e && (n += t.childNodes[s].textContent);
            }
            return n.trim();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(s.l), s.Ob(r.d), s.Ob(ps), s.Ob(Za, 8));
          }),
          (t.ɵcmp = s.Ib({
            type: t,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [1, 'mat-focus-indicator'],
            hostVars: 10,
            hostBindings: function (t, e) {
              1 & t &&
                s.cc('click', function (t) {
                  return e._checkDisabled(t);
                })('mouseenter', function () {
                  return e._handleMouseEnter();
                }),
                2 & t &&
                  (s.Db('role', e.role)('tabindex', e._getTabIndex())('aria-disabled', e.disabled.toString())(
                    'disabled',
                    e.disabled || null
                  ),
                  s.Fb('mat-menu-item', !0)('mat-menu-item-highlighted', e._highlighted)(
                    'mat-menu-item-submenu-trigger',
                    e._triggersSubmenu
                  ));
            },
            inputs: { disabled: 'disabled', disableRipple: 'disableRipple', role: 'role' },
            exportAs: ['matMenuItem'],
            features: [s.zb],
            attrs: $a,
            ngContentSelectors: qa,
            decls: 5,
            vars: 2,
            consts: [['matRipple', '', 1, 'mat-menu-ripple', 3, 'matRippleDisabled', 'matRippleTrigger']],
            template: function (t, e) {
              1 & t && (s.kc(), s.jc(0), s.Ac(1, '\n'), s.Ub(2, 'div', 0), s.Ac(3, '\n'), s.Tb(), s.Ac(4, '\n')),
                2 & t &&
                  (s.Cb(2),
                  s.lc('matRippleDisabled', e.disableRipple || e.disabled)('matRippleTrigger', e._getHostElement()));
            },
            directives: [Xs],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const tl = new s.r('mat-menu-default-options', {
        providedIn: 'root',
        factory: function () {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let el = 0,
        nl = (() => {
          class t {
            constructor(t, e, n) {
              (this._elementRef = t),
                (this._ngZone = e),
                (this._defaultOptions = n),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new s.E()),
                (this._tabSubscription = gt.a.EMPTY),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new ft.a()),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new s.o()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + el++);
            }
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(t) {
              'before' !== t &&
                'after' !== t &&
                (function () {
                  throw Error(
                    'xPosition value must be either \'before\' or after\'.\n      Example: <mat-menu xPosition="before" #menu="matMenu"></mat-menu>'
                  );
                })(),
                (this._xPosition = t),
                this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(t) {
              'above' !== t &&
                'below' !== t &&
                (function () {
                  throw Error(
                    'yPosition value must be either \'above\' or below\'.\n      Example: <mat-menu yPosition="above" #menu="matMenu"></mat-menu>'
                  );
                })(),
                (this._yPosition = t),
                this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(t) {
              this._overlapTrigger = Ui(t);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(t) {
              this._hasBackdrop = Ui(t);
            }
            set panelClass(t) {
              const e = this._previousPanelClass;
              e &&
                e.length &&
                e.split(' ').forEach((t) => {
                  this._classList[t] = !1;
                }),
                (this._previousPanelClass = t),
                t &&
                  t.length &&
                  (t.split(' ').forEach((t) => {
                    this._classList[t] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(t) {
              this.panelClass = t;
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new ss(this._directDescendantItems).withWrap().withTypeAhead()),
                (this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'))),
                this._directDescendantItems.changes
                  .pipe(
                    ws(this._directDescendantItems),
                    Nt((t) => Object(nr.a)(...t.map((t) => t._focused)))
                  )
                  .subscribe((t) => this._keyManager.updateActiveItem(t));
            }
            ngOnDestroy() {
              this._directDescendantItems.destroy(), this._tabSubscription.unsubscribe(), this.closed.complete();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                ws(this._directDescendantItems),
                Nt((t) => Object(nr.a)(...t.map((t) => t._hovered)))
              );
            }
            addItem(t) {}
            removeItem(t) {}
            _handleKeydown(t) {
              const e = t.keyCode,
                n = this._keyManager;
              switch (e) {
                case 27:
                  Ri(t) || (t.preventDefault(), this.closed.emit('keydown'));
                  break;
                case 37:
                  this.parentMenu && 'ltr' === this.direction && this.closed.emit('keydown');
                  break;
                case 39:
                  this.parentMenu && 'rtl' === this.direction && this.closed.emit('keydown');
                  break;
                case 36:
                case 35:
                  Ri(t) || (36 === e ? n.setFirstItemActive() : n.setLastItemActive(), t.preventDefault());
                  break;
                default:
                  (38 !== e && 40 !== e) || n.setFocusOrigin('keyboard'), n.onKeydown(t);
              }
            }
            focusFirstItem(t = 'program') {
              this.lazyContent
                ? this._ngZone.onStable
                    .asObservable()
                    .pipe(dt(1))
                    .subscribe(() => this._focusFirstItem(t))
                : this._focusFirstItem(t);
            }
            _focusFirstItem(t) {
              const e = this._keyManager;
              if ((e.setFocusOrigin(t).setFirstItemActive(), !e.activeItem && this._directDescendantItems.length)) {
                let t = this._directDescendantItems.first._getHostElement().parentElement;
                for (; t; ) {
                  if ('menu' === t.getAttribute('role')) {
                    t.focus();
                    break;
                  }
                  t = t.parentElement;
                }
              }
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(t) {
              const e = 'mat-elevation-z' + Math.min(4 + t, 24),
                n = Object.keys(this._classList).find((t) => t.startsWith('mat-elevation-z'));
              (n && n !== this._previousElevation) ||
                (this._previousElevation && (this._classList[this._previousElevation] = !1),
                (this._classList[e] = !0),
                (this._previousElevation = e));
            }
            setPositionClasses(t = this.xPosition, e = this.yPosition) {
              const n = this._classList;
              (n['mat-menu-before'] = 'before' === t),
                (n['mat-menu-after'] = 'after' === t),
                (n['mat-menu-above'] = 'above' === e),
                (n['mat-menu-below'] = 'below' === e);
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(t) {
              this._animationDone.next(t), (this._isAnimating = !1);
            }
            _onAnimationStart(t) {
              (this._isAnimating = !0),
                'enter' === t.toState && 0 === this._keyManager.activeItemIndex && (t.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes.pipe(ws(this._allItems)).subscribe((t) => {
                this._directDescendantItems.reset(t.filter((t) => t._parentMenu === this)),
                  this._directDescendantItems.notifyOnChanges();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(s.A), s.Ob(tl));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              contentQueries: function (t, e, n) {
                var i;
                1 & t && (s.Hb(n, Qa, !0), s.Hb(n, Ja, !0), s.Hb(n, Ja, !1)),
                  2 & t &&
                    (s.pc((i = s.dc())) && (e.lazyContent = i.first),
                    s.pc((i = s.dc())) && (e._allItems = i),
                    s.pc((i = s.dc())) && (e.items = i));
              },
              viewQuery: function (t, e) {
                var n;
                1 & t && s.Ec(s.M, !0), 2 & t && s.pc((n = s.dc())) && (e.templateRef = n.first);
              },
              inputs: {
                backdropClass: 'backdropClass',
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            t
          );
        })(),
        il = (() => {
          class t extends nl {}
          return (
            (t.ɵfac = function (e) {
              return sl(e || t);
            }),
            (t.ɵdir = s.Jb({ type: t, features: [s.zb] })),
            t
          );
        })();
      const sl = s.Wb(il);
      let rl = (() => {
        class t extends il {
          constructor(t, e, n) {
            super(t, e, n);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(s.l), s.Ob(s.A), s.Ob(tl));
          }),
          (t.ɵcmp = s.Ib({
            type: t,
            selectors: [['mat-menu']],
            exportAs: ['matMenu'],
            features: [
              s.Bb([
                { provide: Za, useExisting: il },
                { provide: il, useExisting: t },
              ]),
              s.zb,
            ],
            ngContentSelectors: qa,
            decls: 2,
            vars: 0,
            consts: [
              ['tabindex', '-1', 'role', 'menu', 1, 'mat-menu-panel', 3, 'id', 'ngClass', 'keydown', 'click'],
              [1, 'mat-menu-content'],
            ],
            template: function (t, e) {
              1 & t && (s.kc(), s.yc(0, Wa, 9, 6, 'ng-template'), s.Ac(1, '\n'));
            },
            directives: [r.i],
            styles: [
              '.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:"";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\n',
            ],
            encapsulation: 2,
            data: { animation: [Ka.transformMenu, Ka.fadeInItems] },
            changeDetection: 0,
          })),
          t
        );
      })();
      const ol = new s.r('mat-menu-scroll-strategy'),
        al = {
          provide: ol,
          deps: [ao],
          useFactory: function (t) {
            return () => t.scrollStrategies.reposition();
          },
        },
        ll = Ji({ passive: !0 });
      let cl = (() => {
          class t {
            constructor(t, e, n, i, r, o, a, l) {
              (this._overlay = t),
                (this._element = e),
                (this._viewContainerRef = n),
                (this._parentMenu = r),
                (this._menuItemInstance = o),
                (this._dir = a),
                (this._focusMonitor = l),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = gt.a.EMPTY),
                (this._hoverSubscription = gt.a.EMPTY),
                (this._menuCloseSubscription = gt.a.EMPTY),
                (this._handleTouchStart = () => (this._openedBy = 'touch')),
                (this._openedBy = null),
                (this.restoreFocus = !0),
                (this.menuOpened = new s.o()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new s.o()),
                (this.onMenuClose = this.menuClosed),
                e.nativeElement.addEventListener('touchstart', this._handleTouchStart, ll),
                o && (o._triggersSubmenu = this.triggersSubmenu()),
                (this._scrollStrategy = i);
            }
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(t) {
              this.menu = t;
            }
            get menu() {
              return this._menu;
            }
            set menu(t) {
              t !== this._menu &&
                ((this._menu = t),
                this._menuCloseSubscription.unsubscribe(),
                t &&
                  (this._menuCloseSubscription = t.close.asObservable().subscribe((t) => {
                    this._destroyMenu(),
                      ('click' !== t && 'tab' !== t) || !this._parentMenu || this._parentMenu.closed.emit(t);
                  })));
            }
            ngAfterContentInit() {
              this._checkMenu(), this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef && (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, ll),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !(!this._menuItemInstance || !this._parentMenu);
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              if (this._menuOpen) return;
              this._checkMenu();
              const t = this._createOverlay(),
                e = t.getConfig();
              this._setPosition(e.positionStrategy),
                (e.hasBackdrop = null == this.menu.hasBackdrop ? !this.triggersSubmenu() : this.menu.hasBackdrop),
                t.attach(this._getPortal()),
                this.menu.lazyContent && this.menu.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(),
                this.menu instanceof il && this.menu._startAnimation();
            }
            closeMenu() {
              this.menu.close.emit();
            }
            focus(t = 'program', e) {
              this._focusMonitor
                ? this._focusMonitor.focusVia(this._element, t, e)
                : this._element.nativeElement.focus(e);
            }
            _destroyMenu() {
              if (!this._overlayRef || !this.menuOpen) return;
              const t = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this._restoreFocus(),
                t instanceof il
                  ? (t._resetAnimation(),
                    t.lazyContent
                      ? t._animationDone
                          .pipe(
                            C((t) => 'void' === t.toState),
                            dt(1),
                            yr(t.lazyContent._attached)
                          )
                          .subscribe({ next: () => t.lazyContent.detach(), complete: () => this._setIsMenuOpen(!1) })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), t.lazyContent && t.lazyContent.detach());
            }
            _initMenu() {
              (this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : void 0),
                (this.menu.direction = this.dir),
                this._setMenuElevation(),
                this._setIsMenuOpen(!0),
                this.menu.focusFirstItem(this._openedBy || 'program');
            }
            _setMenuElevation() {
              if (this.menu.setElevation) {
                let t = 0,
                  e = this.menu.parentMenu;
                for (; e; ) t++, (e = e.parentMenu);
                this.menu.setElevation(t);
              }
            }
            _restoreFocus() {
              this.restoreFocus &&
                (this._openedBy ? this.triggersSubmenu() || this.focus(this._openedBy) : this.focus()),
                (this._openedBy = null);
            }
            _setIsMenuOpen(t) {
              (this._menuOpen = t),
                this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit(),
                this.triggersSubmenu() && (this._menuItemInstance._highlighted = t);
            }
            _checkMenu() {
              this.menu ||
                (function () {
                  throw Error(
                    'matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu="matMenu"></mat-menu>\n      <button [matMenuTriggerFor]="menu"></button>'
                  );
                })();
            }
            _createOverlay() {
              if (!this._overlayRef) {
                const t = this._getOverlayConfig();
                this._subscribeToPositions(t.positionStrategy),
                  (this._overlayRef = this._overlay.create(t)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig() {
              return new Yr({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),
                backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(t) {
              this.menu.setPositionClasses &&
                t.positionChanges.subscribe((t) => {
                  this.menu.setPositionClasses(
                    'start' === t.connectionPair.overlayX ? 'after' : 'before',
                    'top' === t.connectionPair.overlayY ? 'below' : 'above'
                  );
                });
            }
            _setPosition(t) {
              let [e, n] = 'before' === this.menu.xPosition ? ['end', 'start'] : ['start', 'end'],
                [i, s] = 'above' === this.menu.yPosition ? ['bottom', 'top'] : ['top', 'bottom'],
                [r, o] = [i, s],
                [a, l] = [e, n],
                c = 0;
              this.triggersSubmenu()
                ? ((l = e = 'before' === this.menu.xPosition ? 'start' : 'end'),
                  (n = a = 'end' === e ? 'start' : 'end'),
                  (c = 'bottom' === i ? 8 : -8))
                : this.menu.overlapTrigger ||
                  ((r = 'top' === i ? 'bottom' : 'top'), (o = 'top' === s ? 'bottom' : 'top')),
                t.withPositions([
                  { originX: e, originY: r, overlayX: a, overlayY: i, offsetY: c },
                  { originX: n, originY: r, overlayX: l, overlayY: i, offsetY: c },
                  { originX: e, originY: o, overlayX: a, overlayY: s, offsetY: -c },
                  { originX: n, originY: o, overlayX: l, overlayY: s, offsetY: -c },
                ]);
            }
            _menuClosingActions() {
              const t = this._overlayRef.backdropClick(),
                e = this._overlayRef.detachments(),
                n = this._parentMenu ? this._parentMenu.closed : y(),
                i = this._parentMenu
                  ? this._parentMenu._hovered().pipe(
                      C((t) => t !== this._menuItemInstance),
                      C(() => this._menuOpen)
                    )
                  : y();
              return Object(nr.a)(t, n, i, e);
            }
            _handleMousedown(t) {
              us(t) ||
                ((this._openedBy = 0 === t.button ? 'mouse' : null), this.triggersSubmenu() && t.preventDefault());
            }
            _handleKeydown(t) {
              const e = t.keyCode;
              this.triggersSubmenu() &&
                ((39 === e && 'ltr' === this.dir) || (37 === e && 'rtl' === this.dir)) &&
                this.openMenu();
            }
            _handleClick(t) {
              this.triggersSubmenu() ? (t.stopPropagation(), this.openMenu()) : this.toggleMenu();
            }
            _handleHover() {
              this.triggersSubmenu() &&
                (this._hoverSubscription = this._parentMenu
                  ._hovered()
                  .pipe(
                    C((t) => t === this._menuItemInstance && !t.disabled),
                    ho(0, hr)
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof il && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(dt(1), ho(0, hr), yr(this._parentMenu._hovered()))
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal() {
              return (
                (this._portal && this._portal.templateRef === this.menu.templateRef) ||
                  (this._portal = new Ir(this.menu.templateRef, this._viewContainerRef)),
                this._portal
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                s.Ob(ao),
                s.Ob(s.l),
                s.Ob(s.P),
                s.Ob(ol),
                s.Ob(il, 8),
                s.Ob(Ja, 10),
                s.Ob(_s, 8),
                s.Ob(ps)
              );
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: ['aria-haspopup', 'true', 1, 'mat-menu-trigger'],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  s.cc('mousedown', function (t) {
                    return e._handleMousedown(t);
                  })('keydown', function (t) {
                    return e._handleKeydown(t);
                  })('click', function (t) {
                    return e._handleClick(t);
                  }),
                  2 & t &&
                    s.Db('aria-expanded', e.menuOpen || null)('aria-controls', e.menuOpen ? e.menu.panelId : null);
              },
              inputs: {
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
                _deprecatedMatMenuTriggerFor: ['mat-menu-trigger-for', '_deprecatedMatMenuTriggerFor'],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
              exportAs: ['matMenuTrigger'],
            })),
            t
          );
        })(),
        ul = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [al],
              imports: [Ss],
            })),
            t
          );
        })(),
        hl = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [al],
              imports: [[r.c, Ss, Js, co, ul], Er, Ss, ul],
            })),
            t
          );
        })();
      const dl = {
        provide: new s.r('mat-select-scroll-strategy'),
        deps: [ao],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let pl = (() => {
        class t {}
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: [dl],
            imports: [[r.c, co, er, Ss], Er, uo, er, Ss],
          })),
          t
        );
      })();
      const ml = {};
      class fl {
        constructor(t) {
          this.resultSelector = t;
        }
        call(t, e) {
          return e.subscribe(new gl(t, this.resultSelector));
        }
      }
      class gl extends jt.a {
        constructor(t, e) {
          super(t), (this.resultSelector = e), (this.active = 0), (this.values = []), (this.observables = []);
        }
        _next(t) {
          this.values.push(ml), this.observables.push(t);
        }
        _complete() {
          const t = this.observables,
            e = t.length;
          if (0 === e) this.destination.complete();
          else {
            (this.active = e), (this.toRespond = e);
            for (let n = 0; n < e; n++) {
              const e = t[n];
              this.add(Object(Mt.a)(this, e, e, n));
            }
          }
        }
        notifyComplete(t) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(t, e, n, i, s) {
          const r = this.values,
            o = this.toRespond ? (r[n] === ml ? --this.toRespond : this.toRespond) : 0;
          (r[n] = e), 0 === o && (this.resultSelector ? this._tryResultSelector(r) : this.destination.next(r.slice()));
        }
        _tryResultSelector(t) {
          let e;
          try {
            e = this.resultSelector.apply(this, t);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
      const bl = {
        provide: new s.r('mat-tooltip-scroll-strategy'),
        deps: [ao],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition({ scrollThrottle: 20 });
        },
      };
      let _l = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [bl],
              imports: [[gs, r.c, co, Ss], Ss, Er],
            })),
            t
          );
        })(),
        yl = (() => {
          class t {
            constructor() {
              (this.changes = new ft.a()),
                (this.itemsPerPageLabel = 'Items per page:'),
                (this.nextPageLabel = 'Next page'),
                (this.previousPageLabel = 'Previous page'),
                (this.firstPageLabel = 'First page'),
                (this.lastPageLabel = 'Last page'),
                (this.getRangeLabel = (t, e, n) => {
                  if (0 == n || 0 == e) return '0 of ' + n;
                  const i = t * e;
                  return `${i + 1} \u2013 ${i < (n = Math.max(n, 0)) ? Math.min(i + e, n) : i + e} of ${n}`;
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const vl = {
        provide: yl,
        deps: [[new s.B(), new s.K(), yl]],
        useFactory: function (t) {
          return t || new yl();
        },
      };
      let wl = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [vl],
              imports: [[r.c, Eo, pl, _l]],
            })),
            t
          );
        })(),
        xl = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, Ss], Ss],
            })),
            t
          );
        })();
      function Cl(t, e) {
        if ((1 & t && (s.fc(), s.Pb(0, 'circle', 3)), 2 & t)) {
          const t = s.gc();
          s.xc('animation-name', 'mat-progress-spinner-stroke-rotate-' + t.diameter)(
            'stroke-dashoffset',
            t._strokeDashOffset,
            'px'
          )('stroke-dasharray', t._strokeCircumference, 'px')('stroke-width', t._circleStrokeWidth, '%'),
            s.Db('r', t._circleRadius);
        }
      }
      function Sl(t, e) {
        if ((1 & t && (s.fc(), s.Pb(0, 'circle', 3)), 2 & t)) {
          const t = s.gc();
          s.xc('stroke-dashoffset', t._strokeDashOffset, 'px')('stroke-dasharray', t._strokeCircumference, 'px')(
            'stroke-width',
            t._circleStrokeWidth,
            '%'
          ),
            s.Db('r', t._circleRadius);
        }
      }
      class El {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const kl = ks(El, 'primary'),
        Ol = new s.r('mat-progress-spinner-default-options', {
          providedIn: 'root',
          factory: function () {
            return { diameter: 100 };
          },
        });
      let Al = (() => {
          class t extends kl {
            constructor(e, n, i, s, r) {
              super(e),
                (this._elementRef = e),
                (this._document = i),
                (this._diameter = 100),
                (this._value = 0),
                (this._fallbackAnimation = !1),
                (this.mode = 'determinate');
              const o = t._diameters;
              o.has(i.head) || o.set(i.head, new Set([100])),
                (this._fallbackAnimation = n.EDGE || n.TRIDENT),
                (this._noopAnimations = 'NoopAnimations' === s && !!r && !r._forceAnimations),
                r && (r.diameter && (this.diameter = r.diameter), r.strokeWidth && (this.strokeWidth = r.strokeWidth));
            }
            get diameter() {
              return this._diameter;
            }
            set diameter(t) {
              (this._diameter = zi(t)), !this._fallbackAnimation && this._styleRoot && this._attachStyleNode();
            }
            get strokeWidth() {
              return this._strokeWidth || this.diameter / 10;
            }
            set strokeWidth(t) {
              this._strokeWidth = zi(t);
            }
            get value() {
              return 'determinate' === this.mode ? this._value : 0;
            }
            set value(t) {
              this._value = Math.max(0, Math.min(100, zi(t)));
            }
            ngOnInit() {
              const t = this._elementRef.nativeElement;
              (this._styleRoot = es(t) || this._document.head),
                this._attachStyleNode(),
                t.classList.add(
                  `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`
                );
            }
            get _circleRadius() {
              return (this.diameter - 10) / 2;
            }
            get _viewBox() {
              const t = 2 * this._circleRadius + this.strokeWidth;
              return `0 0 ${t} ${t}`;
            }
            get _strokeCircumference() {
              return 2 * Math.PI * this._circleRadius;
            }
            get _strokeDashOffset() {
              return 'determinate' === this.mode
                ? (this._strokeCircumference * (100 - this._value)) / 100
                : this._fallbackAnimation && 'indeterminate' === this.mode
                ? 0.2 * this._strokeCircumference
                : null;
            }
            get _circleStrokeWidth() {
              return (this.strokeWidth / this.diameter) * 100;
            }
            _attachStyleNode() {
              const e = this._styleRoot,
                n = this._diameter,
                i = t._diameters;
              let s = i.get(e);
              if (!s || !s.has(n)) {
                const t = this._document.createElement('style');
                t.setAttribute('mat-spinner-animation', n + ''),
                  (t.textContent = this._getAnimationText()),
                  e.appendChild(t),
                  s || ((s = new Set()), i.set(e, s)),
                  s.add(n);
              }
            }
            _getAnimationText() {
              return '\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n'
                .replace(/START_VALUE/g, '' + 0.95 * this._strokeCircumference)
                .replace(/END_VALUE/g, '' + 0.2 * this._strokeCircumference)
                .replace(/DIAMETER/g, '' + this.diameter);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(Gi), s.Ob(r.d, 8), s.Ob(Ai, 8), s.Ob(Ol));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-progress-spinner']],
              hostAttrs: ['role', 'progressbar', 1, 'mat-progress-spinner'],
              hostVars: 10,
              hostBindings: function (t, e) {
                2 & t &&
                  (s.Db('aria-valuemin', 'determinate' === e.mode ? 0 : null)(
                    'aria-valuemax',
                    'determinate' === e.mode ? 100 : null
                  )('aria-valuenow', 'determinate' === e.mode ? e.value : null)('mode', e.mode),
                  s.xc('width', e.diameter, 'px')('height', e.diameter, 'px'),
                  s.Fb('_mat-animation-noopable', e._noopAnimations));
              },
              inputs: {
                color: 'color',
                mode: 'mode',
                diameter: 'diameter',
                strokeWidth: 'strokeWidth',
                value: 'value',
              },
              exportAs: ['matProgressSpinner'],
              features: [s.zb],
              decls: 9,
              vars: 8,
              consts: [
                ['preserveAspectRatio', 'xMidYMid meet', 'focusable', 'false', 3, 'ngSwitch'],
                [
                  'cx',
                  '50%',
                  'cy',
                  '50%',
                  3,
                  'animation-name',
                  'stroke-dashoffset',
                  'stroke-dasharray',
                  'stroke-width',
                  4,
                  'ngSwitchCase',
                ],
                [
                  'cx',
                  '50%',
                  'cy',
                  '50%',
                  3,
                  'stroke-dashoffset',
                  'stroke-dasharray',
                  'stroke-width',
                  4,
                  'ngSwitchCase',
                ],
                ['cx', '50%', 'cy', '50%'],
              ],
              template: function (t, e) {
                1 & t &&
                  (s.Ac(0, '\n\n'),
                  s.fc(),
                  s.Ub(1, 'svg', 0),
                  s.Ac(2, '\n\n  '),
                  s.Ac(3, '\n  '),
                  s.yc(4, Cl, 1, 9, 'circle', 1),
                  s.Ac(5, '\n\n  '),
                  s.yc(6, Sl, 1, 7, 'circle', 2),
                  s.Ac(7, '\n'),
                  s.Tb(),
                  s.Ac(8, '\n')),
                  2 & t &&
                    (s.Cb(1),
                    s.xc('width', e.diameter, 'px')('height', e.diameter, 'px'),
                    s.lc('ngSwitch', 'indeterminate' === e.mode),
                    s.Db('viewBox', e._viewBox),
                    s.Cb(3),
                    s.lc('ngSwitchCase', !0),
                    s.Cb(2),
                    s.lc('ngSwitchCase', !1));
              },
              directives: [r.m, r.n],
              styles: [
                '.mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            (t._diameters = new WeakMap()),
            t
          );
        })(),
        Tl = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ss, r.c], Ss],
            })),
            t
          );
        })(),
        Il = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Js, Ss], Ss],
            })),
            t
          );
        })();
      const Rl = ['*'];
      function Pl(t, e) {
        if (1 & t) {
          const t = s.Vb();
          s.Ub(0, 'div', 2),
            s.cc('click', function () {
              return s.sc(t), s.gc()._onBackdropClicked();
            }),
            s.Tb();
        }
        if (2 & t) {
          const t = s.gc();
          s.Fb('mat-drawer-shown', t._isShowingBackdrop());
        }
      }
      function Dl(t, e) {
        1 & t && (s.Ub(0, 'mat-drawer-content'), s.Ac(1, '\n  '), s.jc(2, 2), s.Ac(3, '\n'), s.Tb());
      }
      const jl = [[['mat-drawer']], [['mat-drawer-content']], '*'],
        Ll = ['mat-drawer', 'mat-drawer-content', '*'];
      function Ml(t, e) {
        if (1 & t) {
          const t = s.Vb();
          s.Ub(0, 'div', 2),
            s.cc('click', function () {
              return s.sc(t), s.gc()._onBackdropClicked();
            }),
            s.Tb();
        }
        if (2 & t) {
          const t = s.gc();
          s.Fb('mat-drawer-shown', t._isShowingBackdrop());
        }
      }
      function Nl(t, e) {
        1 & t && (s.Ub(0, 'mat-sidenav-content', 3), s.Ac(1, '\n  '), s.jc(2, 2), s.Ac(3, '\n'), s.Tb());
      }
      const Fl = [[['mat-sidenav']], [['mat-sidenav-content']], '*'],
        Vl = ['mat-sidenav', 'mat-sidenav-content', '*'],
        Hl = {
          transformDrawer: le('transform', [
            pe('open, open-instant', de({ transform: 'none', visibility: 'visible' })),
            pe('void', de({ 'box-shadow': 'none', visibility: 'hidden' })),
            me('void => open-instant', ce('0ms')),
            me('void <=> open, open-instant => void', ce('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
          ]),
        };
      function Bl(t) {
        throw Error(`A drawer was already declared for 'position="${t}"'`);
      }
      const Ul = new s.r('MAT_DRAWER_DEFAULT_AUTOSIZE', {
          providedIn: 'root',
          factory: function () {
            return !1;
          },
        }),
        zl = new s.r('MAT_DRAWER_CONTAINER');
      let Yl = (() => {
          class t extends Cr {
            constructor(t, e, n, i, s) {
              super(n, i, s), (this._changeDetectorRef = t), (this._container = e);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.h), s.Ob(Object(s.U)(() => ql)), s.Ob(s.l), s.Ob(xr), s.Ob(s.A));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-drawer-content']],
              hostAttrs: [1, 'mat-drawer-content'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  s.xc('margin-left', e._container._contentMargins.left, 'px')(
                    'margin-right',
                    e._container._contentMargins.right,
                    'px'
                  );
              },
              features: [s.zb],
              ngContentSelectors: Rl,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (s.kc(), s.jc(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        $l = (() => {
          class t {
            constructor(t, e, n, i, r, o, a) {
              (this._elementRef = t),
                (this._focusTrapFactory = e),
                (this._focusMonitor = n),
                (this._platform = i),
                (this._ngZone = r),
                (this._doc = o),
                (this._container = a),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = 'start'),
                (this._mode = 'over'),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new ft.a()),
                (this._animationEnd = new ft.a()),
                (this._animationState = 'void'),
                (this.openedChange = new s.o(!0)),
                (this._destroyed = new ft.a()),
                (this.onPositionChanged = new s.o()),
                (this._modeChanged = new ft.a()),
                this.openedChange.subscribe((t) => {
                  t
                    ? (this._doc && (this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement),
                      this._takeFocus())
                    : this._restoreFocus();
                }),
                this._ngZone.runOutsideAngular(() => {
                  ir(this._elementRef.nativeElement, 'keydown')
                    .pipe(
                      C((t) => 27 === t.keyCode && !this.disableClose && !Ri(t)),
                      yr(this._destroyed)
                    )
                    .subscribe((t) =>
                      this._ngZone.run(() => {
                        this.close(), t.stopPropagation(), t.preventDefault();
                      })
                    );
                }),
                this._animationEnd
                  .pipe(
                    (function (t, e) {
                      return (e) => e.lift(new dr(t, void 0));
                    })((t, e) => t.fromState === e.fromState && t.toState === e.toState)
                  )
                  .subscribe((t) => {
                    const { fromState: e, toState: n } = t;
                    ((0 === n.indexOf('open') && 'void' === e) || ('void' === n && 0 === e.indexOf('open'))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            get position() {
              return this._position;
            }
            set position(t) {
              (t = 'end' === t ? 'end' : 'start') != this._position &&
                ((this._position = t), this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(t) {
              (this._mode = t), this._updateFocusTrapState(), this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(t) {
              this._disableClose = Ui(t);
            }
            get autoFocus() {
              const t = this._autoFocus;
              return null == t ? 'side' !== this.mode : t;
            }
            set autoFocus(t) {
              this._autoFocus = Ui(t);
            }
            get opened() {
              return this._opened;
            }
            set opened(t) {
              this.toggle(Ui(t));
            }
            get _openedStream() {
              return this.openedChange.pipe(
                C((t) => t),
                Object(l.a)(() => {})
              );
            }
            get openedStart() {
              return this._animationStarted.pipe(
                C((t) => t.fromState !== t.toState && 0 === t.toState.indexOf('open')),
                Object(l.a)(() => {})
              );
            }
            get _closedStream() {
              return this.openedChange.pipe(
                C((t) => !t),
                Object(l.a)(() => {})
              );
            }
            get closedStart() {
              return this._animationStarted.pipe(
                C((t) => t.fromState !== t.toState && 'void' === t.toState),
                Object(l.a)(() => {})
              );
            }
            _takeFocus() {
              this.autoFocus &&
                this._focusTrap &&
                this._focusTrap.focusInitialElementWhenReady().then((t) => {
                  t ||
                    'function' != typeof this._elementRef.nativeElement.focus ||
                    this._elementRef.nativeElement.focus();
                });
            }
            _restoreFocus() {
              if (!this.autoFocus) return;
              const t = this._doc && this._doc.activeElement;
              t &&
                this._elementRef.nativeElement.contains(t) &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia)
                  : this._elementRef.nativeElement.blur()),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._openedVia = null);
            }
            ngAfterContentInit() {
              (this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement)),
                this._updateFocusTrapState();
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              this._focusTrap && this._focusTrap.destroy(),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(t) {
              return this.toggle(!0, t);
            }
            close() {
              return this.toggle(!1);
            }
            toggle(t = !this.opened, e = 'program') {
              return (
                (this._opened = t),
                t
                  ? ((this._animationState = this._enableAnimations ? 'open' : 'open-instant'), (this._openedVia = e))
                  : ((this._animationState = 'void'), this._restoreFocus()),
                this._updateFocusTrapState(),
                new Promise((t) => {
                  this.openedChange.pipe(dt(1)).subscribe((e) => t(e ? 'open' : 'close'));
                })
              );
            }
            get _width() {
              return (this._elementRef.nativeElement && this._elementRef.nativeElement.offsetWidth) || 0;
            }
            _updateFocusTrapState() {
              this._focusTrap && (this._focusTrap.enabled = this.opened && 'side' !== this.mode);
            }
            _animationStartListener(t) {
              this._animationStarted.next(t);
            }
            _animationDoneListener(t) {
              this._animationEnd.next(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(cs), s.Ob(ps), s.Ob(Gi), s.Ob(s.A), s.Ob(r.d, 8), s.Ob(zl, 8));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-drawer']],
              hostAttrs: ['tabIndex', '-1', 1, 'mat-drawer'],
              hostVars: 12,
              hostBindings: function (t, e) {
                1 & t &&
                  s.Gb('@transform.start', function (t) {
                    return e._animationStartListener(t);
                  })('@transform.done', function (t) {
                    return e._animationDoneListener(t);
                  }),
                  2 & t &&
                    (s.Db('align', null),
                    s.Dc('@transform', e._animationState),
                    s.Fb('mat-drawer-end', 'end' === e.position)('mat-drawer-over', 'over' === e.mode)(
                      'mat-drawer-push',
                      'push' === e.mode
                    )('mat-drawer-side', 'side' === e.mode)('mat-drawer-opened', e.opened));
              },
              inputs: {
                position: 'position',
                mode: 'mode',
                disableClose: 'disableClose',
                autoFocus: 'autoFocus',
                opened: 'opened',
              },
              outputs: {
                openedChange: 'openedChange',
                onPositionChanged: 'positionChanged',
                _openedStream: 'opened',
                openedStart: 'openedStart',
                _closedStream: 'closed',
                closedStart: 'closedStart',
              },
              exportAs: ['matDrawer'],
              ngContentSelectors: Rl,
              decls: 5,
              vars: 0,
              consts: [[1, 'mat-drawer-inner-container']],
              template: function (t, e) {
                1 & t && (s.kc(), s.Ub(0, 'div', 0), s.Ac(1, '\n  '), s.jc(2), s.Ac(3, '\n'), s.Tb(), s.Ac(4, '\n'));
              },
              encapsulation: 2,
              data: { animation: [Hl.transformDrawer] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        ql = (() => {
          class t {
            constructor(t, e, n, i, r, o = !1, a) {
              (this._dir = t),
                (this._element = e),
                (this._ngZone = n),
                (this._changeDetectorRef = i),
                (this._animationMode = a),
                (this._drawers = new s.E()),
                (this.backdropClick = new s.o()),
                (this._destroyed = new ft.a()),
                (this._doCheckSubject = new ft.a()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new ft.a()),
                t &&
                  t.change.pipe(yr(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                r
                  .change()
                  .pipe(yr(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = o);
            }
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(t) {
              this._autosize = Ui(t);
            }
            get hasBackdrop() {
              return null == this._backdropOverride
                ? !this._start || 'side' !== this._start.mode || !this._end || 'side' !== this._end.mode
                : this._backdropOverride;
            }
            set hasBackdrop(t) {
              this._backdropOverride = null == t ? null : Ui(t);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            ngAfterContentInit() {
              this._allDrawers.changes.pipe(ws(this._allDrawers), yr(this._destroyed)).subscribe((t) => {
                this._drawers.reset(t.filter((t) => !t._container || t._container === this)),
                  this._drawers.notifyOnChanges();
              }),
                this._drawers.changes.pipe(ws(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((t) => {
                      this._watchDrawerToggle(t), this._watchDrawerPosition(t), this._watchDrawerMode(t);
                    }),
                    (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._doCheckSubject.pipe(Fi(10), yr(this._destroyed)).subscribe(() => this.updateContentMargins());
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((t) => t.open());
            }
            close() {
              this._drawers.forEach((t) => t.close());
            }
            updateContentMargins() {
              let t = 0,
                e = 0;
              if (this._left && this._left.opened)
                if ('side' == this._left.mode) t += this._left._width;
                else if ('push' == this._left.mode) {
                  const n = this._left._width;
                  (t += n), (e -= n);
                }
              if (this._right && this._right.opened)
                if ('side' == this._right.mode) e += this._right._width;
                else if ('push' == this._right.mode) {
                  const n = this._right._width;
                  (e += n), (t -= n);
                }
              (t = t || null),
                (e = e || null),
                (t === this._contentMargins.left && e === this._contentMargins.right) ||
                  ((this._contentMargins = { left: t, right: e }),
                  this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins)));
            }
            ngDoCheck() {
              this._autosize && this._isPushed() && this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());
            }
            _watchDrawerToggle(t) {
              t._animationStarted
                .pipe(
                  C((t) => t.fromState !== t.toState),
                  yr(this._drawers.changes)
                )
                .subscribe((t) => {
                  'open-instant' !== t.toState &&
                    'NoopAnimations' !== this._animationMode &&
                    this._element.nativeElement.classList.add('mat-drawer-transition'),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                'side' !== t.mode &&
                  t.openedChange.pipe(yr(this._drawers.changes)).subscribe(() => this._setContainerClass(t.opened));
            }
            _watchDrawerPosition(t) {
              t &&
                t.onPositionChanged.pipe(yr(this._drawers.changes)).subscribe(() => {
                  this._ngZone.onMicrotaskEmpty
                    .asObservable()
                    .pipe(dt(1))
                    .subscribe(() => {
                      this._validateDrawers();
                    });
                });
            }
            _watchDrawerMode(t) {
              t &&
                t._modeChanged.pipe(yr(Object(nr.a)(this._drawers.changes, this._destroyed))).subscribe(() => {
                  this.updateContentMargins(), this._changeDetectorRef.markForCheck();
                });
            }
            _setContainerClass(t) {
              const e = this._element.nativeElement.classList,
                n = 'mat-drawer-container-has-open';
              t ? e.add(n) : e.remove(n);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((t) => {
                  'end' == t.position
                    ? (null != this._end && Bl('end'), (this._end = t))
                    : (null != this._start && Bl('start'), (this._start = t));
                }),
                (this._right = this._left = null),
                this._dir && 'rtl' === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) && 'over' != this._start.mode) ||
                (this._isDrawerOpen(this._end) && 'over' != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawer();
            }
            _closeModalDrawer() {
              [this._start, this._end]
                .filter((t) => t && !t.disableClose && this._canHaveBackdrop(t))
                .forEach((t) => t.close());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end))
              );
            }
            _canHaveBackdrop(t) {
              return 'side' !== t.mode || !!this._backdropOverride;
            }
            _isDrawerOpen(t) {
              return null != t && t.opened;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(_s, 8), s.Ob(s.l), s.Ob(s.A), s.Ob(s.h), s.Ob(Sr), s.Ob(Ul), s.Ob(Ai, 8));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-drawer-container']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && (s.Hb(n, Yl, !0), s.Hb(n, $l, !0)),
                  2 & t && (s.pc((i = s.dc())) && (e._content = i.first), s.pc((i = s.dc())) && (e._allDrawers = i));
              },
              viewQuery: function (t, e) {
                var n;
                1 & t && s.Ec(Yl, !0), 2 & t && s.pc((n = s.dc())) && (e._userContent = n.first);
              },
              hostAttrs: [1, 'mat-drawer-container'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && s.Fb('mat-drawer-container-explicit-backdrop', e._backdropOverride);
              },
              inputs: { autosize: 'autosize', hasBackdrop: 'hasBackdrop' },
              outputs: { backdropClick: 'backdropClick' },
              exportAs: ['matDrawerContainer'],
              features: [s.Bb([{ provide: zl, useExisting: t }])],
              ngContentSelectors: Ll,
              decls: 8,
              vars: 2,
              consts: [
                ['class', 'mat-drawer-backdrop', 3, 'mat-drawer-shown', 'click', 4, 'ngIf'],
                [4, 'ngIf'],
                [1, 'mat-drawer-backdrop', 3, 'click'],
              ],
              template: function (t, e) {
                1 & t &&
                  (s.kc(jl),
                  s.yc(0, Pl, 1, 2, 'div', 0),
                  s.Ac(1, '\n\n'),
                  s.jc(2),
                  s.Ac(3, '\n\n'),
                  s.jc(4, 1),
                  s.Ac(5, '\n'),
                  s.yc(6, Dl, 4, 0, 'mat-drawer-content', 1),
                  s.Ac(7, '\n')),
                  2 & t && (s.lc('ngIf', e.hasBackdrop), s.Cb(6), s.lc('ngIf', !e._content));
              },
              directives: [r.k, Yl],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Wl = (() => {
          class t extends Yl {
            constructor(t, e, n, i, s) {
              super(t, e, n, i, s);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.h), s.Ob(Object(s.U)(() => Zl)), s.Ob(s.l), s.Ob(xr), s.Ob(s.A));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-sidenav-content']],
              hostAttrs: [1, 'mat-drawer-content', 'mat-sidenav-content'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  s.xc('margin-left', e._container._contentMargins.left, 'px')(
                    'margin-right',
                    e._container._contentMargins.right,
                    'px'
                  );
              },
              features: [s.zb],
              ngContentSelectors: Rl,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (s.kc(), s.jc(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Kl = (() => {
          class t extends $l {
            constructor() {
              super(...arguments), (this._fixedInViewport = !1), (this._fixedTopGap = 0), (this._fixedBottomGap = 0);
            }
            get fixedInViewport() {
              return this._fixedInViewport;
            }
            set fixedInViewport(t) {
              this._fixedInViewport = Ui(t);
            }
            get fixedTopGap() {
              return this._fixedTopGap;
            }
            set fixedTopGap(t) {
              this._fixedTopGap = zi(t);
            }
            get fixedBottomGap() {
              return this._fixedBottomGap;
            }
            set fixedBottomGap(t) {
              this._fixedBottomGap = zi(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return Ql(e || t);
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-sidenav']],
              hostAttrs: ['tabIndex', '-1', 1, 'mat-drawer', 'mat-sidenav'],
              hostVars: 17,
              hostBindings: function (t, e) {
                2 & t &&
                  (s.Db('align', null),
                  s.xc('top', e.fixedInViewport ? e.fixedTopGap : null, 'px')(
                    'bottom',
                    e.fixedInViewport ? e.fixedBottomGap : null,
                    'px'
                  ),
                  s.Fb('mat-drawer-end', 'end' === e.position)('mat-drawer-over', 'over' === e.mode)(
                    'mat-drawer-push',
                    'push' === e.mode
                  )('mat-drawer-side', 'side' === e.mode)('mat-drawer-opened', e.opened)(
                    'mat-sidenav-fixed',
                    e.fixedInViewport
                  ));
              },
              inputs: {
                fixedInViewport: 'fixedInViewport',
                fixedTopGap: 'fixedTopGap',
                fixedBottomGap: 'fixedBottomGap',
              },
              exportAs: ['matSidenav'],
              features: [s.zb],
              ngContentSelectors: Rl,
              decls: 5,
              vars: 0,
              consts: [[1, 'mat-drawer-inner-container']],
              template: function (t, e) {
                1 & t && (s.kc(), s.Ub(0, 'div', 0), s.Ac(1, '\n  '), s.jc(2), s.Ac(3, '\n'), s.Tb(), s.Ac(4, '\n'));
              },
              encapsulation: 2,
              data: { animation: [Hl.transformDrawer] },
              changeDetection: 0,
            })),
            t
          );
        })();
      const Ql = s.Wb(Kl);
      let Zl = (() => {
        class t extends ql {}
        return (
          (t.ɵfac = function (e) {
            return Gl(e || t);
          }),
          (t.ɵcmp = s.Ib({
            type: t,
            selectors: [['mat-sidenav-container']],
            contentQueries: function (t, e, n) {
              var i;
              1 & t && (s.Hb(n, Wl, !0), s.Hb(n, Kl, !0)),
                2 & t && (s.pc((i = s.dc())) && (e._content = i.first), s.pc((i = s.dc())) && (e._allDrawers = i));
            },
            hostAttrs: [1, 'mat-drawer-container', 'mat-sidenav-container'],
            hostVars: 2,
            hostBindings: function (t, e) {
              2 & t && s.Fb('mat-drawer-container-explicit-backdrop', e._backdropOverride);
            },
            exportAs: ['matSidenavContainer'],
            features: [s.Bb([{ provide: zl, useExisting: t }]), s.zb],
            ngContentSelectors: Vl,
            decls: 8,
            vars: 2,
            consts: [
              ['class', 'mat-drawer-backdrop', 3, 'mat-drawer-shown', 'click', 4, 'ngIf'],
              ['cdkScrollable', '', 4, 'ngIf'],
              [1, 'mat-drawer-backdrop', 3, 'click'],
              ['cdkScrollable', ''],
            ],
            template: function (t, e) {
              1 & t &&
                (s.kc(Fl),
                s.yc(0, Ml, 1, 2, 'div', 0),
                s.Ac(1, '\n\n'),
                s.jc(2),
                s.Ac(3, '\n\n'),
                s.jc(4, 1),
                s.Ac(5, '\n'),
                s.yc(6, Nl, 4, 0, 'mat-sidenav-content', 1),
                s.Ac(7, '\n')),
                2 & t && (s.lc('ngIf', e.hasBackdrop), s.Cb(6), s.lc('ngIf', !e._content));
            },
            directives: [r.k, Wl, Cr],
            styles: [
              '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const Gl = s.Wb(Zl);
      let Xl = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, Ss, Xi, Er], Er, Ss],
            })),
            t
          );
        })(),
        Jl = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        tc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Jl, Js, Ss, is], Jl, Ss],
            })),
            t
          );
        })(),
        ec = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, Ss], Ss],
            })),
            t
          );
        })(),
        nc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[co, Lr, r.c, Eo, Ss], Ss],
            })),
            t
          );
        })(),
        ic = (() => {
          class t {
            constructor() {
              (this.changes = new ft.a()), (this.sortButtonLabel = (t) => 'Change sorting for ' + t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const sc = {
        provide: ic,
        deps: [[new s.B(), new s.K(), ic]],
        useFactory: function (t) {
          return t || new ic();
        },
      };
      let rc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [sc],
              imports: [[r.c]],
            })),
            t
          );
        })(),
        oc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[ys]],
            })),
            t
          );
        })(),
        ac = (() => {
          class t {
            constructor() {
              (this.changes = new ft.a()), (this.optionalLabel = 'Optional');
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const lc = {
        provide: ac,
        deps: [[new s.B(), new s.K(), ac]],
        useFactory: function (t) {
          return t || new ac();
        },
      };
      let cc = (() => {
        class t {}
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: [lc, Bs],
            imports: [[Ss, r.c, Lr, Eo, oc, Ia, Js], Ss],
          })),
          t
        );
      })();
      class uc extends ft.a {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return e && !e.closed && t.next(this._value), e;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new Tt.a();
          return this._value;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      let hc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
            })),
            t
          );
        })(),
        dc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[hc, Ss], Ss],
            })),
            t
          );
        })(),
        pc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, Ss, Lr, Js, is, gs], Ss],
            })),
            t
          );
        })();
      const mc = ['*', [['mat-toolbar-row']]],
        fc = ['*', 'mat-toolbar-row'];
      class gc {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const bc = ks(gc);
      let _c = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [['mat-toolbar-row']],
              hostAttrs: [1, 'mat-toolbar-row'],
              exportAs: ['matToolbarRow'],
            })),
            t
          );
        })(),
        yc = (() => {
          class t extends bc {
            constructor(t, e, n) {
              super(t), (this._platform = e), (this._document = n);
            }
            ngAfterViewInit() {
              Object(s.W)() &&
                this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes()));
            }
            _checkToolbarMixedModes() {
              this._toolbarRows.length &&
                Array.from(this._elementRef.nativeElement.childNodes)
                  .filter((t) => !(t.classList && t.classList.contains('mat-toolbar-row')))
                  .filter((t) => t.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))
                  .some((t) => !(!t.textContent || !t.textContent.trim())) &&
                (function () {
                  throw Error(
                    'MatToolbar: Attempting to combine different toolbar modes. Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content inside of a `<mat-toolbar>` for a single row.'
                  );
                })();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(Gi), s.Ob(r.d));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['mat-toolbar']],
              contentQueries: function (t, e, n) {
                var i;
                1 & t && s.Hb(n, _c, !0), 2 & t && s.pc((i = s.dc())) && (e._toolbarRows = i);
              },
              hostAttrs: [1, 'mat-toolbar'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  s.Fb('mat-toolbar-multiple-rows', e._toolbarRows.length > 0)(
                    'mat-toolbar-single-row',
                    0 === e._toolbarRows.length
                  );
              },
              inputs: { color: 'color' },
              exportAs: ['matToolbar'],
              features: [s.zb],
              ngContentSelectors: fc,
              decls: 4,
              vars: 0,
              template: function (t, e) {
                1 & t && (s.kc(mc), s.jc(0), s.Ac(1, '\n'), s.jc(2, 1), s.Ac(3, '\n'));
              },
              styles: [
                '.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        vc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[Ss], Ss],
            })),
            t
          );
        })(),
        wc = (() => {
          class t {
            constructor(t) {
              this.template = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.M));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [['', 'cdkTreeNodeDef', '']],
              inputs: { when: ['cdkTreeNodeDefWhen', 'when'] },
            })),
            t
          );
        })(),
        xc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [ps, wc],
            })),
            t
          );
        })(),
        Cc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[xc, Ss], Ss],
            })),
            t
          );
        })(),
        Sc = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [
                bo,
                _o,
                Eo,
                ko,
                Do,
                Lo,
                Fo,
                Ss,
                na,
                Go,
                sa,
                oa,
                uo,
                aa,
                Ia,
                Jo,
                Ys,
                Ya,
                hl,
                Hs,
                er,
                wl,
                xl,
                Tl,
                tr,
                Il,
                Js,
                pl,
                Xl,
                tc,
                ec,
                nc,
                rc,
                cc,
                dc,
                pc,
                vc,
                _l,
                Cc,
              ],
            })),
            t
          );
        })();
      const Ec = (() => {
        function t() {
          return Error.call(this), (this.message = 'no elements in sequence'), (this.name = 'EmptyError'), this;
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      function kc(t) {
        return function (e) {
          return 0 === t ? ct() : e.lift(new Oc(t));
        };
      }
      class Oc {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new ht();
        }
        call(t, e) {
          return e.subscribe(new Ac(t, this.total));
        }
      }
      class Ac extends x.a {
        constructor(t, e) {
          super(t), (this.total = e), (this.ring = new Array()), (this.count = 0);
        }
        _next(t) {
          const e = this.ring,
            n = this.total,
            i = this.count++;
          e.length < n ? e.push(t) : (e[i % n] = t);
        }
        _complete() {
          const t = this.destination;
          let e = this.count;
          if (e > 0) {
            const n = this.count >= this.total ? this.total : this.count,
              i = this.ring;
            for (let s = 0; s < n; s++) {
              const s = e++ % n;
              t.next(i[s]);
            }
          }
          t.complete();
        }
      }
      function Tc(t = Pc) {
        return (e) => e.lift(new Ic(t));
      }
      class Ic {
        constructor(t) {
          this.errorFactory = t;
        }
        call(t, e) {
          return e.subscribe(new Rc(t, this.errorFactory));
        }
      }
      class Rc extends x.a {
        constructor(t, e) {
          super(t), (this.errorFactory = e), (this.hasValue = !1);
        }
        _next(t) {
          (this.hasValue = !0), this.destination.next(t);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let e;
            try {
              e = this.errorFactory();
            } catch (t) {
              e = t;
            }
            this.destination.error(e);
          }
        }
      }
      function Pc() {
        return new Ec();
      }
      function Dc(t = null) {
        return (e) => e.lift(new jc(t));
      }
      class jc {
        constructor(t) {
          this.defaultValue = t;
        }
        call(t, e) {
          return e.subscribe(new Lc(t, this.defaultValue));
        }
      }
      class Lc extends x.a {
        constructor(t, e) {
          super(t), (this.defaultValue = e), (this.isEmpty = !0);
        }
        _next(t) {
          (this.isEmpty = !1), this.destination.next(t);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue), this.destination.complete();
        }
      }
      var Mc = n('SpAZ');
      function Nc(t, e) {
        const n = arguments.length >= 2;
        return (i) => i.pipe(t ? C((e, n) => t(e, n, i)) : Mc.a, kc(1), n ? Dc(e) : Tc(() => new Ec()));
      }
      function Fc(t, e) {
        const n = arguments.length >= 2;
        return (i) => i.pipe(t ? C((e, n) => t(e, n, i)) : Mc.a, dt(1), n ? Dc(e) : Tc(() => new Ec()));
      }
      class Vc {
        constructor(t, e, n) {
          (this.predicate = t), (this.thisArg = e), (this.source = n);
        }
        call(t, e) {
          return e.subscribe(new Hc(t, this.predicate, this.thisArg, this.source));
        }
      }
      class Hc extends x.a {
        constructor(t, e, n, i) {
          super(t),
            (this.predicate = e),
            (this.thisArg = n),
            (this.source = i),
            (this.index = 0),
            (this.thisArg = n || this);
        }
        notifyComplete(t) {
          this.destination.next(t), this.destination.complete();
        }
        _next(t) {
          let e = !1;
          try {
            e = this.predicate.call(this.thisArg, t, this.index++, this.source);
          } catch (n) {
            return void this.destination.error(n);
          }
          e || this.notifyComplete(!1);
        }
        _complete() {
          this.notifyComplete(!0);
        }
      }
      function Bc(t, e) {
        let n = !1;
        return (
          arguments.length >= 2 && (n = !0),
          function (i) {
            return i.lift(new Uc(t, e, n));
          }
        );
      }
      class Uc {
        constructor(t, e, n = !1) {
          (this.accumulator = t), (this.seed = e), (this.hasSeed = n);
        }
        call(t, e) {
          return e.subscribe(new zc(t, this.accumulator, this.seed, this.hasSeed));
        }
      }
      class zc extends x.a {
        constructor(t, e, n, i) {
          super(t), (this.accumulator = e), (this._seed = n), (this.hasSeed = i), (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(t) {
          (this.hasSeed = !0), (this._seed = t);
        }
        _next(t) {
          if (this.hasSeed) return this._tryNext(t);
          (this.seed = t), this.destination.next(t);
        }
        _tryNext(t) {
          const e = this.index++;
          let n;
          try {
            n = this.accumulator(this.seed, t, e);
          } catch (i) {
            this.destination.error(i);
          }
          (this.seed = n), this.destination.next(n);
        }
      }
      var Yc = n('mCNh');
      class $c {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class qc extends $c {
        constructor(t, e, n = 'imperative', i = null) {
          super(t, e), (this.navigationTrigger = n), (this.restoredState = i);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Wc extends $c {
        constructor(t, e, n) {
          super(t, e), (this.urlAfterRedirects = n);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class Kc extends $c {
        constructor(t, e, n) {
          super(t, e), (this.reason = n);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Qc extends $c {
        constructor(t, e, n) {
          super(t, e), (this.error = n);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class Zc extends $c {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Gc extends $c {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Xc extends $c {
        constructor(t, e, n, i, s) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i), (this.shouldActivate = s);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class Jc extends $c {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class tu extends $c {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class eu {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class nu {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class iu {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class su {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class ru {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class ou {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class au {
        constructor(t, e, n) {
          (this.routerEvent = t), (this.position = e), (this.anchor = n);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let lu = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = s.Ib({
            type: t,
            selectors: [['ng-component']],
            decls: 1,
            vars: 0,
            template: function (t, e) {
              1 & t && s.Pb(0, 'router-outlet');
            },
            directives: function () {
              return [md];
            },
            encapsulation: 2,
          })),
          t
        );
      })();
      class cu {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return this.params.hasOwnProperty(t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function uu(t) {
        return new cu(t);
      }
      function hu(t) {
        const e = Error('NavigationCancelingError: ' + t);
        return (e.ngNavigationCancelingError = !0), e;
      }
      function du(t, e, n) {
        const i = n.path.split('/');
        if (i.length > t.length) return null;
        if ('full' === n.pathMatch && (e.hasChildren() || i.length < t.length)) return null;
        const s = {};
        for (let r = 0; r < i.length; r++) {
          const e = i[r],
            n = t[r];
          if (e.startsWith(':')) s[e.substring(1)] = n;
          else if (e !== n.path) return null;
        }
        return { consumed: t.slice(0, i.length), posParams: s };
      }
      class pu {
        constructor(t, e) {
          (this.routes = t), (this.module = e);
        }
      }
      function mu(t, e = '') {
        for (let n = 0; n < t.length; n++) {
          const i = t[n];
          fu(i, gu(e, i));
        }
      }
      function fu(t, e) {
        if (!t)
          throw new Error(
            `\n      Invalid configuration of route '${e}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `
          );
        if (Array.isArray(t)) throw new Error(`Invalid configuration of route '${e}': Array cannot be specified`);
        if (!t.component && !t.children && !t.loadChildren && t.outlet && 'primary' !== t.outlet)
          throw new Error(
            `Invalid configuration of route '${e}': a componentless route without children or loadChildren cannot have a named outlet set`
          );
        if (t.redirectTo && t.children)
          throw new Error(`Invalid configuration of route '${e}': redirectTo and children cannot be used together`);
        if (t.redirectTo && t.loadChildren)
          throw new Error(`Invalid configuration of route '${e}': redirectTo and loadChildren cannot be used together`);
        if (t.children && t.loadChildren)
          throw new Error(`Invalid configuration of route '${e}': children and loadChildren cannot be used together`);
        if (t.redirectTo && t.component)
          throw new Error(`Invalid configuration of route '${e}': redirectTo and component cannot be used together`);
        if (t.path && t.matcher)
          throw new Error(`Invalid configuration of route '${e}': path and matcher cannot be used together`);
        if (void 0 === t.redirectTo && !t.component && !t.children && !t.loadChildren)
          throw new Error(
            `Invalid configuration of route '${e}'. One of the following must be provided: component, redirectTo, children or loadChildren`
          );
        if (void 0 === t.path && void 0 === t.matcher)
          throw new Error(
            `Invalid configuration of route '${e}': routes must have either a path or a matcher specified`
          );
        if ('string' == typeof t.path && '/' === t.path.charAt(0))
          throw new Error(`Invalid configuration of route '${e}': path cannot start with a slash`);
        if ('' === t.path && void 0 !== t.redirectTo && void 0 === t.pathMatch)
          throw new Error(
            `Invalid configuration of route '{path: "${e}", redirectTo: "${t.redirectTo}"}': please provide 'pathMatch'. The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`
          );
        if (void 0 !== t.pathMatch && 'full' !== t.pathMatch && 'prefix' !== t.pathMatch)
          throw new Error(`Invalid configuration of route '${e}': pathMatch can only be set to 'prefix' or 'full'`);
        t.children && mu(t.children, e);
      }
      function gu(t, e) {
        return e ? (t || e.path ? (t && !e.path ? t + '/' : !t && e.path ? e.path : `${t}/${e.path}`) : '') : t;
      }
      function bu(t) {
        const e = t.children && t.children.map(bu),
          n = e ? Object.assign(Object.assign({}, t), { children: e }) : Object.assign({}, t);
        return !n.component && (e || n.loadChildren) && n.outlet && 'primary' !== n.outlet && (n.component = lu), n;
      }
      function _u(t, e) {
        const n = Object.keys(t),
          i = Object.keys(e);
        if (!n || !i || n.length != i.length) return !1;
        let s;
        for (let r = 0; r < n.length; r++) if (((s = n[r]), !yu(t[s], e[s]))) return !1;
        return !0;
      }
      function yu(t, e) {
        return Array.isArray(t) && Array.isArray(e)
          ? t.length == e.length && t.every((t) => e.indexOf(t) > -1)
          : t === e;
      }
      function vu(t) {
        return Array.prototype.concat.apply([], t);
      }
      function wu(t) {
        return t.length > 0 ? t[t.length - 1] : null;
      }
      function xu(t, e) {
        for (const n in t) t.hasOwnProperty(n) && e(t[n], n);
      }
      function Cu(t) {
        return Object(s.sb)(t) ? t : Object(s.tb)(t) ? Object(u.a)(Promise.resolve(t)) : y(t);
      }
      function Su(t, e, n) {
        return n
          ? (function (t, e) {
              return _u(t, e);
            })(t.queryParams, e.queryParams) &&
              (function t(e, n) {
                if (!Au(e.segments, n.segments)) return !1;
                if (e.numberOfChildren !== n.numberOfChildren) return !1;
                for (const i in n.children) {
                  if (!e.children[i]) return !1;
                  if (!t(e.children[i], n.children[i])) return !1;
                }
                return !0;
              })(t.root, e.root)
          : (function (t, e) {
              return Object.keys(e).length <= Object.keys(t).length && Object.keys(e).every((n) => yu(t[n], e[n]));
            })(t.queryParams, e.queryParams) &&
              (function t(e, n) {
                return (function e(n, i, s) {
                  if (n.segments.length > s.length) return !!Au(n.segments.slice(0, s.length), s) && !i.hasChildren();
                  if (n.segments.length === s.length) {
                    if (!Au(n.segments, s)) return !1;
                    for (const e in i.children) {
                      if (!n.children[e]) return !1;
                      if (!t(n.children[e], i.children[e])) return !1;
                    }
                    return !0;
                  }
                  {
                    const t = s.slice(0, n.segments.length),
                      r = s.slice(n.segments.length);
                    return !!Au(n.segments, t) && !!n.children.primary && e(n.children.primary, i, r);
                  }
                })(e, n, n.segments);
              })(t.root, e.root);
      }
      class Eu {
        constructor(t, e, n) {
          (this.root = t), (this.queryParams = e), (this.fragment = n);
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = uu(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return Pu.serialize(this);
        }
      }
      class ku {
        constructor(t, e) {
          (this.segments = t), (this.children = e), (this.parent = null), xu(e, (t, e) => (t.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Du(this);
        }
      }
      class Ou {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return this._parameterMap || (this._parameterMap = uu(this.parameters)), this._parameterMap;
        }
        toString() {
          return Vu(this);
        }
      }
      function Au(t, e) {
        return t.length === e.length && t.every((t, n) => t.path === e[n].path);
      }
      function Tu(t, e) {
        let n = [];
        return (
          xu(t.children, (t, i) => {
            'primary' === i && (n = n.concat(e(t, i)));
          }),
          xu(t.children, (t, i) => {
            'primary' !== i && (n = n.concat(e(t, i)));
          }),
          n
        );
      }
      class Iu {}
      class Ru {
        parse(t) {
          const e = new Yu(t);
          return new Eu(e.parseRootSegment(), e.parseQueryParams(), e.parseFragment());
        }
        serialize(t) {
          return `${
            '/' +
            (function t(e, n) {
              if (!e.hasChildren()) return Du(e);
              if (n) {
                const n = e.children.primary ? t(e.children.primary, !1) : '',
                  i = [];
                return (
                  xu(e.children, (e, n) => {
                    'primary' !== n && i.push(`${n}:${t(e, !1)}`);
                  }),
                  i.length > 0 ? `${n}(${i.join('//')})` : n
                );
              }
              {
                const n = Tu(e, (n, i) => ('primary' === i ? [t(e.children.primary, !1)] : [`${i}:${t(n, !1)}`]));
                return `${Du(e)}/(${n.join('//')})`;
              }
            })(t.root, !0)
          }${(function (t) {
            const e = Object.keys(t).map((e) => {
              const n = t[e];
              return Array.isArray(n) ? n.map((t) => `${Lu(e)}=${Lu(t)}`).join('&') : `${Lu(e)}=${Lu(n)}`;
            });
            return e.length ? '?' + e.join('&') : '';
          })(t.queryParams)}${'string' == typeof t.fragment ? '#' + encodeURI(t.fragment) : ''}`;
        }
      }
      const Pu = new Ru();
      function Du(t) {
        return t.segments.map((t) => Vu(t)).join('/');
      }
      function ju(t) {
        return encodeURIComponent(t)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function Lu(t) {
        return ju(t).replace(/%3B/gi, ';');
      }
      function Mu(t) {
        return ju(t).replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/%26/gi, '&');
      }
      function Nu(t) {
        return decodeURIComponent(t);
      }
      function Fu(t) {
        return Nu(t.replace(/\+/g, '%20'));
      }
      function Vu(t) {
        return `${Mu(t.path)}${
          ((e = t.parameters),
          Object.keys(e)
            .map((t) => `;${Mu(t)}=${Mu(e[t])}`)
            .join(''))
        }`;
        var e;
      }
      const Hu = /^[^\/()?;=#]+/;
      function Bu(t) {
        const e = t.match(Hu);
        return e ? e[0] : '';
      }
      const Uu = /^[^=?&#]+/,
        zu = /^[^?&#]+/;
      class Yu {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining || this.peekStartsWith('?') || this.peekStartsWith('#')
              ? new ku([], {})
              : new ku([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional('&'));
          return t;
        }
        parseFragment() {
          return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const t = [];
          for (
            this.peekStartsWith('(') || t.push(this.parseSegment());
            this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(');

          )
            this.capture('/'), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith('/(') && (this.capture('/'), (e = this.parseParens(!0)));
          let n = {};
          return (
            this.peekStartsWith('(') && (n = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) && (n.primary = new ku(t, e)),
            n
          );
        }
        parseSegment() {
          const t = Bu(this.remaining);
          if ('' === t && this.peekStartsWith(';'))
            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);
          return this.capture(t), new Ou(Nu(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(';'); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = Bu(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = '';
          if (this.consumeOptional('=')) {
            const t = Bu(this.remaining);
            t && ((n = t), this.capture(n));
          }
          t[Nu(e)] = Nu(n);
        }
        parseQueryParam(t) {
          const e = (function (t) {
            const e = t.match(Uu);
            return e ? e[0] : '';
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = '';
          if (this.consumeOptional('=')) {
            const t = (function (t) {
              const e = t.match(zu);
              return e ? e[0] : '';
            })(this.remaining);
            t && ((n = t), this.capture(n));
          }
          const i = Fu(e),
            s = Fu(n);
          if (t.hasOwnProperty(i)) {
            let e = t[i];
            Array.isArray(e) || ((e = [e]), (t[i] = e)), e.push(s);
          } else t[i] = s;
        }
        parseParens(t) {
          const e = {};
          for (this.capture('('); !this.consumeOptional(')') && this.remaining.length > 0; ) {
            const n = Bu(this.remaining),
              i = this.remaining[n.length];
            if ('/' !== i && ')' !== i && ';' !== i) throw new Error(`Cannot parse url '${this.url}'`);
            let s = void 0;
            n.indexOf(':') > -1
              ? ((s = n.substr(0, n.indexOf(':'))), this.capture(s), this.capture(':'))
              : t && (s = 'primary');
            const r = this.parseChildren();
            (e[s] = 1 === Object.keys(r).length ? r.primary : new ku([], r)), this.consumeOptional('//');
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return !!this.peekStartsWith(t) && ((this.remaining = this.remaining.substring(t.length)), !0);
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new Error(`Expected "${t}".`);
        }
      }
      class $u {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = qu(t, this._root);
          return e ? e.children.map((t) => t.value) : [];
        }
        firstChild(t) {
          const e = qu(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = Wu(t, this._root);
          return e.length < 2 ? [] : e[e.length - 2].children.map((t) => t.value).filter((e) => e !== t);
        }
        pathFromRoot(t) {
          return Wu(t, this._root).map((t) => t.value);
        }
      }
      function qu(t, e) {
        if (t === e.value) return e;
        for (const n of e.children) {
          const e = qu(t, n);
          if (e) return e;
        }
        return null;
      }
      function Wu(t, e) {
        if (t === e.value) return [e];
        for (const n of e.children) {
          const i = Wu(t, n);
          if (i.length) return i.unshift(e), i;
        }
        return [];
      }
      class Ku {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Qu(t) {
        const e = {};
        return t && t.children.forEach((t) => (e[t.value.outlet] = t)), e;
      }
      class Zu extends $u {
        constructor(t, e) {
          super(t), (this.snapshot = e), nh(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Gu(t, e) {
        const n = (function (t, e) {
            const n = new th([], {}, {}, '', {}, 'primary', e, null, t.root, -1, {});
            return new eh('', new Ku(n, []));
          })(t, e),
          i = new uc([new Ou('', {})]),
          s = new uc({}),
          r = new uc({}),
          o = new uc({}),
          a = new uc(''),
          l = new Xu(i, s, o, a, r, 'primary', e, n.root);
        return (l.snapshot = n.root), new Zu(new Ku(l, []), n);
      }
      class Xu {
        constructor(t, e, n, i, s, r, o, a) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = s),
            (this.outlet = r),
            (this.component = o),
            (this._futureSnapshot = a);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = this.params.pipe(Object(l.a)((t) => uu(t)))), this._paramMap;
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(Object(l.a)((t) => uu(t)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;
        }
      }
      function Ju(t, e = 'emptyOnly') {
        const n = t.pathFromRoot;
        let i = 0;
        if ('always' !== e)
          for (i = n.length - 1; i >= 1; ) {
            const t = n[i],
              e = n[i - 1];
            if (t.routeConfig && '' === t.routeConfig.path) i--;
            else {
              if (e.component) break;
              i--;
            }
          }
        return (function (t) {
          return t.reduce(
            (t, e) => ({
              params: Object.assign(Object.assign({}, t.params), e.params),
              data: Object.assign(Object.assign({}, t.data), e.data),
              resolve: Object.assign(Object.assign({}, t.resolve), e._resolvedData),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(n.slice(i));
      }
      class th {
        constructor(t, e, n, i, s, r, o, a, l, c, u) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = s),
            (this.outlet = r),
            (this.component = o),
            (this.routeConfig = a),
            (this._urlSegment = l),
            (this._lastPathIndex = c),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = uu(this.params)), this._paramMap;
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = uu(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return `Route(url:'${this.url.map((t) => t.toString()).join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class eh extends $u {
        constructor(t, e) {
          super(e), (this.url = t), nh(this, e);
        }
        toString() {
          return ih(this._root);
        }
      }
      function nh(t, e) {
        (e.value._routerState = t), e.children.forEach((e) => nh(t, e));
      }
      function ih(t) {
        const e = t.children.length > 0 ? ` { ${t.children.map(ih).join(', ')} } ` : '';
        return `${t.value}${e}`;
      }
      function sh(t) {
        if (t.snapshot) {
          const e = t.snapshot,
            n = t._futureSnapshot;
          (t.snapshot = n),
            _u(e.queryParams, n.queryParams) || t.queryParams.next(n.queryParams),
            e.fragment !== n.fragment && t.fragment.next(n.fragment),
            _u(e.params, n.params) || t.params.next(n.params),
            (function (t, e) {
              if (t.length !== e.length) return !1;
              for (let n = 0; n < t.length; ++n) if (!_u(t[n], e[n])) return !1;
              return !0;
            })(e.url, n.url) || t.url.next(n.url),
            _u(e.data, n.data) || t.data.next(n.data);
        } else (t.snapshot = t._futureSnapshot), t.data.next(t._futureSnapshot.data);
      }
      function rh(t, e) {
        var n, i;
        return (
          _u(t.params, e.params) &&
          Au((n = t.url), (i = e.url)) &&
          n.every((t, e) => _u(t.parameters, i[e].parameters)) &&
          !(!t.parent != !e.parent) &&
          (!t.parent || rh(t.parent, e.parent))
        );
      }
      function oh(t) {
        return 'object' == typeof t && null != t && !t.outlets && !t.segmentPath;
      }
      function ah(t, e, n, i, s) {
        let r = {};
        return (
          i &&
            xu(i, (t, e) => {
              r[e] = Array.isArray(t) ? t.map((t) => '' + t) : '' + t;
            }),
          new Eu(
            n.root === t
              ? e
              : (function t(e, n, i) {
                  const s = {};
                  return (
                    xu(e.children, (e, r) => {
                      s[r] = e === n ? i : t(e, n, i);
                    }),
                    new ku(e.segments, s)
                  );
                })(n.root, t, e),
            r,
            s
          )
        );
      }
      class lh {
        constructor(t, e, n) {
          if (
            ((this.isAbsolute = t), (this.numberOfDoubleDots = e), (this.commands = n), t && n.length > 0 && oh(n[0]))
          )
            throw new Error('Root segment cannot have matrix parameters');
          const i = n.find((t) => 'object' == typeof t && null != t && t.outlets);
          if (i && i !== wu(n)) throw new Error('{outlets:{}} has to be the last command');
        }
        toRoot() {
          return this.isAbsolute && 1 === this.commands.length && '/' == this.commands[0];
        }
      }
      class ch {
        constructor(t, e, n) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = n);
        }
      }
      function uh(t) {
        return 'object' == typeof t && null != t && t.outlets ? t.outlets.primary : '' + t;
      }
      function hh(t, e, n) {
        if ((t || (t = new ku([], {})), 0 === t.segments.length && t.hasChildren())) return dh(t, e, n);
        const i = (function (t, e, n) {
            let i = 0,
              s = e;
            const r = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; s < t.segments.length; ) {
              if (i >= n.length) return r;
              const e = t.segments[s],
                o = uh(n[i]),
                a = i < n.length - 1 ? n[i + 1] : null;
              if (s > 0 && void 0 === o) break;
              if (o && a && 'object' == typeof a && void 0 === a.outlets) {
                if (!gh(o, a, e)) return r;
                i += 2;
              } else {
                if (!gh(o, {}, e)) return r;
                i++;
              }
              s++;
            }
            return { match: !0, pathIndex: s, commandIndex: i };
          })(t, e, n),
          s = n.slice(i.commandIndex);
        if (i.match && i.pathIndex < t.segments.length) {
          const e = new ku(t.segments.slice(0, i.pathIndex), {});
          return (e.children.primary = new ku(t.segments.slice(i.pathIndex), t.children)), dh(e, 0, s);
        }
        return i.match && 0 === s.length
          ? new ku(t.segments, {})
          : i.match && !t.hasChildren()
          ? ph(t, e, n)
          : i.match
          ? dh(t, 0, s)
          : ph(t, e, n);
      }
      function dh(t, e, n) {
        if (0 === n.length) return new ku(t.segments, {});
        {
          const i = (function (t) {
              return 'object' != typeof t[0] || void 0 === t[0].outlets ? { primary: t } : t[0].outlets;
            })(n),
            s = {};
          return (
            xu(i, (n, i) => {
              null !== n && (s[i] = hh(t.children[i], e, n));
            }),
            xu(t.children, (t, e) => {
              void 0 === i[e] && (s[e] = t);
            }),
            new ku(t.segments, s)
          );
        }
      }
      function ph(t, e, n) {
        const i = t.segments.slice(0, e);
        let s = 0;
        for (; s < n.length; ) {
          if ('object' == typeof n[s] && void 0 !== n[s].outlets) {
            const t = mh(n[s].outlets);
            return new ku(i, t);
          }
          if (0 === s && oh(n[0])) {
            i.push(new Ou(t.segments[e].path, n[0])), s++;
            continue;
          }
          const r = uh(n[s]),
            o = s < n.length - 1 ? n[s + 1] : null;
          r && o && oh(o) ? (i.push(new Ou(r, fh(o))), (s += 2)) : (i.push(new Ou(r, {})), s++);
        }
        return new ku(i, {});
      }
      function mh(t) {
        const e = {};
        return (
          xu(t, (t, n) => {
            null !== t && (e[n] = ph(new ku([], {}), 0, t));
          }),
          e
        );
      }
      function fh(t) {
        const e = {};
        return xu(t, (t, n) => (e[n] = '' + t)), e;
      }
      function gh(t, e, n) {
        return t == n.path && _u(e, n.parameters);
      }
      class bh {
        constructor(t, e, n, i) {
          (this.routeReuseStrategy = t), (this.futureState = e), (this.currState = n), (this.forwardEvent = i);
        }
        activate(t) {
          const e = this.futureState._root,
            n = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, n, t), sh(this.futureState.root), this.activateChildRoutes(e, n, t);
        }
        deactivateChildRoutes(t, e, n) {
          const i = Qu(e);
          t.children.forEach((t) => {
            const e = t.value.outlet;
            this.deactivateRoutes(t, i[e], n), delete i[e];
          }),
            xu(i, (t, e) => {
              this.deactivateRouteAndItsChildren(t, n);
            });
        }
        deactivateRoutes(t, e, n) {
          const i = t.value,
            s = e ? e.value : null;
          if (i === s)
            if (i.component) {
              const s = n.getContext(i.outlet);
              s && this.deactivateChildRoutes(t, e, s.children);
            } else this.deactivateChildRoutes(t, e, n);
          else s && this.deactivateRouteAndItsChildren(e, n);
        }
        deactivateRouteAndItsChildren(t, e) {
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const n = e.getContext(t.value.outlet);
          if (n && n.outlet) {
            const e = n.outlet.detach(),
              i = n.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, { componentRef: e, route: t, contexts: i });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const n = e.getContext(t.value.outlet);
          if (n) {
            const i = Qu(t),
              s = t.value.component ? n.children : e;
            xu(i, (t, e) => this.deactivateRouteAndItsChildren(t, s)),
              n.outlet && (n.outlet.deactivate(), n.children.onOutletDeactivated());
          }
        }
        activateChildRoutes(t, e, n) {
          const i = Qu(e);
          t.children.forEach((t) => {
            this.activateRoutes(t, i[t.value.outlet], n), this.forwardEvent(new ou(t.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new su(t.value.snapshot));
        }
        activateRoutes(t, e, n) {
          const i = t.value,
            s = e ? e.value : null;
          if ((sh(i), i === s))
            if (i.component) {
              const s = n.getOrCreateContext(i.outlet);
              this.activateChildRoutes(t, e, s.children);
            } else this.activateChildRoutes(t, e, n);
          else if (i.component) {
            const e = n.getOrCreateContext(i.outlet);
            if (this.routeReuseStrategy.shouldAttach(i.snapshot)) {
              const t = this.routeReuseStrategy.retrieve(i.snapshot);
              this.routeReuseStrategy.store(i.snapshot, null),
                e.children.onOutletReAttached(t.contexts),
                (e.attachRef = t.componentRef),
                (e.route = t.route.value),
                e.outlet && e.outlet.attach(t.componentRef, t.route.value),
                _h(t.route);
            } else {
              const n = (function (t) {
                  for (let e = t.parent; e; e = e.parent) {
                    const t = e.routeConfig;
                    if (t && t._loadedConfig) return t._loadedConfig;
                    if (t && t.component) return null;
                  }
                  return null;
                })(i.snapshot),
                s = n ? n.module.componentFactoryResolver : null;
              (e.attachRef = null),
                (e.route = i),
                (e.resolver = s),
                e.outlet && e.outlet.activateWith(i, s),
                this.activateChildRoutes(t, null, e.children);
            }
          } else this.activateChildRoutes(t, null, n);
        }
      }
      function _h(t) {
        sh(t.value), t.children.forEach(_h);
      }
      function yh(t) {
        return 'function' == typeof t;
      }
      function vh(t) {
        return t instanceof Eu;
      }
      class wh {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class xh {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function Ch(t) {
        return new o.a((e) => e.error(new wh(t)));
      }
      function Sh(t) {
        return new o.a((e) => e.error(new xh(t)));
      }
      function Eh(t) {
        return new o.a((e) => e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)));
      }
      class kh {
        constructor(t, e, n, i, r) {
          (this.configLoader = e),
            (this.urlSerializer = n),
            (this.urlTree = i),
            (this.config = r),
            (this.allowRedirects = !0),
            (this.ngModule = t.get(s.y));
        }
        apply() {
          return this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, 'primary')
            .pipe(Object(l.a)((t) => this.createUrlTree(t, this.urlTree.queryParams, this.urlTree.fragment)))
            .pipe(
              la((t) => {
                if (t instanceof xh) return (this.allowRedirects = !1), this.match(t.urlTree);
                if (t instanceof wh) throw this.noMatchError(t);
                throw t;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.ngModule, this.config, t.root, 'primary')
            .pipe(Object(l.a)((e) => this.createUrlTree(e, t.queryParams, t.fragment)))
            .pipe(
              la((t) => {
                if (t instanceof wh) throw this.noMatchError(t);
                throw t;
              })
            );
        }
        noMatchError(t) {
          return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`);
        }
        createUrlTree(t, e, n) {
          const i = t.segments.length > 0 ? new ku([], { primary: t }) : t;
          return new Eu(i, e, n);
        }
        expandSegmentGroup(t, e, n, i) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.expandChildren(t, e, n).pipe(Object(l.a)((t) => new ku([], t)))
            : this.expandSegment(t, n, e, n.segments, i, !0);
        }
        expandChildren(t, e, n) {
          return (function (t, e) {
            if (0 === Object.keys(t).length) return y({});
            const n = [],
              i = [],
              s = {};
            return (
              xu(t, (t, r) => {
                const o = e(r, t).pipe(Object(l.a)((t) => (s[r] = t)));
                'primary' === r ? n.push(o) : i.push(o);
              }),
              y.apply(null, n.concat(i)).pipe(
                ot(),
                Nc(),
                Object(l.a)(() => s)
              )
            );
          })(n.children, (n, i) => this.expandSegmentGroup(t, e, i, n));
        }
        expandSegment(t, e, n, i, s, r) {
          return y(...n).pipe(
            Object(l.a)((o) =>
              this.expandSegmentAgainstRoute(t, e, n, o, i, s, r).pipe(
                la((t) => {
                  if (t instanceof wh) return y(null);
                  throw t;
                })
              )
            ),
            ot(),
            Fc((t) => !!t),
            la((t, n) => {
              if (t instanceof Ec || 'EmptyError' === t.name) {
                if (this.noLeftoversInUrl(e, i, s)) return y(new ku([], {}));
                throw new wh(e);
              }
              throw t;
            })
          );
        }
        noLeftoversInUrl(t, e, n) {
          return 0 === e.length && !t.children[n];
        }
        expandSegmentAgainstRoute(t, e, n, i, s, r, o) {
          return Ih(i) !== r
            ? Ch(e)
            : void 0 === i.redirectTo
            ? this.matchSegmentAgainstRoute(t, e, i, s)
            : o && this.allowRedirects
            ? this.expandSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r)
            : Ch(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r) {
          return '**' === i.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, n, i, r)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r);
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, n, i) {
          const s = this.applyRedirectCommands([], n.redirectTo, {});
          return n.redirectTo.startsWith('/')
            ? Sh(s)
            : this.lineralizeSegments(n, s).pipe(
                Object(v.a)((n) => {
                  const s = new ku(n, {});
                  return this.expandSegment(t, s, e, n, i, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r) {
          const { matched: o, consumedSegments: a, lastChild: l, positionalParamSegments: c } = Oh(e, i, s);
          if (!o) return Ch(e);
          const u = this.applyRedirectCommands(a, i.redirectTo, c);
          return i.redirectTo.startsWith('/')
            ? Sh(u)
            : this.lineralizeSegments(i, u).pipe(
                Object(v.a)((i) => this.expandSegment(t, e, n, i.concat(s.slice(l)), r, !1))
              );
        }
        matchSegmentAgainstRoute(t, e, n, i) {
          if ('**' === n.path)
            return n.loadChildren
              ? this.configLoader.load(t.injector, n).pipe(Object(l.a)((t) => ((n._loadedConfig = t), new ku(i, {}))))
              : y(new ku(i, {}));
          const { matched: s, consumedSegments: r, lastChild: o } = Oh(e, n, i);
          if (!s) return Ch(e);
          const a = i.slice(o);
          return this.getChildConfig(t, n, i).pipe(
            Object(v.a)((t) => {
              const n = t.module,
                i = t.routes,
                { segmentGroup: s, slicedSegments: o } = (function (t, e, n, i) {
                  return n.length > 0 &&
                    (function (t, e, n) {
                      return n.some((n) => Th(t, e, n) && 'primary' !== Ih(n));
                    })(t, n, i)
                    ? {
                        segmentGroup: Ah(
                          new ku(
                            e,
                            (function (t, e) {
                              const n = {};
                              n.primary = e;
                              for (const i of t) '' === i.path && 'primary' !== Ih(i) && (n[Ih(i)] = new ku([], {}));
                              return n;
                            })(i, new ku(n, t.children))
                          )
                        ),
                        slicedSegments: [],
                      }
                    : 0 === n.length &&
                      (function (t, e, n) {
                        return n.some((n) => Th(t, e, n));
                      })(t, n, i)
                    ? {
                        segmentGroup: Ah(
                          new ku(
                            t.segments,
                            (function (t, e, n, i) {
                              const s = {};
                              for (const r of n) Th(t, e, r) && !i[Ih(r)] && (s[Ih(r)] = new ku([], {}));
                              return Object.assign(Object.assign({}, i), s);
                            })(t, n, i, t.children)
                          )
                        ),
                        slicedSegments: n,
                      }
                    : { segmentGroup: t, slicedSegments: n };
                })(e, r, a, i);
              return 0 === o.length && s.hasChildren()
                ? this.expandChildren(n, i, s).pipe(Object(l.a)((t) => new ku(r, t)))
                : 0 === i.length && 0 === o.length
                ? y(new ku(r, {}))
                : this.expandSegment(n, s, i, o, 'primary', !0).pipe(
                    Object(l.a)((t) => new ku(r.concat(t.segments), t.children))
                  );
            })
          );
        }
        getChildConfig(t, e, n) {
          return e.children
            ? y(new pu(e.children, t))
            : e.loadChildren
            ? void 0 !== e._loadedConfig
              ? y(e._loadedConfig)
              : (function (t, e, n) {
                  const i = e.canLoad;
                  return i && 0 !== i.length
                    ? Object(u.a)(i)
                        .pipe(
                          Object(l.a)((i) => {
                            const s = t.get(i);
                            let r;
                            if (
                              (function (t) {
                                return t && yh(t.canLoad);
                              })(s)
                            )
                              r = s.canLoad(e, n);
                            else {
                              if (!yh(s)) throw new Error('Invalid CanLoad guard');
                              r = s(e, n);
                            }
                            return Cu(r);
                          })
                        )
                        .pipe(ot(), ((s = (t) => !0 === t), (t) => t.lift(new Vc(s, void 0, t))))
                    : y(!0);
                  var s;
                })(t.injector, e, n).pipe(
                  Object(v.a)((n) =>
                    n
                      ? this.configLoader.load(t.injector, e).pipe(Object(l.a)((t) => ((e._loadedConfig = t), t)))
                      : (function (t) {
                          return new o.a((e) =>
                            e.error(
                              hu(
                                `Cannot load children because the guard of the route "path: '${t.path}'" returned false`
                              )
                            )
                          );
                        })(e)
                  )
                )
            : y(new pu([], t));
        }
        lineralizeSegments(t, e) {
          let n = [],
            i = e.root;
          for (;;) {
            if (((n = n.concat(i.segments)), 0 === i.numberOfChildren)) return y(n);
            if (i.numberOfChildren > 1 || !i.children.primary) return Eh(t.redirectTo);
            i = i.children.primary;
          }
        }
        applyRedirectCommands(t, e, n) {
          return this.applyRedirectCreatreUrlTree(e, this.urlSerializer.parse(e), t, n);
        }
        applyRedirectCreatreUrlTree(t, e, n, i) {
          const s = this.createSegmentGroup(t, e.root, n, i);
          return new Eu(s, this.createQueryParams(e.queryParams, this.urlTree.queryParams), e.fragment);
        }
        createQueryParams(t, e) {
          const n = {};
          return (
            xu(t, (t, i) => {
              if ('string' == typeof t && t.startsWith(':')) {
                const s = t.substring(1);
                n[i] = e[s];
              } else n[i] = t;
            }),
            n
          );
        }
        createSegmentGroup(t, e, n, i) {
          const s = this.createSegments(t, e.segments, n, i);
          let r = {};
          return (
            xu(e.children, (e, s) => {
              r[s] = this.createSegmentGroup(t, e, n, i);
            }),
            new ku(s, r)
          );
        }
        createSegments(t, e, n, i) {
          return e.map((e) => (e.path.startsWith(':') ? this.findPosParam(t, e, i) : this.findOrReturn(e, n)));
        }
        findPosParam(t, e, n) {
          const i = n[e.path.substring(1)];
          if (!i) throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);
          return i;
        }
        findOrReturn(t, e) {
          let n = 0;
          for (const i of e) {
            if (i.path === t.path) return e.splice(n), i;
            n++;
          }
          return t;
        }
      }
      function Oh(t, e, n) {
        if ('' === e.path)
          return 'full' === e.pathMatch && (t.hasChildren() || n.length > 0)
            ? { matched: !1, consumedSegments: [], lastChild: 0, positionalParamSegments: {} }
            : { matched: !0, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };
        const i = (e.matcher || du)(n, t, e);
        return i
          ? {
              matched: !0,
              consumedSegments: i.consumed,
              lastChild: i.consumed.length,
              positionalParamSegments: i.posParams,
            }
          : { matched: !1, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };
      }
      function Ah(t) {
        if (1 === t.numberOfChildren && t.children.primary) {
          const e = t.children.primary;
          return new ku(t.segments.concat(e.segments), e.children);
        }
        return t;
      }
      function Th(t, e, n) {
        return (
          (!(t.hasChildren() || e.length > 0) || 'full' !== n.pathMatch) && '' === n.path && void 0 !== n.redirectTo
        );
      }
      function Ih(t) {
        return t.outlet || 'primary';
      }
      class Rh {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Ph {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function Dh(t, e, n) {
        const i = t._root;
        return (function t(e, n, i, s, r = { canDeactivateChecks: [], canActivateChecks: [] }) {
          const o = Qu(n);
          return (
            e.children.forEach((e) => {
              !(function (e, n, i, s, r = { canDeactivateChecks: [], canActivateChecks: [] }) {
                const o = e.value,
                  a = n ? n.value : null,
                  l = i ? i.getContext(e.value.outlet) : null;
                if (a && o.routeConfig === a.routeConfig) {
                  const c = (function (t, e, n) {
                    if ('function' == typeof n) return n(t, e);
                    switch (n) {
                      case 'pathParamsChange':
                        return !Au(t.url, e.url);
                      case 'pathParamsOrQueryParamsChange':
                        return !Au(t.url, e.url) || !_u(t.queryParams, e.queryParams);
                      case 'always':
                        return !0;
                      case 'paramsOrQueryParamsChange':
                        return !rh(t, e) || !_u(t.queryParams, e.queryParams);
                      case 'paramsChange':
                      default:
                        return !rh(t, e);
                    }
                  })(a, o, o.routeConfig.runGuardsAndResolvers);
                  c ? r.canActivateChecks.push(new Rh(s)) : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
                    t(e, n, o.component ? (l ? l.children : null) : i, s, r),
                    c && r.canDeactivateChecks.push(new Ph((l && l.outlet && l.outlet.component) || null, a));
                } else
                  a && Lh(n, l, r),
                    r.canActivateChecks.push(new Rh(s)),
                    t(e, null, o.component ? (l ? l.children : null) : i, s, r);
              })(e, o[e.value.outlet], i, s.concat([e.value]), r),
                delete o[e.value.outlet];
            }),
            xu(o, (t, e) => Lh(t, i.getContext(e), r)),
            r
          );
        })(i, e ? e._root : null, n, [i.value]);
      }
      function jh(t, e, n) {
        const i = (function (t) {
          if (!t) return null;
          for (let e = t.parent; e; e = e.parent) {
            const t = e.routeConfig;
            if (t && t._loadedConfig) return t._loadedConfig;
          }
          return null;
        })(e);
        return (i ? i.module.injector : n).get(t);
      }
      function Lh(t, e, n) {
        const i = Qu(t),
          s = t.value;
        xu(i, (t, i) => {
          Lh(t, s.component ? (e ? e.children.getContext(i) : null) : e, n);
        }),
          n.canDeactivateChecks.push(
            new Ph(s.component && e && e.outlet && e.outlet.isActivated ? e.outlet.component : null, s)
          );
      }
      const Mh = Symbol('INITIAL_VALUE');
      function Nh() {
        return Nt((t) =>
          (function (...t) {
            let e = null,
              n = null;
            return (
              Object(g.a)(t[t.length - 1]) && (n = t.pop()),
              'function' == typeof t[t.length - 1] && (e = t.pop()),
              1 === t.length && Object(a.a)(t[0]) && (t = t[0]),
              Object(b.a)(t, n).lift(new fl(e))
            );
          })(...t.map((t) => t.pipe(dt(1), ws(Mh)))).pipe(
            Bc((t, e) => {
              let n = !1;
              return e.reduce((t, i, s) => {
                if (t !== Mh) return t;
                if ((i === Mh && (n = !0), !n)) {
                  if (!1 === i) return i;
                  if (s === e.length - 1 || vh(i)) return i;
                }
                return t;
              }, t);
            }, Mh),
            C((t) => t !== Mh),
            Object(l.a)((t) => (vh(t) ? t : !0 === t)),
            dt(1)
          )
        );
      }
      function Fh(t, e) {
        return null !== t && e && e(new ru(t)), y(!0);
      }
      function Vh(t, e) {
        return null !== t && e && e(new iu(t)), y(!0);
      }
      function Hh(t, e, n) {
        const i = e.routeConfig ? e.routeConfig.canActivate : null;
        return i && 0 !== i.length
          ? y(
              i.map((i) =>
                ut(() => {
                  const s = jh(i, e, n);
                  let r;
                  if (
                    (function (t) {
                      return t && yh(t.canActivate);
                    })(s)
                  )
                    r = Cu(s.canActivate(e, t));
                  else {
                    if (!yh(s)) throw new Error('Invalid CanActivate guard');
                    r = Cu(s(e, t));
                  }
                  return r.pipe(Fc());
                })
              )
            ).pipe(Nh())
          : y(!0);
      }
      function Bh(t, e, n) {
        const i = e[e.length - 1],
          s = e
            .slice(0, e.length - 1)
            .reverse()
            .map((t) =>
              (function (t) {
                const e = t.routeConfig ? t.routeConfig.canActivateChild : null;
                return e && 0 !== e.length ? { node: t, guards: e } : null;
              })(t)
            )
            .filter((t) => null !== t)
            .map((e) =>
              ut(() =>
                y(
                  e.guards.map((s) => {
                    const r = jh(s, e.node, n);
                    let o;
                    if (
                      (function (t) {
                        return t && yh(t.canActivateChild);
                      })(r)
                    )
                      o = Cu(r.canActivateChild(i, t));
                    else {
                      if (!yh(r)) throw new Error('Invalid CanActivateChild guard');
                      o = Cu(r(i, t));
                    }
                    return o.pipe(Fc());
                  })
                ).pipe(Nh())
              )
            );
        return y(s).pipe(Nh());
      }
      class Uh {}
      class zh {
        constructor(t, e, n, i, s, r) {
          (this.rootComponentType = t),
            (this.config = e),
            (this.urlTree = n),
            (this.url = i),
            (this.paramsInheritanceStrategy = s),
            (this.relativeLinkResolution = r);
        }
        recognize() {
          try {
            const t = qh(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup,
              e = this.processSegmentGroup(this.config, t, 'primary'),
              n = new th(
                [],
                Object.freeze({}),
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                {},
                'primary',
                this.rootComponentType,
                null,
                this.urlTree.root,
                -1,
                {}
              ),
              i = new Ku(n, e),
              s = new eh(this.url, i);
            return this.inheritParamsAndData(s._root), y(s);
          } catch (t) {
            return new o.a((e) => e.error(t));
          }
        }
        inheritParamsAndData(t) {
          const e = t.value,
            n = Ju(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(n.params)),
            (e.data = Object.freeze(n.data)),
            t.children.forEach((t) => this.inheritParamsAndData(t));
        }
        processSegmentGroup(t, e, n) {
          return 0 === e.segments.length && e.hasChildren()
            ? this.processChildren(t, e)
            : this.processSegment(t, e, e.segments, n);
        }
        processChildren(t, e) {
          const n = Tu(e, (e, n) => this.processSegmentGroup(t, e, n));
          return (
            (function (t) {
              const e = {};
              t.forEach((t) => {
                const n = e[t.value.outlet];
                if (n) {
                  const e = n.url.map((t) => t.toString()).join('/'),
                    i = t.value.url.map((t) => t.toString()).join('/');
                  throw new Error(`Two segments cannot have the same outlet name: '${e}' and '${i}'.`);
                }
                e[t.value.outlet] = t.value;
              });
            })(n),
            n.sort((t, e) =>
              'primary' === t.value.outlet
                ? -1
                : 'primary' === e.value.outlet
                ? 1
                : t.value.outlet.localeCompare(e.value.outlet)
            ),
            n
          );
        }
        processSegment(t, e, n, i) {
          for (const r of t)
            try {
              return this.processSegmentAgainstRoute(r, e, n, i);
            } catch (s) {
              if (!(s instanceof Uh)) throw s;
            }
          if (this.noLeftoversInUrl(e, n, i)) return [];
          throw new Uh();
        }
        noLeftoversInUrl(t, e, n) {
          return 0 === e.length && !t.children[n];
        }
        processSegmentAgainstRoute(t, e, n, i) {
          if (t.redirectTo) throw new Uh();
          if ((t.outlet || 'primary') !== i) throw new Uh();
          let s,
            r = [],
            o = [];
          if ('**' === t.path) {
            const r = n.length > 0 ? wu(n).parameters : {};
            s = new th(
              n,
              r,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              Qh(t),
              i,
              t.component,
              t,
              Yh(e),
              $h(e) + n.length,
              Zh(t)
            );
          } else {
            const a = (function (t, e, n) {
              if ('' === e.path) {
                if ('full' === e.pathMatch && (t.hasChildren() || n.length > 0)) throw new Uh();
                return { consumedSegments: [], lastChild: 0, parameters: {} };
              }
              const i = (e.matcher || du)(n, t, e);
              if (!i) throw new Uh();
              const s = {};
              xu(i.posParams, (t, e) => {
                s[e] = t.path;
              });
              const r =
                i.consumed.length > 0
                  ? Object.assign(Object.assign({}, s), i.consumed[i.consumed.length - 1].parameters)
                  : s;
              return { consumedSegments: i.consumed, lastChild: i.consumed.length, parameters: r };
            })(e, t, n);
            (r = a.consumedSegments),
              (o = n.slice(a.lastChild)),
              (s = new th(
                r,
                a.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                Qh(t),
                i,
                t.component,
                t,
                Yh(e),
                $h(e) + r.length,
                Zh(t)
              ));
          }
          const a = (function (t) {
              return t.children ? t.children : t.loadChildren ? t._loadedConfig.routes : [];
            })(t),
            { segmentGroup: l, slicedSegments: c } = qh(e, r, o, a, this.relativeLinkResolution);
          if (0 === c.length && l.hasChildren()) {
            const t = this.processChildren(a, l);
            return [new Ku(s, t)];
          }
          if (0 === a.length && 0 === c.length) return [new Ku(s, [])];
          const u = this.processSegment(a, l, c, 'primary');
          return [new Ku(s, u)];
        }
      }
      function Yh(t) {
        let e = t;
        for (; e._sourceSegment; ) e = e._sourceSegment;
        return e;
      }
      function $h(t) {
        let e = t,
          n = e._segmentIndexShift ? e._segmentIndexShift : 0;
        for (; e._sourceSegment; ) (e = e._sourceSegment), (n += e._segmentIndexShift ? e._segmentIndexShift : 0);
        return n - 1;
      }
      function qh(t, e, n, i, s) {
        if (
          n.length > 0 &&
          (function (t, e, n) {
            return n.some((n) => Wh(t, e, n) && 'primary' !== Kh(n));
          })(t, n, i)
        ) {
          const s = new ku(
            e,
            (function (t, e, n, i) {
              const s = {};
              (s.primary = i), (i._sourceSegment = t), (i._segmentIndexShift = e.length);
              for (const r of n)
                if ('' === r.path && 'primary' !== Kh(r)) {
                  const n = new ku([], {});
                  (n._sourceSegment = t), (n._segmentIndexShift = e.length), (s[Kh(r)] = n);
                }
              return s;
            })(t, e, i, new ku(n, t.children))
          );
          return (s._sourceSegment = t), (s._segmentIndexShift = e.length), { segmentGroup: s, slicedSegments: [] };
        }
        if (
          0 === n.length &&
          (function (t, e, n) {
            return n.some((n) => Wh(t, e, n));
          })(t, n, i)
        ) {
          const r = new ku(
            t.segments,
            (function (t, e, n, i, s, r) {
              const o = {};
              for (const a of i)
                if (Wh(t, n, a) && !s[Kh(a)]) {
                  const n = new ku([], {});
                  (n._sourceSegment = t),
                    (n._segmentIndexShift = 'legacy' === r ? t.segments.length : e.length),
                    (o[Kh(a)] = n);
                }
              return Object.assign(Object.assign({}, s), o);
            })(t, e, n, i, t.children, s)
          );
          return (r._sourceSegment = t), (r._segmentIndexShift = e.length), { segmentGroup: r, slicedSegments: n };
        }
        const r = new ku(t.segments, t.children);
        return (r._sourceSegment = t), (r._segmentIndexShift = e.length), { segmentGroup: r, slicedSegments: n };
      }
      function Wh(t, e, n) {
        return (
          (!(t.hasChildren() || e.length > 0) || 'full' !== n.pathMatch) && '' === n.path && void 0 === n.redirectTo
        );
      }
      function Kh(t) {
        return t.outlet || 'primary';
      }
      function Qh(t) {
        return t.data || {};
      }
      function Zh(t) {
        return t.resolve || {};
      }
      function Gh(t, e, n, i) {
        const s = jh(t, e, i);
        return Cu(s.resolve ? s.resolve(e, n) : s(e, n));
      }
      function Xh(t) {
        return function (e) {
          return e.pipe(
            Nt((e) => {
              const n = t(e);
              return n ? Object(u.a)(n).pipe(Object(l.a)(() => e)) : Object(u.a)([e]);
            })
          );
        };
      }
      class Jh {}
      class td {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      }
      const ed = new s.r('ROUTES');
      class nd {
        constructor(t, e, n, i) {
          (this.loader = t), (this.compiler = e), (this.onLoadStartListener = n), (this.onLoadEndListener = i);
        }
        load(t, e) {
          return (
            this.onLoadStartListener && this.onLoadStartListener(e),
            this.loadModuleFactory(e.loadChildren).pipe(
              Object(l.a)((n) => {
                this.onLoadEndListener && this.onLoadEndListener(e);
                const i = n.create(t);
                return new pu(vu(i.injector.get(ed)).map(bu), i);
              })
            )
          );
        }
        loadModuleFactory(t) {
          return 'string' == typeof t
            ? Object(u.a)(this.loader.load(t))
            : Cu(t()).pipe(
                Object(v.a)((t) => (t instanceof s.w ? y(t) : Object(u.a)(this.compiler.compileModuleAsync(t))))
              );
        }
      }
      class id {
        shouldProcessUrl(t) {
          return !0;
        }
        extract(t) {
          return t;
        }
        merge(t, e) {
          return t;
        }
      }
      function sd(t) {
        throw t;
      }
      function rd(t, e, n) {
        return e.parse('/');
      }
      function od(t, e) {
        return y(null);
      }
      let ad = (() => {
          class t {
            constructor(t, e, n, i, r, o, a, l) {
              (this.rootComponentType = t),
                (this.urlSerializer = e),
                (this.rootContexts = n),
                (this.location = i),
                (this.config = l),
                (this.lastSuccessfulNavigation = null),
                (this.currentNavigation = null),
                (this.navigationId = 0),
                (this.isNgZoneEnabled = !1),
                (this.events = new ft.a()),
                (this.errorHandler = sd),
                (this.malformedUriErrorHandler = rd),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.hooks = { beforePreactivation: od, afterPreactivation: od }),
                (this.urlHandlingStrategy = new id()),
                (this.routeReuseStrategy = new td()),
                (this.onSameUrlNavigation = 'ignore'),
                (this.paramsInheritanceStrategy = 'emptyOnly'),
                (this.urlUpdateStrategy = 'deferred'),
                (this.relativeLinkResolution = 'legacy'),
                (this.ngModule = r.get(s.y)),
                (this.console = r.get(s.Z));
              const c = r.get(s.A);
              (this.isNgZoneEnabled = c instanceof s.A),
                this.resetConfig(l),
                (this.currentUrlTree = new Eu(new ku([], {}), {}, null)),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.configLoader = new nd(
                  o,
                  a,
                  (t) => this.triggerEvent(new eu(t)),
                  (t) => this.triggerEvent(new nu(t))
                )),
                (this.routerState = Gu(this.currentUrlTree, this.rootComponentType)),
                (this.transitions = new uc({
                  id: 0,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                  urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                  rawUrl: this.currentUrlTree,
                  extras: {},
                  resolve: null,
                  reject: null,
                  promise: Promise.resolve(!0),
                  source: 'imperative',
                  restoredState: null,
                  currentSnapshot: this.routerState.snapshot,
                  targetSnapshot: null,
                  currentRouterState: this.routerState,
                  targetRouterState: null,
                  guards: { canActivateChecks: [], canDeactivateChecks: [] },
                  guardsResult: null,
                })),
                (this.navigations = this.setupNavigations(this.transitions)),
                this.processNavigations();
            }
            setupNavigations(t) {
              const e = this.events;
              return t.pipe(
                C((t) => 0 !== t.id),
                Object(l.a)((t) =>
                  Object.assign(Object.assign({}, t), { extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl) })
                ),
                Nt((t) => {
                  let n = !1,
                    i = !1;
                  return y(t).pipe(
                    ji((t) => {
                      this.currentNavigation = {
                        id: t.id,
                        initialUrl: t.currentRawUrl,
                        extractedUrl: t.extractedUrl,
                        trigger: t.source,
                        extras: t.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? Object.assign(Object.assign({}, this.lastSuccessfulNavigation), {
                              previousNavigation: null,
                            })
                          : null,
                      };
                    }),
                    Nt((t) => {
                      const n = !this.navigated || t.extractedUrl.toString() !== this.browserUrlTree.toString();
                      if (
                        ('reload' === this.onSameUrlNavigation || n) &&
                        this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)
                      )
                        return y(t).pipe(
                          Nt((t) => {
                            const n = this.transitions.getValue();
                            return (
                              e.next(new qc(t.id, this.serializeUrl(t.extractedUrl), t.source, t.restoredState)),
                              n !== this.transitions.getValue() ? lt : [t]
                            );
                          }),
                          Nt((t) => Promise.resolve(t)),
                          ((i = this.ngModule.injector),
                          (s = this.configLoader),
                          (r = this.urlSerializer),
                          (o = this.config),
                          function (t) {
                            return t.pipe(
                              Nt((t) =>
                                (function (t, e, n, i, s) {
                                  return new kh(t, e, n, i, s).apply();
                                })(i, s, r, t.extractedUrl, o).pipe(
                                  Object(l.a)((e) => Object.assign(Object.assign({}, t), { urlAfterRedirects: e }))
                                )
                              )
                            );
                          }),
                          ji((t) => {
                            this.currentNavigation = Object.assign(Object.assign({}, this.currentNavigation), {
                              finalUrl: t.urlAfterRedirects,
                            });
                          }),
                          (function (t, e, n, i, s) {
                            return function (r) {
                              return r.pipe(
                                Object(v.a)((r) =>
                                  (function (t, e, n, i, s = 'emptyOnly', r = 'legacy') {
                                    return new zh(t, e, n, i, s, r).recognize();
                                  })(t, e, r.urlAfterRedirects, n(r.urlAfterRedirects), i, s).pipe(
                                    Object(l.a)((t) => Object.assign(Object.assign({}, r), { targetSnapshot: t }))
                                  )
                                )
                              );
                            };
                          })(
                            this.rootComponentType,
                            this.config,
                            (t) => this.serializeUrl(t),
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          ji((t) => {
                            'eager' === this.urlUpdateStrategy &&
                              (t.extras.skipLocationChange ||
                                this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state),
                              (this.browserUrlTree = t.urlAfterRedirects));
                          }),
                          ji((t) => {
                            const n = new Zc(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            e.next(n);
                          })
                        );
                      var i, s, r, o;
                      if (n && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
                        const { id: n, extractedUrl: i, source: s, restoredState: r, extras: o } = t,
                          a = new qc(n, this.serializeUrl(i), s, r);
                        e.next(a);
                        const l = Gu(i, this.rootComponentType).snapshot;
                        return y(
                          Object.assign(Object.assign({}, t), {
                            targetSnapshot: l,
                            urlAfterRedirects: i,
                            extras: Object.assign(Object.assign({}, o), { skipLocationChange: !1, replaceUrl: !1 }),
                          })
                        );
                      }
                      return (
                        (this.rawUrlTree = t.rawUrl), (this.browserUrlTree = t.urlAfterRedirects), t.resolve(null), lt
                      );
                    }),
                    Xh((t) => {
                      const {
                        targetSnapshot: e,
                        id: n,
                        extractedUrl: i,
                        rawUrl: s,
                        extras: { skipLocationChange: r, replaceUrl: o },
                      } = t;
                      return this.hooks.beforePreactivation(e, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: s,
                        skipLocationChange: !!r,
                        replaceUrl: !!o,
                      });
                    }),
                    ji((t) => {
                      const e = new Gc(
                        t.id,
                        this.serializeUrl(t.extractedUrl),
                        this.serializeUrl(t.urlAfterRedirects),
                        t.targetSnapshot
                      );
                      this.triggerEvent(e);
                    }),
                    Object(l.a)((t) =>
                      Object.assign(Object.assign({}, t), {
                        guards: Dh(t.targetSnapshot, t.currentSnapshot, this.rootContexts),
                      })
                    ),
                    (function (t, e) {
                      return function (n) {
                        return n.pipe(
                          Object(v.a)((n) => {
                            const {
                              targetSnapshot: i,
                              currentSnapshot: s,
                              guards: { canActivateChecks: r, canDeactivateChecks: o },
                            } = n;
                            return 0 === o.length && 0 === r.length
                              ? y(Object.assign(Object.assign({}, n), { guardsResult: !0 }))
                              : (function (t, e, n, i) {
                                  return Object(u.a)(t).pipe(
                                    Object(v.a)((t) =>
                                      (function (t, e, n, i, s) {
                                        const r = e && e.routeConfig ? e.routeConfig.canDeactivate : null;
                                        return r && 0 !== r.length
                                          ? y(
                                              r.map((r) => {
                                                const o = jh(r, e, s);
                                                let a;
                                                if (
                                                  (function (t) {
                                                    return t && yh(t.canDeactivate);
                                                  })(o)
                                                )
                                                  a = Cu(o.canDeactivate(t, e, n, i));
                                                else {
                                                  if (!yh(o)) throw new Error('Invalid CanDeactivate guard');
                                                  a = Cu(o(t, e, n, i));
                                                }
                                                return a.pipe(Fc());
                                              })
                                            ).pipe(Nh())
                                          : y(!0);
                                      })(t.component, t.route, n, e, i)
                                    ),
                                    Fc((t) => !0 !== t, !0)
                                  );
                                })(o, i, s, t).pipe(
                                  Object(v.a)((n) =>
                                    n && 'boolean' == typeof n
                                      ? (function (t, e, n, i) {
                                          return Object(u.a)(e).pipe(
                                            w((e) =>
                                              Object(u.a)([
                                                Vh(e.route.parent, i),
                                                Fh(e.route, i),
                                                Bh(t, e.path, n),
                                                Hh(t, e.route, n),
                                              ]).pipe(
                                                ot(),
                                                Fc((t) => !0 !== t, !0)
                                              )
                                            ),
                                            Fc((t) => !0 !== t, !0)
                                          );
                                        })(i, r, t, e)
                                      : y(n)
                                  ),
                                  Object(l.a)((t) => Object.assign(Object.assign({}, n), { guardsResult: t }))
                                );
                          })
                        );
                      };
                    })(this.ngModule.injector, (t) => this.triggerEvent(t)),
                    ji((t) => {
                      if (vh(t.guardsResult)) {
                        const e = hu(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);
                        throw ((e.url = t.guardsResult), e);
                      }
                    }),
                    ji((t) => {
                      const e = new Xc(
                        t.id,
                        this.serializeUrl(t.extractedUrl),
                        this.serializeUrl(t.urlAfterRedirects),
                        t.targetSnapshot,
                        !!t.guardsResult
                      );
                      this.triggerEvent(e);
                    }),
                    C((t) => {
                      if (!t.guardsResult) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new Kc(t.id, this.serializeUrl(t.extractedUrl), '');
                        return e.next(n), t.resolve(!1), !1;
                      }
                      return !0;
                    }),
                    Xh((t) => {
                      if (t.guards.canActivateChecks.length)
                        return y(t).pipe(
                          ji((t) => {
                            const e = new Jc(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            this.triggerEvent(e);
                          }),
                          ((e = this.paramsInheritanceStrategy),
                          (n = this.ngModule.injector),
                          function (t) {
                            return t.pipe(
                              Object(v.a)((t) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: s },
                                } = t;
                                return s.length
                                  ? Object(u.a)(s).pipe(
                                      w((t) =>
                                        (function (t, e, n, i) {
                                          return (function (t, e, n, i) {
                                            const s = Object.keys(t);
                                            if (0 === s.length) return y({});
                                            if (1 === s.length) {
                                              const r = s[0];
                                              return Gh(t[r], e, n, i).pipe(Object(l.a)((t) => ({ [r]: t })));
                                            }
                                            const r = {};
                                            return Object(u.a)(s)
                                              .pipe(
                                                Object(v.a)((s) =>
                                                  Gh(t[s], e, n, i).pipe(Object(l.a)((t) => ((r[s] = t), t)))
                                                )
                                              )
                                              .pipe(
                                                Nc(),
                                                Object(l.a)(() => r)
                                              );
                                          })(t._resolve, t, e, i).pipe(
                                            Object(l.a)(
                                              (e) => (
                                                (t._resolvedData = e),
                                                (t.data = Object.assign(Object.assign({}, t.data), Ju(t, n).resolve)),
                                                null
                                              )
                                            )
                                          );
                                        })(t.route, i, e, n)
                                      ),
                                      (function (t, e) {
                                        return arguments.length >= 2
                                          ? function (n) {
                                              return Object(Yc.a)(Bc(t, e), kc(1), Dc(e))(n);
                                            }
                                          : function (e) {
                                              return Object(Yc.a)(
                                                Bc((e, n, i) => t(e, n, i + 1)),
                                                kc(1)
                                              )(e);
                                            };
                                      })((t, e) => t),
                                      Object(l.a)((e) => t)
                                    )
                                  : y(t);
                              })
                            );
                          }),
                          ji((t) => {
                            const e = new tu(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            this.triggerEvent(e);
                          })
                        );
                      var e, n;
                    }),
                    Xh((t) => {
                      const {
                        targetSnapshot: e,
                        id: n,
                        extractedUrl: i,
                        rawUrl: s,
                        extras: { skipLocationChange: r, replaceUrl: o },
                      } = t;
                      return this.hooks.afterPreactivation(e, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: s,
                        skipLocationChange: !!r,
                        replaceUrl: !!o,
                      });
                    }),
                    Object(l.a)((t) => {
                      const e = (function (t, e, n) {
                        const i = (function t(e, n, i) {
                          if (i && e.shouldReuseRoute(n.value, i.value.snapshot)) {
                            const s = i.value;
                            s._futureSnapshot = n.value;
                            const r = (function (e, n, i) {
                              return n.children.map((n) => {
                                for (const s of i.children)
                                  if (e.shouldReuseRoute(s.value.snapshot, n.value)) return t(e, n, s);
                                return t(e, n);
                              });
                            })(e, n, i);
                            return new Ku(s, r);
                          }
                          {
                            const i = e.retrieve(n.value);
                            if (i) {
                              const t = i.route;
                              return (
                                (function t(e, n) {
                                  if (e.value.routeConfig !== n.value.routeConfig)
                                    throw new Error(
                                      'Cannot reattach ActivatedRouteSnapshot created from a different route'
                                    );
                                  if (e.children.length !== n.children.length)
                                    throw new Error(
                                      'Cannot reattach ActivatedRouteSnapshot with a different number of children'
                                    );
                                  n.value._futureSnapshot = e.value;
                                  for (let i = 0; i < e.children.length; ++i) t(e.children[i], n.children[i]);
                                })(n, t),
                                t
                              );
                            }
                            {
                              const i = new Xu(
                                  new uc((s = n.value).url),
                                  new uc(s.params),
                                  new uc(s.queryParams),
                                  new uc(s.fragment),
                                  new uc(s.data),
                                  s.outlet,
                                  s.component,
                                  s
                                ),
                                r = n.children.map((n) => t(e, n));
                              return new Ku(i, r);
                            }
                          }
                          var s;
                        })(t, e._root, n ? n._root : void 0);
                        return new Zu(i, e);
                      })(this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);
                      return Object.assign(Object.assign({}, t), { targetRouterState: e });
                    }),
                    ji((t) => {
                      (this.currentUrlTree = t.urlAfterRedirects),
                        (this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, t.rawUrl)),
                        (this.routerState = t.targetRouterState),
                        'deferred' === this.urlUpdateStrategy &&
                          (t.extras.skipLocationChange ||
                            this.setBrowserUrl(this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state),
                          (this.browserUrlTree = t.urlAfterRedirects));
                    }),
                    ((s = this.rootContexts),
                    (r = this.routeReuseStrategy),
                    (o = (t) => this.triggerEvent(t)),
                    Object(l.a)((t) => (new bh(r, t.targetRouterState, t.currentRouterState, o).activate(s), t))),
                    ji({
                      next() {
                        n = !0;
                      },
                      complete() {
                        n = !0;
                      },
                    }),
                    ha(() => {
                      if (!n && !i) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new Kc(
                          t.id,
                          this.serializeUrl(t.extractedUrl),
                          `Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`
                        );
                        e.next(n), t.resolve(!1);
                      }
                      this.currentNavigation = null;
                    }),
                    la((n) => {
                      if (((i = !0), (s = n) && s.ngNavigationCancelingError)) {
                        const i = vh(n.url);
                        i ||
                          ((this.navigated = !0),
                          this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl));
                        const s = new Kc(t.id, this.serializeUrl(t.extractedUrl), n.message);
                        e.next(s),
                          i
                            ? setTimeout(() => {
                                const e = this.urlHandlingStrategy.merge(n.url, this.rawUrlTree);
                                return this.scheduleNavigation(
                                  e,
                                  'imperative',
                                  null,
                                  {
                                    skipLocationChange: t.extras.skipLocationChange,
                                    replaceUrl: 'eager' === this.urlUpdateStrategy,
                                  },
                                  { resolve: t.resolve, reject: t.reject, promise: t.promise }
                                );
                              }, 0)
                            : t.resolve(!1);
                      } else {
                        this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);
                        const i = new Qc(t.id, this.serializeUrl(t.extractedUrl), n);
                        e.next(i);
                        try {
                          t.resolve(this.errorHandler(n));
                        } catch (r) {
                          t.reject(r);
                        }
                      }
                      var s;
                      return lt;
                    })
                  );
                  var s, r, o;
                })
              );
            }
            resetRootComponentType(t) {
              (this.rootComponentType = t), (this.routerState.root.component = this.rootComponentType);
            }
            getTransition() {
              const t = this.transitions.value;
              return (t.urlAfterRedirects = this.browserUrlTree), t;
            }
            setTransition(t) {
              this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));
            }
            initialNavigation() {
              this.setUpLocationChangeListener(),
                0 === this.navigationId && this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe((t) => {
                  let e = this.parseUrl(t.url);
                  const n = 'popstate' === t.type ? 'popstate' : 'hashchange',
                    i = t.state && t.state.navigationId ? t.state : null;
                  setTimeout(() => {
                    this.scheduleNavigation(e, n, i, { replaceUrl: !0 });
                  }, 0);
                }));
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.currentNavigation;
            }
            triggerEvent(t) {
              this.events.next(t);
            }
            resetConfig(t) {
              mu(t), (this.config = t.map(bu)), (this.navigated = !1), (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(), (this.locationSubscription = null));
            }
            createUrlTree(t, e = {}) {
              const {
                relativeTo: n,
                queryParams: i,
                fragment: r,
                preserveQueryParams: o,
                queryParamsHandling: a,
                preserveFragment: l,
              } = e;
              Object(s.W)() &&
                o &&
                console &&
                console.warn &&
                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');
              const c = n || this.routerState.root,
                u = l ? this.currentUrlTree.fragment : r;
              let h = null;
              if (a)
                switch (a) {
                  case 'merge':
                    h = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), i);
                    break;
                  case 'preserve':
                    h = this.currentUrlTree.queryParams;
                    break;
                  default:
                    h = i || null;
                }
              else h = o ? this.currentUrlTree.queryParams : i || null;
              return (
                null !== h && (h = this.removeEmptyProps(h)),
                (function (t, e, n, i, s) {
                  if (0 === n.length) return ah(e.root, e.root, e, i, s);
                  const r = (function (t) {
                    if ('string' == typeof t[0] && 1 === t.length && '/' === t[0]) return new lh(!0, 0, t);
                    let e = 0,
                      n = !1;
                    const i = t.reduce((t, i, s) => {
                      if ('object' == typeof i && null != i) {
                        if (i.outlets) {
                          const e = {};
                          return (
                            xu(i.outlets, (t, n) => {
                              e[n] = 'string' == typeof t ? t.split('/') : t;
                            }),
                            [...t, { outlets: e }]
                          );
                        }
                        if (i.segmentPath) return [...t, i.segmentPath];
                      }
                      return 'string' != typeof i
                        ? [...t, i]
                        : 0 === s
                        ? (i.split('/').forEach((i, s) => {
                            (0 == s && '.' === i) ||
                              (0 == s && '' === i ? (n = !0) : '..' === i ? e++ : '' != i && t.push(i));
                          }),
                          t)
                        : [...t, i];
                    }, []);
                    return new lh(n, e, i);
                  })(n);
                  if (r.toRoot()) return ah(e.root, new ku([], {}), e, i, s);
                  const o = (function (t, e, n) {
                      if (t.isAbsolute) return new ch(e.root, !0, 0);
                      if (-1 === n.snapshot._lastPathIndex) return new ch(n.snapshot._urlSegment, !0, 0);
                      const i = oh(t.commands[0]) ? 0 : 1;
                      return (function (t, e, n) {
                        let i = t,
                          s = e,
                          r = n;
                        for (; r > s; ) {
                          if (((r -= s), (i = i.parent), !i)) throw new Error("Invalid number of '../'");
                          s = i.segments.length;
                        }
                        return new ch(i, !1, s - r);
                      })(n.snapshot._urlSegment, n.snapshot._lastPathIndex + i, t.numberOfDoubleDots);
                    })(r, e, t),
                    a = o.processChildren
                      ? dh(o.segmentGroup, o.index, r.commands)
                      : hh(o.segmentGroup, o.index, r.commands);
                  return ah(o.segmentGroup, a, e, i, s);
                })(c, this.currentUrlTree, t, h, u)
              );
            }
            navigateByUrl(t, e = { skipLocationChange: !1 }) {
              Object(s.W)() &&
                this.isNgZoneEnabled &&
                !s.A.isInAngularZone() &&
                this.console.warn("Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?");
              const n = vh(t) ? t : this.parseUrl(t),
                i = this.urlHandlingStrategy.merge(n, this.rawUrlTree);
              return this.scheduleNavigation(i, 'imperative', null, e);
            }
            navigate(t, e = { skipLocationChange: !1 }) {
              return (
                (function (t) {
                  for (let e = 0; e < t.length; e++) {
                    const n = t[e];
                    if (null == n) throw new Error(`The requested path contains ${n} segment at index ${e}`);
                  }
                })(t),
                this.navigateByUrl(this.createUrlTree(t, e), e)
              );
            }
            serializeUrl(t) {
              return this.urlSerializer.serialize(t);
            }
            parseUrl(t) {
              let e;
              try {
                e = this.urlSerializer.parse(t);
              } catch (n) {
                e = this.malformedUriErrorHandler(n, this.urlSerializer, t);
              }
              return e;
            }
            isActive(t, e) {
              if (vh(t)) return Su(this.currentUrlTree, t, e);
              const n = this.parseUrl(t);
              return Su(this.currentUrlTree, n, e);
            }
            removeEmptyProps(t) {
              return Object.keys(t).reduce((e, n) => {
                const i = t[n];
                return null != i && (e[n] = i), e;
              }, {});
            }
            processNavigations() {
              this.navigations.subscribe(
                (t) => {
                  (this.navigated = !0),
                    (this.lastSuccessfulId = t.id),
                    this.events.next(
                      new Wc(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(this.currentUrlTree))
                    ),
                    (this.lastSuccessfulNavigation = this.currentNavigation),
                    (this.currentNavigation = null),
                    t.resolve(!0);
                },
                (t) => {
                  this.console.warn('Unhandled Navigation Error: ');
                }
              );
            }
            scheduleNavigation(t, e, n, i, s) {
              const r = this.getTransition();
              if (r && 'imperative' !== e && 'imperative' === r.source && r.rawUrl.toString() === t.toString())
                return Promise.resolve(!0);
              if (r && 'hashchange' == e && 'popstate' === r.source && r.rawUrl.toString() === t.toString())
                return Promise.resolve(!0);
              if (r && 'popstate' == e && 'hashchange' === r.source && r.rawUrl.toString() === t.toString())
                return Promise.resolve(!0);
              let o, a, l;
              s
                ? ((o = s.resolve), (a = s.reject), (l = s.promise))
                : (l = new Promise((t, e) => {
                    (o = t), (a = e);
                  }));
              const c = ++this.navigationId;
              return (
                this.setTransition({
                  id: c,
                  source: e,
                  restoredState: n,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.rawUrlTree,
                  rawUrl: t,
                  extras: i,
                  resolve: o,
                  reject: a,
                  promise: l,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                l.catch((t) => Promise.reject(t))
              );
            }
            setBrowserUrl(t, e, n, i) {
              const s = this.urlSerializer.serialize(t);
              (i = i || {}),
                this.location.isCurrentPathEqualTo(s) || e
                  ? this.location.replaceState(s, '', Object.assign(Object.assign({}, i), { navigationId: n }))
                  : this.location.go(s, '', Object.assign(Object.assign({}, i), { navigationId: n }));
            }
            resetStateAndUrl(t, e, n) {
              (this.routerState = t),
                (this.currentUrlTree = e),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, n)),
                this.resetUrlToCurrentUrlTree();
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', {
                navigationId: this.lastSuccessfulId,
              });
            }
          }
          return (
            (t.ɵfac = function (t) {
              s.bc();
            }),
            (t.ɵdir = s.Jb({ type: t })),
            t
          );
        })(),
        ld = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this.router = t),
                (this.route = e),
                (this.commands = []),
                null == n && i.setAttribute(s.nativeElement, 'tabindex', '0');
            }
            set routerLink(t) {
              this.commands = null != t ? (Array.isArray(t) ? t : [t]) : [];
            }
            set preserveQueryParams(t) {
              Object(s.W)() &&
                console &&
                console.warn &&
                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.'),
                (this.preserve = t);
            }
            onClick() {
              const t = {
                skipLocationChange: ud(this.skipLocationChange),
                replaceUrl: ud(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, t), !0;
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                preserveQueryParams: ud(this.preserve),
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: ud(this.preserveFragment),
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(ad), s.Ob(Xu), s.Zb('tabindex'), s.Ob(s.F), s.Ob(s.l));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [['', 'routerLink', '', 5, 'a', 5, 'area']],
              hostBindings: function (t, e) {
                1 & t &&
                  s.cc('click', function () {
                    return e.onClick();
                  });
              },
              inputs: {
                routerLink: 'routerLink',
                preserveQueryParams: 'preserveQueryParams',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
              },
            })),
            t
          );
        })(),
        cd = (() => {
          class t {
            constructor(t, e, n) {
              (this.router = t),
                (this.route = e),
                (this.locationStrategy = n),
                (this.commands = []),
                (this.subscription = t.events.subscribe((t) => {
                  t instanceof Wc && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(t) {
              this.commands = null != t ? (Array.isArray(t) ? t : [t]) : [];
            }
            set preserveQueryParams(t) {
              Object(s.W)() &&
                console &&
                console.warn &&
                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.'),
                (this.preserve = t);
            }
            ngOnChanges(t) {
              this.updateTargetUrlAndHref();
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(t, e, n, i) {
              if (0 !== t || e || n || i) return !0;
              if ('string' == typeof this.target && '_self' != this.target) return !0;
              const s = {
                skipLocationChange: ud(this.skipLocationChange),
                replaceUrl: ud(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, s), !1;
            }
            updateTargetUrlAndHref() {
              this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                preserveQueryParams: ud(this.preserve),
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: ud(this.preserveFragment),
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(ad), s.Ob(Xu), s.Ob(r.h));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['a', 'routerLink', ''],
                ['area', 'routerLink', ''],
              ],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  s.cc('click', function (t) {
                    return e.onClick(t.button, t.ctrlKey, t.metaKey, t.shiftKey);
                  }),
                  2 & t && (s.Xb('href', e.href, s.tc), s.Db('target', e.target));
              },
              inputs: {
                routerLink: 'routerLink',
                preserveQueryParams: 'preserveQueryParams',
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
              },
              features: [s.Ab],
            })),
            t
          );
        })();
      function ud(t) {
        return '' === t || !!t;
      }
      let hd = (() => {
        class t {
          constructor(t, e, n, i, s) {
            (this.router = t),
              (this.element = e),
              (this.renderer = n),
              (this.link = i),
              (this.linkWithHref = s),
              (this.classes = []),
              (this.isActive = !1),
              (this.routerLinkActiveOptions = { exact: !1 }),
              (this.subscription = t.events.subscribe((t) => {
                t instanceof Wc && this.update();
              }));
          }
          ngAfterContentInit() {
            this.links.changes.subscribe((t) => this.update()),
              this.linksWithHrefs.changes.subscribe((t) => this.update()),
              this.update();
          }
          set routerLinkActive(t) {
            const e = Array.isArray(t) ? t : t.split(' ');
            this.classes = e.filter((t) => !!t);
          }
          ngOnChanges(t) {
            this.update();
          }
          ngOnDestroy() {
            this.subscription.unsubscribe();
          }
          update() {
            this.links &&
              this.linksWithHrefs &&
              this.router.navigated &&
              Promise.resolve().then(() => {
                const t = this.hasActiveLinks();
                this.isActive !== t &&
                  ((this.isActive = t),
                  this.classes.forEach((e) => {
                    t
                      ? this.renderer.addClass(this.element.nativeElement, e)
                      : this.renderer.removeClass(this.element.nativeElement, e);
                  }));
              });
          }
          isLinkActive(t) {
            return (e) => t.isActive(e.urlTree, this.routerLinkActiveOptions.exact);
          }
          hasActiveLinks() {
            const t = this.isLinkActive(this.router);
            return (
              (this.link && t(this.link)) ||
              (this.linkWithHref && t(this.linkWithHref)) ||
              this.links.some(t) ||
              this.linksWithHrefs.some(t)
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(ad), s.Ob(s.l), s.Ob(s.F), s.Ob(ld, 8), s.Ob(cd, 8));
          }),
          (t.ɵdir = s.Jb({
            type: t,
            selectors: [['', 'routerLinkActive', '']],
            contentQueries: function (t, e, n) {
              var i;
              1 & t && (s.Hb(n, ld, !0), s.Hb(n, cd, !0)),
                2 & t && (s.pc((i = s.dc())) && (e.links = i), s.pc((i = s.dc())) && (e.linksWithHrefs = i));
            },
            inputs: { routerLinkActiveOptions: 'routerLinkActiveOptions', routerLinkActive: 'routerLinkActive' },
            exportAs: ['routerLinkActive'],
            features: [s.Ab],
          })),
          t
        );
      })();
      class dd {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new pd()),
            (this.attachRef = null);
        }
      }
      class pd {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(t, e) {
          const n = this.getOrCreateContext(t);
          (n.outlet = e), this.contexts.set(t, n);
        }
        onChildOutletDestroyed(t) {
          const e = this.getContext(t);
          e && (e.outlet = null);
        }
        onOutletDeactivated() {
          const t = this.contexts;
          return (this.contexts = new Map()), t;
        }
        onOutletReAttached(t) {
          this.contexts = t;
        }
        getOrCreateContext(t) {
          let e = this.getContext(t);
          return e || ((e = new dd()), this.contexts.set(t, e)), e;
        }
        getContext(t) {
          return this.contexts.get(t) || null;
        }
      }
      let md = (() => {
        class t {
          constructor(t, e, n, i, r) {
            (this.parentContexts = t),
              (this.location = e),
              (this.resolver = n),
              (this.changeDetector = r),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new s.o()),
              (this.deactivateEvents = new s.o()),
              (this.name = i || 'primary'),
              t.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const t = this.parentContexts.getContext(this.name);
              t &&
                t.route &&
                (t.attachRef ? this.attach(t.attachRef, t.route) : this.activateWith(t.route, t.resolver || null));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new Error('Outlet is not activated');
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new Error('Outlet is not activated');
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
          }
          detach() {
            if (!this.activated) throw new Error('Outlet is not activated');
            this.location.detach();
            const t = this.activated;
            return (this.activated = null), (this._activatedRoute = null), t;
          }
          attach(t, e) {
            (this.activated = t), (this._activatedRoute = e), this.location.insert(t.hostView);
          }
          deactivate() {
            if (this.activated) {
              const t = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(t);
            }
          }
          activateWith(t, e) {
            if (this.isActivated) throw new Error('Cannot activate an already activated outlet');
            this._activatedRoute = t;
            const n = (e = e || this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),
              i = this.parentContexts.getOrCreateContext(this.name).children,
              s = new fd(t, i, this.location.injector);
            (this.activated = this.location.createComponent(n, this.location.length, s)),
              this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(pd), s.Ob(s.P), s.Ob(s.j), s.Zb('name'), s.Ob(s.h));
          }),
          (t.ɵdir = s.Jb({
            type: t,
            selectors: [['router-outlet']],
            outputs: { activateEvents: 'activate', deactivateEvents: 'deactivate' },
            exportAs: ['outlet'],
          })),
          t
        );
      })();
      class fd {
        constructor(t, e, n) {
          (this.route = t), (this.childContexts = e), (this.parent = n);
        }
        get(t, e) {
          return t === Xu ? this.route : t === pd ? this.childContexts : this.parent.get(t, e);
        }
      }
      class gd {}
      class bd {
        preload(t, e) {
          return y(null);
        }
      }
      let _d = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this.router = t),
                (this.injector = i),
                (this.preloadingStrategy = s),
                (this.loader = new nd(
                  e,
                  n,
                  (e) => t.triggerEvent(new eu(e)),
                  (e) => t.triggerEvent(new nu(e))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  C((t) => t instanceof Wc),
                  w(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const t = this.injector.get(s.y);
              return this.processRoutes(t, this.router.config);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            processRoutes(t, e) {
              const n = [];
              for (const i of e)
                if (i.loadChildren && !i.canLoad && i._loadedConfig) {
                  const t = i._loadedConfig;
                  n.push(this.processRoutes(t.module, t.routes));
                } else
                  i.loadChildren && !i.canLoad
                    ? n.push(this.preloadConfig(t, i))
                    : i.children && n.push(this.processRoutes(t, i.children));
              return Object(u.a)(n).pipe(
                Object(rt.a)(),
                Object(l.a)((t) => {})
              );
            }
            preloadConfig(t, e) {
              return this.preloadingStrategy.preload(e, () =>
                this.loader
                  .load(t.injector, e)
                  .pipe(Object(v.a)((t) => ((e._loadedConfig = t), this.processRoutes(t.module, t.routes))))
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(ad), s.Yb(s.x), s.Yb(s.i), s.Yb(s.s), s.Yb(gd));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        yd = (() => {
          class t {
            constructor(t, e, n = {}) {
              (this.router = t),
                (this.viewportScroller = e),
                (this.options = n),
                (this.lastId = 0),
                (this.lastSource = 'imperative'),
                (this.restoredId = 0),
                (this.store = {}),
                (n.scrollPositionRestoration = n.scrollPositionRestoration || 'disabled'),
                (n.anchorScrolling = n.anchorScrolling || 'disabled');
            }
            init() {
              'disabled' !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration('manual'),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof qc
                  ? ((this.store[this.lastId] = this.viewportScroller.getScrollPosition()),
                    (this.lastSource = t.navigationTrigger),
                    (this.restoredId = t.restoredState ? t.restoredState.navigationId : 0))
                  : t instanceof Wc &&
                    ((this.lastId = t.id),
                    this.scheduleScrollEvent(t, this.router.parseUrl(t.urlAfterRedirects).fragment));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof au &&
                  (t.position
                    ? 'top' === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : 'enabled' === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(t.position)
                    : t.anchor && 'enabled' === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(t.anchor)
                    : 'disabled' !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(t, e) {
              this.router.triggerEvent(
                new au(t, 'popstate' === this.lastSource ? this.store[this.restoredId] : null, e)
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (t) {
              s.bc();
            }),
            (t.ɵdir = s.Jb({ type: t })),
            t
          );
        })();
      const vd = new s.r('ROUTER_CONFIGURATION'),
        wd = new s.r('ROUTER_FORROOT_GUARD'),
        xd = [
          r.g,
          { provide: Iu, useClass: Ru },
          {
            provide: ad,
            useFactory: function (t, e, n, i, s, o, a, l = {}, c, u) {
              const h = new ad(null, t, e, n, i, s, o, vu(a));
              if (
                (c && (h.urlHandlingStrategy = c),
                u && (h.routeReuseStrategy = u),
                l.errorHandler && (h.errorHandler = l.errorHandler),
                l.malformedUriErrorHandler && (h.malformedUriErrorHandler = l.malformedUriErrorHandler),
                l.enableTracing)
              ) {
                const t = Object(r.x)();
                h.events.subscribe((e) => {
                  t.logGroup('Router Event: ' + e.constructor.name), t.log(e.toString()), t.log(e), t.logGroupEnd();
                });
              }
              return (
                l.onSameUrlNavigation && (h.onSameUrlNavigation = l.onSameUrlNavigation),
                l.paramsInheritanceStrategy && (h.paramsInheritanceStrategy = l.paramsInheritanceStrategy),
                l.urlUpdateStrategy && (h.urlUpdateStrategy = l.urlUpdateStrategy),
                l.relativeLinkResolution && (h.relativeLinkResolution = l.relativeLinkResolution),
                h
              );
            },
            deps: [Iu, pd, r.g, s.s, s.x, s.i, ed, vd, [class {}, new s.B()], [Jh, new s.B()]],
          },
          pd,
          {
            provide: Xu,
            useFactory: function (t) {
              return t.routerState.root;
            },
            deps: [ad],
          },
          { provide: s.x, useClass: s.L },
          _d,
          bd,
          class {
            preload(t, e) {
              return e().pipe(la(() => y(null)));
            }
          },
          { provide: vd, useValue: { enableTracing: !1 } },
        ];
      function Cd() {
        return new s.z('Router', ad);
      }
      let Sd = (() => {
        class t {
          constructor(t, e) {}
          static forRoot(e, n) {
            return {
              ngModule: t,
              providers: [
                xd,
                Ad(e),
                { provide: wd, useFactory: Od, deps: [[ad, new s.B(), new s.K()]] },
                { provide: vd, useValue: n || {} },
                { provide: r.h, useFactory: kd, deps: [r.r, [new s.q(r.a), new s.B()], vd] },
                { provide: yd, useFactory: Ed, deps: [ad, r.s, vd] },
                { provide: gd, useExisting: n && n.preloadingStrategy ? n.preloadingStrategy : bd },
                { provide: s.z, multi: !0, useFactory: Cd },
                [
                  Td,
                  { provide: s.d, multi: !0, useFactory: Id, deps: [Td] },
                  { provide: Pd, useFactory: Rd, deps: [Td] },
                  { provide: s.b, multi: !0, useExisting: Pd },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: t, providers: [Ad(e)] };
          }
        }
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)(s.Yb(wd, 8), s.Yb(ad, 8));
            },
          })),
          t
        );
      })();
      function Ed(t, e, n) {
        return n.scrollOffset && e.setOffset(n.scrollOffset), new yd(t, e, n);
      }
      function kd(t, e, n = {}) {
        return n.useHash ? new r.e(t, e) : new r.q(t, e);
      }
      function Od(t) {
        if (t)
          throw new Error(
            'RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.'
          );
        return 'guarded';
      }
      function Ad(t) {
        return [
          { provide: s.a, multi: !0, useValue: t },
          { provide: ed, multi: !0, useValue: t },
        ];
      }
      let Td = (() => {
        class t {
          constructor(t) {
            (this.injector = t), (this.initNavigation = !1), (this.resultOfPreactivationDone = new ft.a());
          }
          appInitializer() {
            return this.injector.get(r.f, Promise.resolve(null)).then(() => {
              let t = null;
              const e = new Promise((e) => (t = e)),
                n = this.injector.get(ad),
                i = this.injector.get(vd);
              if (this.isLegacyDisabled(i) || this.isLegacyEnabled(i)) t(!0);
              else if ('disabled' === i.initialNavigation) n.setUpLocationChangeListener(), t(!0);
              else {
                if ('enabled' !== i.initialNavigation)
                  throw new Error(`Invalid initialNavigation options: '${i.initialNavigation}'`);
                (n.hooks.afterPreactivation = () =>
                  this.initNavigation ? y(null) : ((this.initNavigation = !0), t(!0), this.resultOfPreactivationDone)),
                  n.initialNavigation();
              }
              return e;
            });
          }
          bootstrapListener(t) {
            const e = this.injector.get(vd),
              n = this.injector.get(_d),
              i = this.injector.get(yd),
              r = this.injector.get(ad),
              o = this.injector.get(s.g);
            t === o.components[0] &&
              (this.isLegacyEnabled(e)
                ? r.initialNavigation()
                : this.isLegacyDisabled(e) && r.setUpLocationChangeListener(),
              n.setUpPreloading(),
              i.init(),
              r.resetRootComponentType(o.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          isLegacyEnabled(t) {
            return (
              'legacy_enabled' === t.initialNavigation || !0 === t.initialNavigation || void 0 === t.initialNavigation
            );
          }
          isLegacyDisabled(t) {
            return 'legacy_disabled' === t.initialNavigation || !1 === t.initialNavigation;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(s.s));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Id(t) {
        return t.appInitializer.bind(t);
      }
      function Rd(t) {
        return t.bootstrapListener.bind(t);
      }
      const Pd = new s.r('Router Initializer');
      let Dd = (() => {
        class t extends Jh {
          shouldDetach(t) {
            return !1;
          }
          store(t, e) {}
          shouldAttach(t) {
            return !1;
          }
          retrieve(t) {
            return null;
          }
          shouldReuseRoute(t, e) {
            return t.routeConfig === e.routeConfig || t.data.reuse;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return jd(e || t);
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const jd = s.Wb(Dd);
      var Ld = n('AytR');
      let Md = (() => {
        class t {
          intercept(t, e) {
            return /^(http|https):/i.test(t.url) || (t = t.clone({ url: Ld.a.serverUrl + t.url })), e.handle(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      var Nd = (function (t) {
        return (
          (t[(t.Off = 0)] = 'Off'),
          (t[(t.Error = 1)] = 'Error'),
          (t[(t.Warning = 2)] = 'Warning'),
          (t[(t.Info = 3)] = 'Info'),
          (t[(t.Debug = 4)] = 'Debug'),
          t
        );
      })({});
      let Fd = (() => {
        class t {
          constructor(t) {
            this.source = t;
          }
          static enableProductionMode() {
            t.level = Nd.Warning;
          }
          debug(...t) {
            this.log(console.log, Nd.Debug, t);
          }
          info(...t) {
            this.log(console.info, Nd.Info, t);
          }
          warn(...t) {
            this.log(console.warn, Nd.Warning, t);
          }
          error(...t) {
            this.log(console.error, Nd.Error, t);
          }
          log(e, n, i) {
            if (n <= t.level) {
              const s = this.source ? ['[' + this.source + ']'].concat(i) : i;
              e.apply(console, s), t.outputs.forEach((t) => t.apply(t, [this.source, n, ...i]));
            }
          }
        }
        return (t.level = Nd.Debug), (t.outputs = []), t;
      })();
      const Vd = new Fd('ErrorHandlerInterceptor');
      let Hd = (() => {
          class t {
            intercept(t, e) {
              return e.handle(t).pipe(la((t) => this.errorHandler(t)));
            }
            errorHandler(t) {
              throw (Ld.a.production || Vd.error('Request error', t), t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            t
          );
        })(),
        Bd = (() => {
          class t {
            constructor(t) {
              if (t) throw new Error(t + ' has already been loaded. Import Core module in the AppModule only.');
            }
          }
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)(s.Yb(t, 12));
              },
              providers: [
                { provide: Y, useClass: Md, multi: !0 },
                { provide: Y, useClass: Hd, multi: !0 },
                { provide: Jh, useClass: Dd },
              ],
              imports: [[r.c, it, oe, Sd]],
            })),
            t
          );
        })();
      const Ud = Symbol('untilDestroyed'),
        zd = {
          provide: s.b,
          useFactory: function (t, e) {
            return () => {
              if (Object(r.t)(e)) {
                const e = Array.from(t.querySelectorAll(`[class*=${Yd}]`)),
                  n = /\bflex-layout-.+?\b/g;
                e.forEach((t) => {
                  t.classList.contains(Yd + 'ssr') && t.parentNode
                    ? t.parentNode.removeChild(t)
                    : t.className.replace(n, '');
                });
              }
            };
          },
          deps: [r.d, s.C],
          multi: !0,
        },
        Yd = 'flex-layout-';
      let $d = (() => {
        class t {}
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)();
            },
            providers: [zd],
          })),
          t
        );
      })();
      class qd {
        constructor(t = !1, e = 'all', n = '', i = '', s = 0) {
          (this.matches = t),
            (this.mediaQuery = e),
            (this.mqAlias = n),
            (this.suffix = i),
            (this.priority = s),
            (this.property = '');
        }
        clone() {
          return new qd(this.matches, this.mediaQuery, this.mqAlias, this.suffix);
        }
      }
      let Wd = (() => {
        class t {
          constructor() {
            this.stylesheet = new Map();
          }
          addStyleToElement(t, e, n) {
            const i = this.stylesheet.get(t);
            i ? i.set(e, n) : this.stylesheet.set(t, new Map([[e, n]]));
          }
          clearStyles() {
            this.stylesheet.clear();
          }
          getStyleForElement(t, e) {
            const n = this.stylesheet.get(t);
            let i = '';
            if (n) {
              const t = n.get(e);
              ('number' != typeof t && 'string' != typeof t) || (i = t + '');
            }
            return i;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const Kd = {
          addFlexToParent: !0,
          addOrientationBps: !1,
          disableDefaultBps: !1,
          disableVendorPrefixes: !1,
          serverLoaded: !1,
          useColumnBasisZero: !0,
          printWithBreakpoints: [],
          mediaTriggerAutoRestore: !0,
          ssrObserveBreakpoints: [],
        },
        Qd = new s.r('Flex Layout token, config options for the library', { providedIn: 'root', factory: () => Kd }),
        Zd = new s.r('FlexLayoutServerLoaded', { providedIn: 'root', factory: () => !1 }),
        Gd = new s.r('Flex Layout token, collect all breakpoints into one provider', {
          providedIn: 'root',
          factory: () => null,
        });
      function Xd(t, e) {
        return (
          (t = t ? t.clone() : new qd()),
          e && ((t.mqAlias = e.alias), (t.mediaQuery = e.mediaQuery), (t.suffix = e.suffix), (t.priority = e.priority)),
          t
        );
      }
      const Jd = ['row', 'column', 'row-reverse', 'column-reverse'];
      function tp(t) {
        if (t)
          switch (t.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
            case 'reverse-wrap':
              t = 'wrap-reverse';
              break;
            case 'no':
            case 'none':
            case 'nowrap':
              t = 'nowrap';
              break;
            default:
              t = 'wrap';
          }
        return t;
      }
      let ep = (() => {
        class t {
          constructor(t, e, n, i) {
            (this.elementRef = t),
              (this.styleBuilder = e),
              (this.styler = n),
              (this.marshal = i),
              (this.DIRECTIVE_KEY = ''),
              (this.inputs = []),
              (this.mru = {}),
              (this.destroySubject = new ft.a()),
              (this.styleCache = new Map());
          }
          get parentElement() {
            return this.elementRef.nativeElement.parentElement;
          }
          get nativeElement() {
            return this.elementRef.nativeElement;
          }
          get activatedValue() {
            return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);
          }
          set activatedValue(t) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, t, this.marshal.activatedAlias);
          }
          ngOnChanges(t) {
            Object.keys(t).forEach((e) => {
              if (-1 !== this.inputs.indexOf(e)) {
                const n = e.split('.').slice(1).join('.');
                this.setValue(t[e].currentValue, n);
              }
            });
          }
          ngOnDestroy() {
            this.destroySubject.next(), this.destroySubject.complete(), this.marshal.releaseElement(this.nativeElement);
          }
          init(t = []) {
            this.marshal.init(
              this.elementRef.nativeElement,
              this.DIRECTIVE_KEY,
              this.updateWithValue.bind(this),
              this.clearStyles.bind(this),
              t
            );
          }
          addStyles(t, e) {
            const n = this.styleBuilder,
              i = n.shouldCache;
            let s = this.styleCache.get(t);
            (s && i) || ((s = n.buildStyles(t, e)), i && this.styleCache.set(t, s)),
              (this.mru = Object.assign({}, s)),
              this.applyStyleToElement(s),
              n.sideEffect(t, s, e);
          }
          clearStyles() {
            Object.keys(this.mru).forEach((t) => {
              this.mru[t] = '';
            }),
              this.applyStyleToElement(this.mru),
              (this.mru = {});
          }
          triggerUpdate() {
            this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);
          }
          getFlexFlowDirection(t, e = !1) {
            if (t) {
              const [n, i] = this.styler.getFlowDirection(t);
              if (!i && e) {
                const e = (function (t) {
                  let [e, n, i] = (function (t) {
                    t = t ? t.toLowerCase() : '';
                    let [e, n, i] = t.split(' ');
                    return (
                      Jd.find((t) => t === e) || (e = Jd[0]),
                      'inline' === n && ((n = 'inline' !== i ? i : ''), (i = 'inline')),
                      [e, tp(n), !!i]
                    );
                  })(t);
                  return (function (t, e = null, n = !1) {
                    return {
                      display: n ? 'inline-flex' : 'flex',
                      'box-sizing': 'border-box',
                      'flex-direction': t,
                      'flex-wrap': e || null,
                    };
                  })(e, n, i);
                })(n);
                this.styler.applyStyleToElements(e, [t]);
              }
              return n.trim();
            }
            return 'row';
          }
          hasWrap(t) {
            return this.styler.hasWrap(t);
          }
          applyStyleToElement(t, e, n = this.nativeElement) {
            this.styler.applyStyleToElement(n, t, e);
          }
          setValue(t, e) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, t, e);
          }
          updateWithValue(t) {
            this.currentValue !== t && (this.addStyles(t), (this.currentValue = t));
          }
        }
        return (
          (t.ɵfac = function (t) {
            s.bc();
          }),
          (t.ɵdir = s.Jb({ type: t, features: [s.Ab] })),
          t
        );
      })();
      const np = [
          { alias: 'xs', mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)', priority: 1e3 },
          { alias: 'sm', mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)', priority: 900 },
          { alias: 'md', mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)', priority: 800 },
          { alias: 'lg', mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)', priority: 700 },
          { alias: 'xl', mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)', priority: 600 },
          { alias: 'lt-sm', overlapping: !0, mediaQuery: 'screen and (max-width: 599.9px)', priority: 950 },
          { alias: 'lt-md', overlapping: !0, mediaQuery: 'screen and (max-width: 959.9px)', priority: 850 },
          { alias: 'lt-lg', overlapping: !0, mediaQuery: 'screen and (max-width: 1279.9px)', priority: 750 },
          { alias: 'lt-xl', overlapping: !0, priority: 650, mediaQuery: 'screen and (max-width: 1919.9px)' },
          { alias: 'gt-xs', overlapping: !0, mediaQuery: 'screen and (min-width: 600px)', priority: -950 },
          { alias: 'gt-sm', overlapping: !0, mediaQuery: 'screen and (min-width: 960px)', priority: -850 },
          { alias: 'gt-md', overlapping: !0, mediaQuery: 'screen and (min-width: 1280px)', priority: -750 },
          { alias: 'gt-lg', overlapping: !0, mediaQuery: 'screen and (min-width: 1920px)', priority: -650 },
        ],
        ip = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)',
        sp = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)',
        rp = '(orientation: portrait) and (min-width: 840px)',
        op = '(orientation: landscape) and (min-width: 1280px)',
        ap = {
          HANDSET:
            '(orientation: portrait) and (max-width: 599.9px), (orientation: landscape) and (max-width: 959.9px)',
          TABLET: `${ip} , ${sp}`,
          WEB: `${rp}, ${op} `,
          HANDSET_PORTRAIT: '(orientation: portrait) and (max-width: 599.9px)',
          TABLET_PORTRAIT: ip + ' ',
          WEB_PORTRAIT: '' + rp,
          HANDSET_LANDSCAPE: '(orientation: landscape) and (max-width: 959.9px)',
          TABLET_LANDSCAPE: '' + sp,
          WEB_LANDSCAPE: '' + op,
        },
        lp = [
          { alias: 'handset', priority: 2e3, mediaQuery: ap.HANDSET },
          { alias: 'handset.landscape', priority: 2e3, mediaQuery: ap.HANDSET_LANDSCAPE },
          { alias: 'handset.portrait', priority: 2e3, mediaQuery: ap.HANDSET_PORTRAIT },
          { alias: 'tablet', priority: 2100, mediaQuery: ap.TABLET },
          { alias: 'tablet.landscape', priority: 2100, mediaQuery: ap.TABLET_LANDSCAPE },
          { alias: 'tablet.portrait', priority: 2100, mediaQuery: ap.TABLET_PORTRAIT },
          { alias: 'web', priority: 2200, mediaQuery: ap.WEB, overlapping: !0 },
          { alias: 'web.landscape', priority: 2200, mediaQuery: ap.WEB_LANDSCAPE, overlapping: !0 },
          { alias: 'web.portrait', priority: 2200, mediaQuery: ap.WEB_PORTRAIT, overlapping: !0 },
        ],
        cp = /(\.|-|_)/g;
      function up(t) {
        let e = t.length > 0 ? t.charAt(0) : '',
          n = t.length > 1 ? t.slice(1) : '';
        return e.toUpperCase() + n;
      }
      const hp = new s.r('Token (@angular/flex-layout) Breakpoints', {
        providedIn: 'root',
        factory: () => {
          const t = Object(s.V)(Gd),
            e = Object(s.V)(Qd),
            n = [].concat.apply(
              [],
              (t || []).map((t) => (Array.isArray(t) ? t : [t]))
            );
          return (function (t, e = []) {
            const n = {};
            return (
              t.forEach((t) => {
                n[t.alias] = t;
              }),
              e.forEach((t) => {
                n[t.alias]
                  ? (function (t, ...e) {
                      if (null == t) throw TypeError('Cannot convert undefined or null to object');
                      for (let n of e) if (null != n) for (let e in n) n.hasOwnProperty(e) && (t[e] = n[e]);
                    })(n[t.alias], t)
                  : (n[t.alias] = t);
              }),
              (i = Object.keys(n).map((t) => n[t])).forEach((t) => {
                t.suffix ||
                  ((t.suffix = t.alias.replace(cp, '|').split('|').map(up).join('')),
                  (t.overlapping = !!t.overlapping));
              }),
              i
            );
            var i;
          })((e.disableDefaultBps ? [] : np).concat(e.addOrientationBps ? lp : []), n);
        },
      });
      function dp(t, e) {
        return ((e && e.priority) || 0) - ((t && t.priority) || 0);
      }
      function pp(t, e) {
        return (t.priority || 0) - (e.priority || 0);
      }
      let mp = (() => {
          class t {
            constructor(t) {
              (this.findByMap = new Map()), (this.items = [...t].sort(pp));
            }
            findByAlias(t) {
              return t ? this.findWithPredicate(t, (e) => e.alias == t) : null;
            }
            findByQuery(t) {
              return this.findWithPredicate(t, (e) => e.mediaQuery == t);
            }
            get overlappings() {
              return this.items.filter((t) => 1 == t.overlapping);
            }
            get aliases() {
              return this.items.map((t) => t.alias);
            }
            get suffixes() {
              return this.items.map((t) => (t.suffix ? t.suffix : ''));
            }
            findWithPredicate(t, e) {
              let n = this.findByMap.get(t);
              return n || ((n = this.items.find(e) || null), this.findByMap.set(t, n)), n || null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(hp));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(hp));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        fp = (() => {
          class t {
            constructor(t, e, n) {
              (this._zone = t),
                (this._platformId = e),
                (this._document = n),
                (this.source = new uc(new qd(!0))),
                (this.registry = new Map()),
                (this.pendingRemoveListenerFns = []),
                (this._observable$ = this.source.asObservable());
            }
            get activations() {
              const t = [];
              return (
                this.registry.forEach((e, n) => {
                  e.matches && t.push(n);
                }),
                t
              );
            }
            isActive(t) {
              const e = this.registry.get(t);
              return e ? e.matches : this.registerQuery(t).some((t) => t.matches);
            }
            observe(t, e = !1) {
              if (t && t.length) {
                const n = this._observable$.pipe(C((n) => !e || t.indexOf(n.mediaQuery) > -1)),
                  i = new o.a((e) => {
                    const n = this.registerQuery(t);
                    if (n.length) {
                      const t = n.pop();
                      n.forEach((t) => {
                        e.next(t);
                      }),
                        this.source.next(t);
                    }
                    e.complete();
                  });
                return Object(nr.a)(i, n);
              }
              return this._observable$;
            }
            registerQuery(t) {
              const e = Array.isArray(t) ? t : [t],
                n = [];
              return (
                (function (t, e) {
                  const n = t.filter((t) => !gp[t]);
                  if (n.length > 0) {
                    const t = n.join(', ');
                    try {
                      const i = e.createElement('style');
                      i.setAttribute('type', 'text/css'),
                        i.styleSheet ||
                          i.appendChild(
                            e.createTextNode(
                              `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${t} {.fx-query-test{ }}\n`
                            )
                          ),
                        e.head.appendChild(i),
                        n.forEach((t) => (gp[t] = i));
                    } catch (i) {
                      console.error(i);
                    }
                  }
                })(e, this._document),
                e.forEach((t) => {
                  const e = (e) => {
                    this._zone.run(() => this.source.next(new qd(e.matches, t)));
                  };
                  let i = this.registry.get(t);
                  i ||
                    ((i = this.buildMQL(t)),
                    i.addListener(e),
                    this.pendingRemoveListenerFns.push(() => i.removeListener(e)),
                    this.registry.set(t, i)),
                    i.matches && n.push(new qd(!0, t));
                }),
                n
              );
            }
            ngOnDestroy() {
              let t;
              for (; (t = this.pendingRemoveListenerFns.pop()); ) t();
            }
            buildMQL(t) {
              return (function (t, e) {
                return e && window.matchMedia('all').addListener
                  ? window.matchMedia(t)
                  : {
                      matches: 'all' === t || '' === t,
                      media: t,
                      addListener: () => {},
                      removeListener: () => {},
                      onchange: null,
                      addEventListener() {},
                      removeEventListener() {},
                      dispatchEvent: () => !1,
                    };
              })(t, Object(r.t)(this._platformId));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(s.A), s.Yb(s.C), s.Yb(r.d));
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return new t(Object(s.Yb)(s.A), Object(s.Yb)(s.C), Object(s.Yb)(r.d));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const gp = {},
        bp = { alias: 'print', mediaQuery: 'print', priority: 1e3 };
      let _p = (() => {
        class t {
          constructor(t, e, n) {
            (this.breakpoints = t),
              (this.layoutConfig = e),
              (this._document = n),
              (this.registeredBeforeAfterPrintHooks = !1),
              (this.isPrintingBeforeAfterEvent = !1),
              (this.beforePrintEventListeners = []),
              (this.afterPrintEventListeners = []),
              (this.isPrinting = !1),
              (this.queue = new yp()),
              (this.deactivations = []);
          }
          withPrintQuery(t) {
            return [...t, 'print'];
          }
          isPrintEvent(t) {
            return t.mediaQuery.startsWith('print');
          }
          get printAlias() {
            return this.layoutConfig.printWithBreakpoints || [];
          }
          get printBreakPoints() {
            return this.printAlias.map((t) => this.breakpoints.findByAlias(t)).filter((t) => null !== t);
          }
          getEventBreakpoints({ mediaQuery: t }) {
            const e = this.breakpoints.findByQuery(t);
            return (e ? [...this.printBreakPoints, e] : this.printBreakPoints).sort(dp);
          }
          updateEvent(t) {
            let e = this.breakpoints.findByQuery(t.mediaQuery);
            return (
              this.isPrintEvent(t) && ((e = this.getEventBreakpoints(t)[0]), (t.mediaQuery = e ? e.mediaQuery : '')),
              Xd(t, e)
            );
          }
          registerBeforeAfterPrintHooks(t) {
            if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) return;
            this.registeredBeforeAfterPrintHooks = !0;
            const e = () => {
                this.isPrinting ||
                  ((this.isPrintingBeforeAfterEvent = !0),
                  this.startPrinting(t, this.getEventBreakpoints(new qd(!0, 'print'))),
                  t.updateStyles());
              },
              n = () => {
                (this.isPrintingBeforeAfterEvent = !1), this.isPrinting && (this.stopPrinting(t), t.updateStyles());
              };
            this._document.defaultView.addEventListener('beforeprint', e),
              this._document.defaultView.addEventListener('afterprint', n),
              this.beforePrintEventListeners.push(e),
              this.afterPrintEventListeners.push(n);
          }
          interceptEvents(t) {
            return (
              this.registerBeforeAfterPrintHooks(t),
              (e) => {
                this.isPrintEvent(e)
                  ? e.matches && !this.isPrinting
                    ? (this.startPrinting(t, this.getEventBreakpoints(e)), t.updateStyles())
                    : e.matches ||
                      !this.isPrinting ||
                      this.isPrintingBeforeAfterEvent ||
                      (this.stopPrinting(t), t.updateStyles())
                  : this.collectActivations(e);
              }
            );
          }
          blockPropagation() {
            return (t) => !(this.isPrinting || this.isPrintEvent(t));
          }
          startPrinting(t, e) {
            (this.isPrinting = !0), (t.activatedBreakpoints = this.queue.addPrintBreakpoints(e));
          }
          stopPrinting(t) {
            (t.activatedBreakpoints = this.deactivations),
              (this.deactivations = []),
              this.queue.clear(),
              (this.isPrinting = !1);
          }
          collectActivations(t) {
            if (!this.isPrinting || this.isPrintingBeforeAfterEvent)
              if (t.matches) this.isPrintingBeforeAfterEvent || (this.deactivations = []);
              else {
                const e = this.breakpoints.findByQuery(t.mediaQuery);
                e && (this.deactivations.push(e), this.deactivations.sort(dp));
              }
          }
          ngOnDestroy() {
            this.beforePrintEventListeners.forEach((t) =>
              this._document.defaultView.removeEventListener('beforeprint', t)
            ),
              this.afterPrintEventListeners.forEach((t) =>
                this._document.defaultView.removeEventListener('afterprint', t)
              );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(mp), s.Yb(Qd), s.Yb(r.d));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(mp), Object(s.Yb)(Qd), Object(s.Yb)(r.d));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class yp {
        constructor() {
          this.printBreakpoints = [];
        }
        addPrintBreakpoints(t) {
          return t.push(bp), t.sort(dp), t.forEach((t) => this.addBreakpoint(t)), this.printBreakpoints;
        }
        addBreakpoint(t) {
          t &&
            void 0 === this.printBreakpoints.find((e) => e.mediaQuery === t.mediaQuery) &&
            (this.printBreakpoints = (function (t) {
              return !!t && t.mediaQuery.startsWith('print');
            })(t)
              ? [t, ...this.printBreakpoints]
              : [...this.printBreakpoints, t]);
        }
        clear() {
          this.printBreakpoints = [];
        }
      }
      let vp = (() => {
        class t {
          constructor(t, e, n) {
            (this.breakpoints = t),
              (this.matchMedia = e),
              (this.hook = n),
              (this.filterOverlaps = !1),
              (this.destroyed$ = new ft.a()),
              (this._media$ = this.watchActivations()),
              (this.media$ = this._media$.pipe(
                C((t) => t.length > 0),
                Object(l.a)((t) => t[0])
              ));
          }
          ngOnDestroy() {
            this.destroyed$.next(), this.destroyed$.complete();
          }
          asObservable() {
            return this._media$;
          }
          isActive(t) {
            return (function (t) {
              return Array.isArray(t) ? t : [t];
            })(t)
              .map((t) => t.split(','))
              .reduce((t, e) => t.concat(e))
              .map((t) => t.trim())
              .some((t) => {
                const e = (function (t, e) {
                  const n = e.findByAlias(t) || e.findByQuery(t);
                  return n ? n.mediaQuery : null;
                })(t, this.breakpoints);
                return null !== e && this.matchMedia.isActive(e);
              });
          }
          watchActivations() {
            const t = this.breakpoints.items.map((t) => t.mediaQuery);
            return this.buildObservable(t);
          }
          buildObservable(t) {
            return this.matchMedia.observe(this.hook.withPrintQuery(t)).pipe(
              C((t) => t.matches),
              Fi(0, hr),
              Nt((t) => y(this.findAllActivations())),
              Object(l.a)((t) =>
                this.filterOverlaps
                  ? t.filter((t) => {
                      const e = this.breakpoints.findByQuery(t.mediaQuery);
                      return !e || !e.overlapping;
                    })
                  : t
              ),
              C((t) => t.filter((t) => t.mediaQuery.length > 0).length > 0),
              yr(this.destroyed$)
            );
          }
          findAllActivations() {
            return this.matchMedia.activations
              .map((t) => new qd(!0, t))
              .map((t) => (this.hook.isPrintEvent(t) ? this.hook.updateEvent(t) : t))
              .map((t) => Xd(t, this.breakpoints.findByQuery(t.mediaQuery)))
              .sort(dp);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(mp), s.Yb(fp), s.Yb(_p));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(mp), Object(s.Yb)(fp), Object(s.Yb)(_p));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function wp(t) {
        for (let e in t) {
          let n = t[e] || '';
          switch (e) {
            case 'display':
              t.display =
                'flex' === n
                  ? ['-webkit-flex', 'flex']
                  : 'inline-flex' === n
                  ? ['-webkit-inline-flex', 'inline-flex']
                  : n;
              break;
            case 'align-items':
            case 'align-self':
            case 'align-content':
            case 'flex':
            case 'flex-basis':
            case 'flex-flow':
            case 'flex-grow':
            case 'flex-shrink':
            case 'flex-wrap':
            case 'justify-content':
              t['-webkit-' + e] = n;
              break;
            case 'flex-direction':
              (n = n || 'row'), (t['-webkit-flex-direction'] = n), (t['flex-direction'] = n);
              break;
            case 'order':
              t.order = t['-webkit-' + e] = isNaN(+n) ? '0' : n;
          }
        }
        return t;
      }
      let xp = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._serverStylesheet = t),
              (this._serverModuleLoaded = e),
              (this._platformId = n),
              (this.layoutConfig = i);
          }
          applyStyleToElement(t, e, n = null) {
            let i = {};
            'string' == typeof e && ((i[e] = n), (e = i)),
              (i = this.layoutConfig.disableVendorPrefixes ? e : wp(e)),
              this._applyMultiValueStyleToElement(i, t);
          }
          applyStyleToElements(t, e = []) {
            const n = this.layoutConfig.disableVendorPrefixes ? t : wp(t);
            e.forEach((t) => {
              this._applyMultiValueStyleToElement(n, t);
            });
          }
          getFlowDirection(t) {
            let e = this.lookupStyle(t, 'flex-direction');
            return [
              e || 'row',
              this.lookupInlineStyle(t, 'flex-direction') || (Object(r.u)(this._platformId) && this._serverModuleLoaded)
                ? e
                : '',
            ];
          }
          hasWrap(t) {
            return 'wrap' === this.lookupStyle(t, 'flex-wrap');
          }
          lookupAttributeValue(t, e) {
            return t.getAttribute(e) || '';
          }
          lookupInlineStyle(t, e) {
            return Object(r.t)(this._platformId) ? t.style.getPropertyValue(e) : this._getServerStyle(t, e);
          }
          lookupStyle(t, e, n = !1) {
            let i = '';
            return (
              t &&
                ((i = this.lookupInlineStyle(t, e)) ||
                  (Object(r.t)(this._platformId)
                    ? n || (i = getComputedStyle(t).getPropertyValue(e))
                    : this._serverModuleLoaded && (i = this._serverStylesheet.getStyleForElement(t, e)))),
              i ? i.trim() : ''
            );
          }
          _applyMultiValueStyleToElement(t, e) {
            Object.keys(t)
              .sort()
              .forEach((n) => {
                const i = t[n],
                  s = Array.isArray(i) ? i : [i];
                s.sort();
                for (let t of s)
                  (t = t ? t + '' : ''),
                    Object(r.t)(this._platformId) || !this._serverModuleLoaded
                      ? Object(r.t)(this._platformId)
                        ? e.style.setProperty(n, t)
                        : this._setServerStyle(e, n, t)
                      : this._serverStylesheet.addStyleToElement(e, n, t);
              });
          }
          _setServerStyle(t, e, n) {
            e = e.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
            const i = this._readStyleAttribute(t);
            (i[e] = n || ''), this._writeStyleAttribute(t, i);
          }
          _getServerStyle(t, e) {
            return this._readStyleAttribute(t)[e] || '';
          }
          _readStyleAttribute(t) {
            const e = {},
              n = t.getAttribute('style');
            if (n) {
              const t = n.split(/;+/g);
              for (let n = 0; n < t.length; n++) {
                const i = t[n].trim();
                if (i.length > 0) {
                  const t = i.indexOf(':');
                  if (-1 === t) throw new Error('Invalid CSS style: ' + i);
                  e[i.substr(0, t).trim()] = i.substr(t + 1).trim();
                }
              }
            }
            return e;
          }
          _writeStyleAttribute(t, e) {
            let n = '';
            for (const i in e) e[i] && (n += i + ':' + e[i] + ';');
            t.setAttribute('style', n);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(Wd), s.Yb(Zd), s.Yb(s.C), s.Yb(Qd));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(Wd), Object(s.Yb)(Zd), Object(s.Yb)(s.C), Object(s.Yb)(Qd));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class Cp {
        constructor() {
          this.shouldCache = !0;
        }
        sideEffect(t, e, n) {}
      }
      function Sp(t, e = '1', n = '1') {
        let i = [e, n, t],
          s = t.indexOf('calc');
        if (s > 0) {
          i[2] = Ep(t.substring(s).trim());
          let e = t.substr(0, s).trim().split(' ');
          2 == e.length && ((i[0] = e[0]), (i[1] = e[1]));
        } else if (0 == s) i[2] = Ep(t.trim());
        else {
          let s = t.split(' ');
          i = 3 === s.length ? s : [e, n, t];
        }
        return i;
      }
      function Ep(t) {
        return t.replace(/[\s]/g, '').replace(/[\/\*\+\-]/g, ' $& ');
      }
      let kp = (() => {
        class t {
          constructor(t, e, n) {
            (this.matchMedia = t),
              (this.breakpoints = e),
              (this.hook = n),
              (this.activatedBreakpoints = []),
              (this.elementMap = new Map()),
              (this.elementKeyMap = new WeakMap()),
              (this.watcherMap = new WeakMap()),
              (this.updateMap = new WeakMap()),
              (this.clearMap = new WeakMap()),
              (this.subject = new ft.a()),
              this.observeActivations();
          }
          get activatedAlias() {
            return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';
          }
          onMediaChange(t) {
            const e = this.findByQuery(t.mediaQuery);
            e &&
              ((t = Xd(t, e)).matches && -1 === this.activatedBreakpoints.indexOf(e)
                ? (this.activatedBreakpoints.push(e), this.activatedBreakpoints.sort(dp), this.updateStyles())
                : t.matches ||
                  -1 === this.activatedBreakpoints.indexOf(e) ||
                  (this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(e), 1),
                  this.activatedBreakpoints.sort(dp),
                  this.updateStyles()));
          }
          init(t, e, n, i, s = []) {
            Op(this.updateMap, t, e, n),
              Op(this.clearMap, t, e, i),
              this.buildElementKeyMap(t, e),
              this.watchExtraTriggers(t, e, s);
          }
          getValue(t, e, n) {
            const i = this.elementMap.get(t);
            if (i) {
              const t = void 0 !== n ? i.get(n) : this.getActivatedValues(i, e);
              if (t) return t.get(e);
            }
          }
          hasValue(t, e) {
            const n = this.elementMap.get(t);
            if (n) {
              const t = this.getActivatedValues(n, e);
              if (t) return void 0 !== t.get(e) || !1;
            }
            return !1;
          }
          setValue(t, e, n, i) {
            let s = this.elementMap.get(t);
            if (s) {
              const r = (s.get(i) || new Map()).set(e, n);
              s.set(i, r), this.elementMap.set(t, s);
            } else (s = new Map().set(i, new Map().set(e, n))), this.elementMap.set(t, s);
            const r = this.getValue(t, e);
            void 0 !== r && this.updateElement(t, e, r);
          }
          trackValue(t, e) {
            return this.subject.asObservable().pipe(C((n) => n.element === t && n.key === e));
          }
          updateStyles() {
            this.elementMap.forEach((t, e) => {
              const n = new Set(this.elementKeyMap.get(e));
              let i = this.getActivatedValues(t);
              i &&
                i.forEach((t, i) => {
                  this.updateElement(e, i, t), n.delete(i);
                }),
                n.forEach((n) => {
                  if (((i = this.getActivatedValues(t, n)), i)) {
                    const t = i.get(n);
                    this.updateElement(e, n, t);
                  } else this.clearElement(e, n);
                });
            });
          }
          clearElement(t, e) {
            const n = this.clearMap.get(t);
            if (n) {
              const i = n.get(e);
              i && (i(), this.subject.next({ element: t, key: e, value: '' }));
            }
          }
          updateElement(t, e, n) {
            const i = this.updateMap.get(t);
            if (i) {
              const s = i.get(e);
              s && (s(n), this.subject.next({ element: t, key: e, value: n }));
            }
          }
          releaseElement(t) {
            const e = this.watcherMap.get(t);
            e && (e.forEach((t) => t.unsubscribe()), this.watcherMap.delete(t));
            const n = this.elementMap.get(t);
            n && (n.forEach((t, e) => n.delete(e)), this.elementMap.delete(t));
          }
          triggerUpdate(t, e) {
            const n = this.elementMap.get(t);
            if (n) {
              const i = this.getActivatedValues(n, e);
              i && (e ? this.updateElement(t, e, i.get(e)) : i.forEach((e, n) => this.updateElement(t, n, e)));
            }
          }
          buildElementKeyMap(t, e) {
            let n = this.elementKeyMap.get(t);
            n || ((n = new Set()), this.elementKeyMap.set(t, n)), n.add(e);
          }
          watchExtraTriggers(t, e, n) {
            if (n && n.length) {
              let i = this.watcherMap.get(t);
              if ((i || ((i = new Map()), this.watcherMap.set(t, i)), !i.get(e))) {
                const s = Object(nr.a)(...n).subscribe(() => {
                  const n = this.getValue(t, e);
                  this.updateElement(t, e, n);
                });
                i.set(e, s);
              }
            }
          }
          findByQuery(t) {
            return this.breakpoints.findByQuery(t);
          }
          getActivatedValues(t, e) {
            for (let i = 0; i < this.activatedBreakpoints.length; i++) {
              const n = t.get(this.activatedBreakpoints[i].alias);
              if (n && (void 0 === e || (n.has(e) && null != n.get(e)))) return n;
            }
            const n = t.get('');
            return void 0 === e || (n && n.has(e)) ? n : void 0;
          }
          observeActivations() {
            const t = this.breakpoints.items.map((t) => t.mediaQuery);
            this.matchMedia
              .observe(this.hook.withPrintQuery(t))
              .pipe(ji(this.hook.interceptEvents(this)), C(this.hook.blockPropagation()))
              .subscribe(this.onMediaChange.bind(this));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(fp), s.Yb(mp), s.Yb(_p));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(fp), Object(s.Yb)(mp), Object(s.Yb)(_p));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function Op(t, e, n, i) {
        if (void 0 !== i) {
          let s = t.get(e);
          s || ((s = new Map()), t.set(e, s)), s.set(n, i);
        }
      }
      let Ap = (() => {
        class t extends ep {
          constructor(t, e, n, i, s, o, a) {
            super(t, null, e, n),
              (this.ngClassInstance = a),
              (this.DIRECTIVE_KEY = 'ngClass'),
              this.ngClassInstance || (this.ngClassInstance = new r.i(i, s, t, o)),
              this.init(),
              this.setValue('', '');
          }
          set klass(t) {
            (this.ngClassInstance.klass = t), this.setValue(t, '');
          }
          updateWithValue(t) {
            (this.ngClassInstance.ngClass = t), this.ngClassInstance.ngDoCheck();
          }
          ngDoCheck() {
            this.ngClassInstance.ngDoCheck();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(s.l), s.Ob(xp), s.Ob(kp), s.Ob(s.t), s.Ob(s.u), s.Ob(s.F), s.Ob(r.i, 10));
          }),
          (t.ɵdir = s.Jb({ type: t, inputs: { klass: ['class', 'klass'] }, features: [s.zb] })),
          t
        );
      })();
      const Tp = [
        'ngClass',
        'ngClass.xs',
        'ngClass.sm',
        'ngClass.md',
        'ngClass.lg',
        'ngClass.xl',
        'ngClass.lt-sm',
        'ngClass.lt-md',
        'ngClass.lt-lg',
        'ngClass.lt-xl',
        'ngClass.gt-xs',
        'ngClass.gt-sm',
        'ngClass.gt-md',
        'ngClass.gt-lg',
      ];
      let Ip = (() => {
        class t extends Ap {
          constructor() {
            super(...arguments), (this.inputs = Tp);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Rp(e || t);
          }),
          (t.ɵdir = s.Jb({
            type: t,
            selectors: [
              ['', 'ngClass', ''],
              ['', 'ngClass.xs', ''],
              ['', 'ngClass.sm', ''],
              ['', 'ngClass.md', ''],
              ['', 'ngClass.lg', ''],
              ['', 'ngClass.xl', ''],
              ['', 'ngClass.lt-sm', ''],
              ['', 'ngClass.lt-md', ''],
              ['', 'ngClass.lt-lg', ''],
              ['', 'ngClass.lt-xl', ''],
              ['', 'ngClass.gt-xs', ''],
              ['', 'ngClass.gt-sm', ''],
              ['', 'ngClass.gt-md', ''],
              ['', 'ngClass.gt-lg', ''],
            ],
            inputs: {
              ngClass: 'ngClass',
              'ngClass.xs': 'ngClass.xs',
              'ngClass.sm': 'ngClass.sm',
              'ngClass.md': 'ngClass.md',
              'ngClass.lg': 'ngClass.lg',
              'ngClass.xl': 'ngClass.xl',
              'ngClass.lt-sm': 'ngClass.lt-sm',
              'ngClass.lt-md': 'ngClass.lt-md',
              'ngClass.lt-lg': 'ngClass.lt-lg',
              'ngClass.lt-xl': 'ngClass.lt-xl',
              'ngClass.gt-xs': 'ngClass.gt-xs',
              'ngClass.gt-sm': 'ngClass.gt-sm',
              'ngClass.gt-md': 'ngClass.gt-md',
              'ngClass.gt-lg': 'ngClass.gt-lg',
            },
            features: [s.zb],
          })),
          t
        );
      })();
      const Rp = s.Wb(Ip);
      let Pp = (() => {
        class t extends Cp {
          buildStyles(t, e) {
            return { display: 'true' === t ? e.display || (e.isServer ? 'initial' : '') : 'none' };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Dp(e || t);
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const Dp = s.Wb(Pp);
      let jp = (() => {
        class t extends ep {
          constructor(t, e, n, i, s, r, o) {
            super(t, e, n, i),
              (this.layoutConfig = s),
              (this.platformId = r),
              (this.serverModuleLoaded = o),
              (this.DIRECTIVE_KEY = 'show-hide'),
              (this.display = ''),
              (this.hasLayout = !1),
              (this.hasFlexChild = !1);
          }
          ngAfterViewInit() {
            this.trackExtraTriggers();
            const t = Array.from(this.nativeElement.children);
            for (let n = 0; n < t.length; n++)
              if (this.marshal.hasValue(t[n], 'flex')) {
                this.hasFlexChild = !0;
                break;
              }
            Lp.has(this.nativeElement)
              ? (this.display = Lp.get(this.nativeElement))
              : ((this.display = this.getDisplayStyle()), Lp.set(this.nativeElement, this.display)),
              this.init();
            const e = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');
            void 0 === e || '' === e ? this.setValue(!0, '') : this.triggerUpdate();
          }
          ngOnChanges(t) {
            Object.keys(t).forEach((e) => {
              if (-1 !== this.inputs.indexOf(e)) {
                const n = e.split('.'),
                  i = n.slice(1).join('.'),
                  s = t[e].currentValue;
                let r = '' === s || (0 !== s && Ui(s));
                'fxHide' === n[0] && (r = !r), this.setValue(r, i);
              }
            });
          }
          trackExtraTriggers() {
            (this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout')),
              ['layout', 'layout-align'].forEach((t) => {
                this.marshal
                  .trackValue(this.nativeElement, t)
                  .pipe(yr(this.destroySubject))
                  .subscribe(this.triggerUpdate.bind(this));
              });
          }
          getDisplayStyle() {
            return this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)
              ? 'flex'
              : this.styler.lookupStyle(this.nativeElement, 'display', !0);
          }
          updateWithValue(t = !0) {
            if ('' === t) return;
            const e = Object(r.u)(this.platformId);
            this.addStyles(t ? 'true' : 'false', { display: this.display, isServer: e }),
              e && this.serverModuleLoaded && this.nativeElement.style.setProperty('display', ''),
              this.marshal.triggerUpdate(this.parentElement, 'layout-gap');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(s.l), s.Ob(Pp), s.Ob(xp), s.Ob(kp), s.Ob(Qd), s.Ob(s.C), s.Ob(Zd));
          }),
          (t.ɵdir = s.Jb({ type: t, features: [s.zb, s.Ab] })),
          t
        );
      })();
      const Lp = new WeakMap(),
        Mp = [
          'fxShow',
          'fxShow.print',
          'fxShow.xs',
          'fxShow.sm',
          'fxShow.md',
          'fxShow.lg',
          'fxShow.xl',
          'fxShow.lt-sm',
          'fxShow.lt-md',
          'fxShow.lt-lg',
          'fxShow.lt-xl',
          'fxShow.gt-xs',
          'fxShow.gt-sm',
          'fxShow.gt-md',
          'fxShow.gt-lg',
          'fxHide',
          'fxHide.print',
          'fxHide.xs',
          'fxHide.sm',
          'fxHide.md',
          'fxHide.lg',
          'fxHide.xl',
          'fxHide.lt-sm',
          'fxHide.lt-md',
          'fxHide.lt-lg',
          'fxHide.lt-xl',
          'fxHide.gt-xs',
          'fxHide.gt-sm',
          'fxHide.gt-md',
          'fxHide.gt-lg',
        ];
      let Np = (() => {
        class t extends jp {
          constructor() {
            super(...arguments), (this.inputs = Mp);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Fp(e || t);
          }),
          (t.ɵdir = s.Jb({
            type: t,
            selectors: [
              ['', 'fxShow', ''],
              ['', 'fxShow.print', ''],
              ['', 'fxShow.xs', ''],
              ['', 'fxShow.sm', ''],
              ['', 'fxShow.md', ''],
              ['', 'fxShow.lg', ''],
              ['', 'fxShow.xl', ''],
              ['', 'fxShow.lt-sm', ''],
              ['', 'fxShow.lt-md', ''],
              ['', 'fxShow.lt-lg', ''],
              ['', 'fxShow.lt-xl', ''],
              ['', 'fxShow.gt-xs', ''],
              ['', 'fxShow.gt-sm', ''],
              ['', 'fxShow.gt-md', ''],
              ['', 'fxShow.gt-lg', ''],
              ['', 'fxHide', ''],
              ['', 'fxHide.print', ''],
              ['', 'fxHide.xs', ''],
              ['', 'fxHide.sm', ''],
              ['', 'fxHide.md', ''],
              ['', 'fxHide.lg', ''],
              ['', 'fxHide.xl', ''],
              ['', 'fxHide.lt-sm', ''],
              ['', 'fxHide.lt-md', ''],
              ['', 'fxHide.lt-lg', ''],
              ['', 'fxHide.lt-xl', ''],
              ['', 'fxHide.gt-xs', ''],
              ['', 'fxHide.gt-sm', ''],
              ['', 'fxHide.gt-md', ''],
              ['', 'fxHide.gt-lg', ''],
            ],
            inputs: {
              fxShow: 'fxShow',
              'fxShow.print': 'fxShow.print',
              'fxShow.xs': 'fxShow.xs',
              'fxShow.sm': 'fxShow.sm',
              'fxShow.md': 'fxShow.md',
              'fxShow.lg': 'fxShow.lg',
              'fxShow.xl': 'fxShow.xl',
              'fxShow.lt-sm': 'fxShow.lt-sm',
              'fxShow.lt-md': 'fxShow.lt-md',
              'fxShow.lt-lg': 'fxShow.lt-lg',
              'fxShow.lt-xl': 'fxShow.lt-xl',
              'fxShow.gt-xs': 'fxShow.gt-xs',
              'fxShow.gt-sm': 'fxShow.gt-sm',
              'fxShow.gt-md': 'fxShow.gt-md',
              'fxShow.gt-lg': 'fxShow.gt-lg',
              fxHide: 'fxHide',
              'fxHide.print': 'fxHide.print',
              'fxHide.xs': 'fxHide.xs',
              'fxHide.sm': 'fxHide.sm',
              'fxHide.md': 'fxHide.md',
              'fxHide.lg': 'fxHide.lg',
              'fxHide.xl': 'fxHide.xl',
              'fxHide.lt-sm': 'fxHide.lt-sm',
              'fxHide.lt-md': 'fxHide.lt-md',
              'fxHide.lt-lg': 'fxHide.lt-lg',
              'fxHide.lt-xl': 'fxHide.lt-xl',
              'fxHide.gt-xs': 'fxHide.gt-xs',
              'fxHide.gt-sm': 'fxHide.gt-sm',
              'fxHide.gt-md': 'fxHide.gt-md',
              'fxHide.gt-lg': 'fxHide.gt-lg',
            },
            features: [s.zb],
          })),
          t
        );
      })();
      const Fp = s.Wb(Np);
      let Vp = (() => {
        class t {}
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)();
            },
            imports: [[$d]],
          })),
          t
        );
      })();
      const Hp = ['row', 'column', 'row-reverse', 'column-reverse'];
      function Bp(t) {
        let [e] = (function (t) {
          t = t ? t.toLowerCase() : '';
          let [e, n, i] = t.split(' ');
          return (
            Hp.find((t) => t === e) || (e = Hp[0]),
            'inline' === n && ((n = 'inline' !== i ? i : ''), (i = 'inline')),
            [e, Up(n), !!i]
          );
        })(t);
        return e.indexOf('row') > -1;
      }
      function Up(t) {
        if (t)
          switch (t.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
            case 'reverse-wrap':
              t = 'wrap-reverse';
              break;
            case 'no':
            case 'none':
            case 'nowrap':
              t = 'nowrap';
              break;
            default:
              t = 'wrap';
          }
        return t;
      }
      function zp(t, ...e) {
        if (null == t) throw TypeError('Cannot convert undefined or null to object');
        for (let n of e) if (null != n) for (let e in n) n.hasOwnProperty(e) && (t[e] = n[e]);
        return t;
      }
      let Yp = (() => {
        class t extends Cp {
          constructor(t) {
            super(), (this.layoutConfig = t);
          }
          buildStyles(t, e) {
            let [n, i, ...s] = t.split(' '),
              r = s.join(' ');
            const o = e.direction.indexOf('column') > -1 ? 'column' : 'row',
              a = Bp(o) ? 'max-width' : 'max-height',
              l = Bp(o) ? 'min-width' : 'min-height',
              c = String(r).indexOf('calc') > -1,
              u = c || 'auto' === r,
              h = String(r).indexOf('%') > -1 && !c,
              d =
                String(r).indexOf('px') > -1 ||
                String(r).indexOf('rem') > -1 ||
                String(r).indexOf('em') > -1 ||
                String(r).indexOf('vw') > -1 ||
                String(r).indexOf('vh') > -1;
            let p = c || d;
            (n = '0' == n ? 0 : n), (i = '0' == i ? 0 : i);
            const m = !n && !i;
            let f = {};
            const g = { 'max-width': null, 'max-height': null, 'min-width': null, 'min-height': null };
            switch (r || '') {
              case '':
                const t = !1 !== this.layoutConfig.useColumnBasisZero;
                r = 'row' === o ? '0%' : t ? '0.000000001px' : 'auto';
                break;
              case 'initial':
              case 'nogrow':
                (n = 0), (r = 'auto');
                break;
              case 'grow':
                r = '100%';
                break;
              case 'noshrink':
                (i = 0), (r = 'auto');
                break;
              case 'auto':
                break;
              case 'none':
                (n = 0), (i = 0), (r = 'auto');
                break;
              default:
                p || h || isNaN(r) || (r += '%'),
                  '0%' === r && (p = !0),
                  '0px' === r && (r = '0%'),
                  (f = zp(
                    g,
                    c
                      ? { 'flex-grow': n, 'flex-shrink': i, 'flex-basis': p ? r : '100%' }
                      : { flex: `${n} ${i} ${p ? r : '100%'}` }
                  ));
            }
            return (
              f.flex ||
                f['flex-grow'] ||
                (f = zp(g, c ? { 'flex-grow': n, 'flex-shrink': i, 'flex-basis': r } : { flex: `${n} ${i} ${r}` })),
              '0%' !== r &&
                '0px' !== r &&
                '0.000000001px' !== r &&
                'auto' !== r &&
                ((f[l] = m || (p && n) ? r : null), (f[a] = m || (!u && i) ? r : null)),
              f[l] || f[a]
                ? e.hasWrap &&
                  (f[c ? 'flex-basis' : 'flex'] = f[a]
                    ? c
                      ? f[a]
                      : `${n} ${i} ${f[a]}`
                    : c
                    ? f[l]
                    : `${n} ${i} ${f[l]}`)
                : (f = zp(g, c ? { 'flex-grow': n, 'flex-shrink': i, 'flex-basis': r } : { flex: `${n} ${i} ${r}` })),
              zp(f, { 'box-sizing': 'border-box' })
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(Qd));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t(Object(s.Yb)(Qd));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const $p = [
        'fxFlex',
        'fxFlex.xs',
        'fxFlex.sm',
        'fxFlex.md',
        'fxFlex.lg',
        'fxFlex.xl',
        'fxFlex.lt-sm',
        'fxFlex.lt-md',
        'fxFlex.lt-lg',
        'fxFlex.lt-xl',
        'fxFlex.gt-xs',
        'fxFlex.gt-sm',
        'fxFlex.gt-md',
        'fxFlex.gt-lg',
      ];
      let qp = (() => {
          class t extends ep {
            constructor(t, e, n, i, s) {
              super(t, i, e, s),
                (this.layoutConfig = n),
                (this.marshal = s),
                (this.DIRECTIVE_KEY = 'flex'),
                (this.direction = void 0),
                (this.wrap = void 0),
                (this.flexGrow = '1'),
                (this.flexShrink = '1'),
                this.init();
            }
            get shrink() {
              return this.flexShrink;
            }
            set shrink(t) {
              (this.flexShrink = t || '1'), this.triggerReflow();
            }
            get grow() {
              return this.flexGrow;
            }
            set grow(t) {
              (this.flexGrow = t || '1'), this.triggerReflow();
            }
            ngOnInit() {
              this.parentElement &&
                (this.marshal
                  .trackValue(this.parentElement, 'layout')
                  .pipe(yr(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this)),
                this.marshal
                  .trackValue(this.nativeElement, 'layout-align')
                  .pipe(yr(this.destroySubject))
                  .subscribe(this.triggerReflow.bind(this)));
            }
            onLayoutChange(t) {
              const e = t.value.split(' ');
              (this.direction = e[0]), (this.wrap = void 0 !== e[1] && 'wrap' === e[1]), this.triggerUpdate();
            }
            updateWithValue(t) {
              void 0 === this.direction &&
                (this.direction = this.getFlexFlowDirection(
                  this.parentElement,
                  !1 !== this.layoutConfig.addFlexToParent
                )),
                void 0 === this.wrap && (this.wrap = this.hasWrap(this.parentElement));
              const e = this.direction,
                n = e.startsWith('row'),
                i = this.wrap;
              n && i
                ? (this.styleCache = Gp)
                : n && !i
                ? (this.styleCache = Qp)
                : !n && i
                ? (this.styleCache = Xp)
                : n || i || (this.styleCache = Zp);
              const s = Sp(String(t).replace(';', ''), this.flexGrow, this.flexShrink);
              this.addStyles(s.join(' '), { direction: e, hasWrap: i });
            }
            triggerReflow() {
              const t = this.activatedValue;
              if (void 0 !== t) {
                const e = Sp(t + '', this.flexGrow, this.flexShrink);
                this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, e.join(' '));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(s.l), s.Ob(xp), s.Ob(Qd), s.Ob(Yp), s.Ob(kp));
            }),
            (t.ɵdir = s.Jb({
              type: t,
              inputs: { shrink: ['fxShrink', 'shrink'], grow: ['fxGrow', 'grow'] },
              features: [s.zb],
            })),
            t
          );
        })(),
        Wp = (() => {
          class t extends qp {
            constructor() {
              super(...arguments), (this.inputs = $p);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return Kp(e || t);
            }),
            (t.ɵdir = s.Jb({
              type: t,
              selectors: [
                ['', 'fxFlex', ''],
                ['', 'fxFlex.xs', ''],
                ['', 'fxFlex.sm', ''],
                ['', 'fxFlex.md', ''],
                ['', 'fxFlex.lg', ''],
                ['', 'fxFlex.xl', ''],
                ['', 'fxFlex.lt-sm', ''],
                ['', 'fxFlex.lt-md', ''],
                ['', 'fxFlex.lt-lg', ''],
                ['', 'fxFlex.lt-xl', ''],
                ['', 'fxFlex.gt-xs', ''],
                ['', 'fxFlex.gt-sm', ''],
                ['', 'fxFlex.gt-md', ''],
                ['', 'fxFlex.gt-lg', ''],
              ],
              inputs: {
                fxFlex: 'fxFlex',
                'fxFlex.xs': 'fxFlex.xs',
                'fxFlex.sm': 'fxFlex.sm',
                'fxFlex.md': 'fxFlex.md',
                'fxFlex.lg': 'fxFlex.lg',
                'fxFlex.xl': 'fxFlex.xl',
                'fxFlex.lt-sm': 'fxFlex.lt-sm',
                'fxFlex.lt-md': 'fxFlex.lt-md',
                'fxFlex.lt-lg': 'fxFlex.lt-lg',
                'fxFlex.lt-xl': 'fxFlex.lt-xl',
                'fxFlex.gt-xs': 'fxFlex.gt-xs',
                'fxFlex.gt-sm': 'fxFlex.gt-sm',
                'fxFlex.gt-md': 'fxFlex.gt-md',
                'fxFlex.gt-lg': 'fxFlex.gt-lg',
              },
              features: [s.zb],
            })),
            t
          );
        })();
      const Kp = s.Wb(Wp),
        Qp = new Map(),
        Zp = new Map(),
        Gp = new Map(),
        Xp = new Map(),
        Jp = { margin: 0, width: '100%', height: '100%', 'min-width': '100%', 'min-height': '100%' };
      let tm = (() => {
        class t extends Cp {
          buildStyles(t) {
            return Jp;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return em(e || t);
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const em = s.Wb(tm);
      let nm = (() => {
        class t extends ep {
          constructor(t, e, n, i) {
            super(t, n, e, i), (this.styleCache = im), this.addStyles('');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(s.l), s.Ob(xp), s.Ob(tm), s.Ob(kp));
          }),
          (t.ɵdir = s.Jb({
            type: t,
            selectors: [
              ['', 'fxFill', ''],
              ['', 'fxFlexFill', ''],
            ],
            features: [s.zb],
          })),
          t
        );
      })();
      const im = new Map();
      let sm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[$d, ys]],
            })),
            t
          );
        })(),
        rm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[$d]],
            })),
            t
          );
        })(),
        om = (() => {
          class t {
            constructor(t, e) {
              Object(r.u)(e) &&
                !t &&
                console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');
            }
            static withConfig(e, n = []) {
              return {
                ngModule: t,
                providers: e.serverLoaded
                  ? [
                      { provide: Qd, useValue: Object.assign(Object.assign({}, Kd), e) },
                      { provide: Gd, useValue: n, multi: !0 },
                      { provide: Zd, useValue: !0 },
                    ]
                  : [
                      { provide: Qd, useValue: Object.assign(Object.assign({}, Kd), e) },
                      { provide: Gd, useValue: n, multi: !0 },
                    ],
              };
            }
          }
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)(s.Yb(Zd), s.Yb(s.C));
              },
              imports: [[sm, Vp, rm], sm, Vp, rm],
            })),
            t
          );
        })(),
        am = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[om, Sc, r.c]],
            })),
            t
          );
        })(),
        lm = (() => {
          class t {
            constructor() {
              (this.isLoading = !1), (this.size = 1);
            }
            ngOnInit() {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['app-loader']],
              inputs: { isLoading: 'isLoading', size: 'size', message: 'message' },
              decls: 8,
              vars: 4,
              consts: [
                [3, 'hidden'],
                ['mode', 'indeterminate', 3, 'strokeWidth', 'diameter'],
                [1, 'message'],
              ],
              template: function (t, e) {
                1 & t &&
                  (s.Ub(0, 'div', 0),
                  s.Ac(1, '\n  '),
                  s.Pb(2, 'mat-progress-spinner', 1),
                  s.Ac(3, '\n  '),
                  s.Ub(4, 'span', 2),
                  s.Ac(5),
                  s.Tb(),
                  s.Ac(6, '\n'),
                  s.Tb(),
                  s.Ac(7, '\n')),
                  2 & t &&
                    (s.lc('hidden', !e.isLoading),
                    s.Cb(2),
                    s.lc('strokeWidth', 2)('diameter', 32 * e.size),
                    s.Cb(3),
                    s.Bc(e.message));
              },
              directives: [Al],
              styles: [
                '.mat-progress-spinner[_ngcontent-%COMP%]{display:inline-block;vertical-align:middle}.message[_ngcontent-%COMP%]{margin-left:.5em}',
              ],
            })),
            t
          );
        })(),
        cm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, oe, om, Sc]],
            })),
            t
          );
        })();
      var um = n('A/Ql');
      const hm = new Fd('I18nService');
      let dm = (() => {
        class t {
          constructor(t) {
            (this.translateService = t), t.setTranslation('en-US', um);
          }
          init(t, e) {
            (this.defaultLanguage = t),
              (this.supportedLanguages = e),
              (this.language = ''),
              (this.langChangeSubscription = this.translateService.onLangChange.subscribe((t) => {
                localStorage.setItem('language', t.lang);
              }));
          }
          destroy() {
            this.langChangeSubscription && this.langChangeSubscription.unsubscribe();
          }
          set language(t) {
            t = t || localStorage.getItem('language') || this.translateService.getBrowserCultureLang();
            let e = this.supportedLanguages.includes(t);
            t &&
              !e &&
              ((t = t.split('-')[0]),
              (t = this.supportedLanguages.find((e) => e.startsWith(t)) || ''),
              (e = Boolean(t))),
              e || (t = this.defaultLanguage),
              hm.debug('Language set to ' + t),
              this.translateService.use(t);
          }
          get language() {
            return this.translateService.currentLang;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(se));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      function pm(t, e) {
        if (
          (1 & t &&
            (s.Ub(0, 'button', 4),
            s.Ac(1, '\n  '),
            s.Ub(2, 'mat-icon'),
            s.Ac(3, 'language'),
            s.Tb(),
            s.Ac(4, '\n'),
            s.Tb()),
          2 & t)
        ) {
          s.gc();
          const t = s.qc(6);
          s.lc('matMenuTriggerFor', t);
        }
      }
      function mm(t, e) {
        if ((1 & t && (s.Ac(0, '\n  '), s.Ub(1, 'button', 5), s.Ac(2), s.Tb(), s.Ac(3, '\n')), 2 & t)) {
          const t = s.gc(),
            e = s.qc(6);
          s.Cb(1), s.lc('matMenuTriggerFor', e), s.Cb(1), s.Cc('\n    ', t.currentLanguage, '\n  ');
        }
      }
      function fm(t, e) {
        if (1 & t) {
          const t = s.Vb();
          s.Ub(0, 'button', 6),
            s.cc('click', function () {
              s.sc(t);
              const n = e.$implicit;
              return s.gc().setLanguage(n);
            }),
            s.Ac(1),
            s.Tb();
        }
        if (2 & t) {
          const t = e.$implicit;
          s.Cb(1), s.Cc('\n    ', t, '\n  ');
        }
      }
      let gm = (() => {
          class t {
            constructor(t) {
              (this.i18nService = t), (this.icon = !1);
            }
            ngOnInit() {}
            setLanguage(t) {
              this.i18nService.language = t;
            }
            get currentLanguage() {
              return this.i18nService.language;
            }
            get languages() {
              return this.i18nService.supportedLanguages;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(dm));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['app-language-selector']],
              inputs: { icon: 'icon' },
              decls: 11,
              vars: 3,
              consts: [
                ['mat-icon-button', '', 3, 'matMenuTriggerFor', 4, 'ngIf', 'ngIfElse'],
                ['text', ''],
                ['languageMenu', 'matMenu'],
                ['mat-menu-item', '', 3, 'click', 4, 'ngFor', 'ngForOf'],
                ['mat-icon-button', '', 3, 'matMenuTriggerFor'],
                ['mat-raised-button', '', 'color', 'primary', 3, 'matMenuTriggerFor'],
                ['mat-menu-item', '', 3, 'click'],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (s.yc(0, pm, 5, 1, 'button', 0),
                    s.Ac(1, '\n'),
                    s.yc(2, mm, 4, 2, 'ng-template', null, 1, s.zc),
                    s.Ac(4, '\n'),
                    s.Ub(5, 'mat-menu', null, 2),
                    s.Ac(7, '\n  '),
                    s.yc(8, fm, 2, 1, 'button', 3),
                    s.Ac(9, '\n'),
                    s.Tb(),
                    s.Ac(10, '\n')),
                  2 & t)
                ) {
                  const t = s.qc(3);
                  s.lc('ngIf', e.icon)('ngIfElse', t), s.Cb(8), s.lc('ngForOf', e.languages);
                }
              },
              directives: [r.k, rl, r.j, So, cl, Ta, Ja],
              styles: [''],
            })),
            t
          );
        })(),
        bm = (() => {
          class t {
            constructor(t) {
              this.httpClient = t;
            }
            getRandomQuote(t) {
              return this.httpClient.get(((e = t), '/jokes/random?category=' + e.category)).pipe(
                Object(l.a)((t) => t.value),
                la(() => y('Error, could not load joke :-('))
              );
              var e;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(U));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            t
          );
        })(),
        _m = (() => {
          class t {
            constructor(t) {
              (this.quoteService = t), (this.isLoading = !1);
            }
            ngOnInit() {
              (this.isLoading = !0),
                this.quoteService
                  .getRandomQuote({ category: 'dev' })
                  .pipe(
                    ha(() => {
                      this.isLoading = !1;
                    })
                  )
                  .subscribe((t) => {
                    this.quote = t;
                  });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(bm));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['app-home']],
              decls: 25,
              vars: 3,
              consts: [
                [1, 'container'],
                ['src', 'assets/ngx-rocket-logo.png', 'alt', 'angular logo', 1, 'logo'],
                ['translate', ''],
                ['size', '1.5', 3, 'isLoading'],
                [3, 'hidden'],
              ],
              template: function (t, e) {
                1 & t &&
                  (s.Ub(0, 'div', 0),
                  s.Ac(1, '\n  '),
                  s.Ub(2, 'mat-card'),
                  s.Ac(3, '\n    '),
                  s.Ub(4, 'p'),
                  s.Ac(5, '\n      '),
                  s.Pb(6, 'img', 1),
                  s.Ac(7, '\n    '),
                  s.Tb(),
                  s.Ac(8, '\n    '),
                  s.Ub(9, 'mat-card-content'),
                  s.Ac(10, '\n      '),
                  s.Ub(11, 'mat-card-title', 2),
                  s.Ac(12, 'Hello world !'),
                  s.Tb(),
                  s.Ac(13, '\n      '),
                  s.Ub(14, 'mat-card-subtitle'),
                  s.Ac(15, '\n        '),
                  s.Pb(16, 'app-loader', 3),
                  s.Ac(17, '\n        '),
                  s.Ub(18, 'q', 4),
                  s.Ac(19),
                  s.Tb(),
                  s.Ac(20, '\n      '),
                  s.Tb(),
                  s.Ac(21, '\n    '),
                  s.Tb(),
                  s.Ac(22, '\n  '),
                  s.Tb(),
                  s.Ac(23, '\n'),
                  s.Tb(),
                  s.Ac(24, '\n')),
                  2 & t &&
                    (s.Cb(16),
                    s.lc('isLoading', e.isLoading),
                    s.Cb(2),
                    s.lc('hidden', e.isLoading),
                    s.Cb(1),
                    s.Bc(e.quote));
              },
              directives: [Po, To, Io, re, Ro, lm],
              styles: [
                '@charset "UTF-8";.container[_ngcontent-%COMP%]{text-align:center;padding:1em}.logo[_ngcontent-%COMP%]{width:150px;margin:0 auto}q[_ngcontent-%COMP%]{font-style:italic;quotes:"\xab " " \xbb"}',
              ],
            })),
            t
          );
        })(),
        ym = (() => {
          class t {
            constructor(t, e, n) {
              (this.router = t), (this.titleService = e), (this.media = n);
            }
            ngOnInit() {}
            get isMobile() {
              return this.media.isActive('xs') || this.media.isActive('sm');
            }
            get title() {
              return this.titleService.getTitle();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Ob(ad), s.Ob(i.d), s.Ob(vp));
            }),
            (t.ɵcmp = s.Ib({
              type: t,
              selectors: [['app-shell']],
              decls: 63,
              vars: 4,
              consts: [
                ['fxFlex', ''],
                ['fxFill', ''],
                ['ngClass.gt-sm', 'has-border', 3, 'mode', 'opened', 'disableClose'],
                ['sidenav', ''],
                ['color', 'primary'],
                ['translate', ''],
                ['icon', 'true'],
                ['mat-list-item', '', 'routerLink', '/home', 'routerLinkActive', 'active', 3, 'click'],
                ['mat-list-item', '', 'routerLink', '/about', 'routerLinkActive', 'active', 3, 'click'],
                ['color', 'primary', 1, 'mat-elevation-z6'],
                ['mat-icon-button', '', 'fxHide.gt-sm', '', 1, 'menu-button', 3, 'click'],
              ],
              template: function (t, e) {
                if (1 & t) {
                  const t = s.Vb();
                  s.Ub(0, 'div', 0),
                    s.Ac(1, '\n  '),
                    s.Ub(2, 'mat-sidenav-container', 1),
                    s.Ac(3, '\n    '),
                    s.Ub(4, 'mat-sidenav', 2, 3),
                    s.Ac(6, '\n      '),
                    s.Ub(7, 'mat-toolbar', 4),
                    s.Ac(8, '\n        '),
                    s.Ub(9, 'span', 5),
                    s.Ac(10, 'APP_NAME'),
                    s.Tb(),
                    s.Ac(11, '\n        '),
                    s.Pb(12, 'div', 0),
                    s.Ac(13, '\n        '),
                    s.Pb(14, 'div'),
                    s.Ac(15, '\n        '),
                    s.Pb(16, 'app-language-selector', 6),
                    s.Ac(17, '\n      '),
                    s.Tb(),
                    s.Ac(18, '\n      '),
                    s.Ub(19, 'nav'),
                    s.Ac(20, '\n        '),
                    s.Ub(21, 'mat-list'),
                    s.Ac(22, '\n          '),
                    s.Pb(23, 'mat-divider'),
                    s.Ac(24, '\n          '),
                    s.Ub(25, 'a', 7),
                    s.cc('click', function () {
                      s.sc(t);
                      const n = s.qc(5);
                      return e.isMobile && n.close();
                    }),
                    s.Ac(26, '\n            '),
                    s.Ub(27, 'span', 5),
                    s.Ac(28, 'Home'),
                    s.Tb(),
                    s.Ac(29, '\n          '),
                    s.Tb(),
                    s.Ac(30, '\n          '),
                    s.Pb(31, 'mat-divider'),
                    s.Ac(32, '\n          '),
                    s.Ub(33, 'a', 8),
                    s.cc('click', function () {
                      s.sc(t);
                      const n = s.qc(5);
                      return e.isMobile && n.close();
                    }),
                    s.Ac(34, '\n            '),
                    s.Ub(35, 'span', 5),
                    s.Ac(36, 'About'),
                    s.Tb(),
                    s.Ac(37, '\n          '),
                    s.Tb(),
                    s.Ac(38, '\n          '),
                    s.Pb(39, 'mat-divider'),
                    s.Ac(40, '\n        '),
                    s.Tb(),
                    s.Ac(41, '\n      '),
                    s.Tb(),
                    s.Ac(42, '\n    '),
                    s.Tb(),
                    s.Ac(43, '\n    '),
                    s.Ub(44, 'mat-sidenav-content'),
                    s.Ac(45, '\n      '),
                    s.Ub(46, 'mat-toolbar', 9),
                    s.Ac(47, '\n        '),
                    s.Ub(48, 'button', 10),
                    s.cc('click', function () {
                      return s.sc(t), s.qc(5).toggle();
                    }),
                    s.Ac(49, '\n          '),
                    s.Ub(50, 'mat-icon'),
                    s.Ac(51, 'menu'),
                    s.Tb(),
                    s.Ac(52, '\n        '),
                    s.Tb(),
                    s.Ac(53, '\n        '),
                    s.Ub(54, 'span'),
                    s.Ac(55),
                    s.Tb(),
                    s.Ac(56, '\n      '),
                    s.Tb(),
                    s.Ac(57, '\n      '),
                    s.Pb(58, 'router-outlet'),
                    s.Ac(59, '\n    '),
                    s.Tb(),
                    s.Ac(60, '\n  '),
                    s.Tb(),
                    s.Ac(61, '\n'),
                    s.Tb(),
                    s.Ac(62, '\n');
                }
                2 & t &&
                  (s.Cb(4),
                  s.lc('mode', e.isMobile ? 'over' : 'side')('opened', !e.isMobile)('disableClose', !e.isMobile),
                  s.Cb(51),
                  s.Bc(e.title));
              },
              directives: [Wp, Zl, nm, Kl, Ip, yc, re, gm, Ha, ia, za, cd, hd, Wl, So, Np, Ta, md],
              styles: [
                '[_nghost-%COMP%]{display:flex;flex:1}.mat-sidenav[_ngcontent-%COMP%]{min-width:270px;max-width:28%}.has-border[_ngcontent-%COMP%]{border-right:1px solid rgba(0,0,0,.12)}.mat-list[_ngcontent-%COMP%]{padding-top:0}.mat-list-item[_ngcontent-%COMP%]{text-decoration:none}.mat-list-item[_ngcontent-%COMP%]:hover{background:rgba(0,0,0,.05)}.menu-button[_ngcontent-%COMP%]{margin-right:1rem}',
              ],
            })),
            t
          );
        })();
      class vm {
        static childRoutes(t) {
          return { path: '', component: ym, children: t, data: { reuse: !0 } };
        }
      }
      const wm = [
        vm.childRoutes([
          { path: '', redirectTo: '/home', pathMatch: 'full' },
          { path: 'home', component: _m, data: { title: 'Home' } },
        ]),
      ];
      let xm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [],
              imports: [[Sd.forChild(wm)], Sd],
            })),
            t
          );
        })(),
        Cm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, oe, Bd, am, om, Sc, xm]],
            })),
            t
          );
        })(),
        Sm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, oe, om, Sc, cm, Sd]],
            })),
            t
          );
        })();
      const Em = [
        vm.childRoutes([
          {
            path: 'about',
            component: (() => {
              class t {
                constructor() {
                  this.version = Ld.a.version;
                }
                ngOnInit() {}
              }
              return (
                (t.ɵfac = function (e) {
                  return new (e || t)();
                }),
                (t.ɵcmp = s.Ib({
                  type: t,
                  selectors: [['app-about']],
                  decls: 21,
                  vars: 1,
                  consts: [
                    [1, 'container'],
                    ['translate', ''],
                  ],
                  template: function (t, e) {
                    1 & t &&
                      (s.Ub(0, 'div', 0),
                      s.Ac(1, '\n  '),
                      s.Ub(2, 'mat-card'),
                      s.Ac(3, '\n    '),
                      s.Ub(4, 'h1'),
                      s.Ac(5, '\n      '),
                      s.Ub(6, 'mat-card-title', 1),
                      s.Ac(7, 'APP_NAME'),
                      s.Tb(),
                      s.Ac(8, '\n    '),
                      s.Tb(),
                      s.Ac(9, '\n    '),
                      s.Ub(10, 'mat-card-content'),
                      s.Ac(11, '\n      '),
                      s.Ub(12, 'mat-icon'),
                      s.Ac(13, 'code'),
                      s.Tb(),
                      s.Ac(14, '\n      '),
                      s.Ub(15, 'span', 1),
                      s.Ac(16, 'Version'),
                      s.Tb(),
                      s.Ac(17),
                      s.Tb(),
                      s.Ac(18, '\n  '),
                      s.Tb(),
                      s.Ac(19, '\n'),
                      s.Tb(),
                      s.Ac(20, '\n')),
                      2 & t && (s.Cb(17), s.Cc(' ', e.version, '\n    '));
                  },
                  directives: [Po, Io, re, To, Ta],
                  styles: [
                    '.container[_ngcontent-%COMP%]{text-align:center;padding:1rem}.mat-icon[_ngcontent-%COMP%]{vertical-align:middle}',
                  ],
                })),
                t
              );
            })(),
            data: { title: 'About' },
          },
        ]),
      ];
      let km = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [],
              imports: [[Sd.forChild(Em)], Sd],
            })),
            t
          );
        })(),
        Om = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              imports: [[r.c, oe, om, Sc, km]],
            })),
            t
          );
        })();
      const Am = new Fd('App');
      let Tm = (() => {
        class t {
          constructor(t, e, n, i, s) {
            (this.router = t),
              (this.activatedRoute = e),
              (this.titleService = n),
              (this.translateService = i),
              (this.i18nService = s);
          }
          ngOnInit() {
            Ld.a.production && Fd.enableProductionMode(),
              Am.debug('init'),
              this.i18nService.init(Ld.a.defaultLanguage, Ld.a.supportedLanguages);
            const t = this.router.events.pipe(C((t) => t instanceof Wc));
            Object(nr.a)(this.translateService.onLangChange, t)
              .pipe(
                Object(l.a)(() => {
                  let t = this.activatedRoute;
                  for (; t.firstChild; ) t = t.firstChild;
                  return t;
                }),
                C((t) => 'primary' === t.outlet),
                Nt((t) => t.data),
                (function (t, e = 'ngOnDestroy') {
                  return (n) => {
                    const i = t[e],
                      s = 'function' == typeof i;
                    if (!s) throw new Error(`${t.constructor.name} is using untilDestroyed but doesn't implement ${e}`);
                    return (
                      t[Ud] ||
                        ((t[Ud] = new ft.a()),
                        (t[e] = function () {
                          s && i.apply(this, arguments), t[Ud].next(), t[Ud].complete();
                        })),
                      n.pipe(yr(t[Ud]))
                    );
                  };
                })(this)
              )
              .subscribe((t) => {
                const e = t.title;
                e && this.titleService.setTitle(this.translateService.instant(e));
              });
          }
          ngOnDestroy() {
            this.i18nService.destroy();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Ob(ad), s.Ob(Xu), s.Ob(i.d), s.Ob(se), s.Ob(dm));
          }),
          (t.ɵcmp = s.Ib({
            type: t,
            selectors: [['app-root']],
            decls: 2,
            vars: 0,
            template: function (t, e) {
              1 & t && (s.Pb(0, 'router-outlet'), s.Ac(1, '\n'));
            },
            directives: [md],
            styles: ['[_nghost-%COMP%]{display:flex;flex:1}'],
          })),
          t
        );
      })();
      const Im = [{ path: '**', redirectTo: '', pathMatch: 'full' }];
      let Rm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [],
              imports: [[Sd.forRoot(Im)], Sd],
            })),
            t
          );
        })(),
        Pm = (() => {
          class t {}
          return (
            (t.ɵmod = s.Mb({ type: t, bootstrap: [Tm] })),
            (t.ɵinj = s.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [],
              imports: [[i.a, f, it, oe.forRoot(), Ii, Sc, Bd, am, Sm, Cm, Om, Rm]],
            })),
            t
          );
        })();
    },
    ZUHj: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('51Dv'),
        s = n('SeVD'),
        r = n('HDdC');
      function o(t, e, n, o, a = new i.a(t, n, o)) {
        if (!a.closed) return e instanceof r.a ? e.subscribe(a) : Object(s.a)(e)(a);
      }
    },
    bHdf: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('5+tZ'),
        s = n('SpAZ');
      function r(t = Number.POSITIVE_INFINITY) {
        return Object(i.a)(s.a, t);
      }
    },
    c2HN: function (t, e, n) {
      'use strict';
      function i(t) {
        return !!t && 'function' != typeof t.subscribe && 'function' == typeof t.then;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    fXoL: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return wr;
      }),
        n.d(e, 'b', function () {
          return Pl;
        }),
        n.d(e, 'c', function () {
          return Ol;
        }),
        n.d(e, 'd', function () {
          return El;
        }),
        n.d(e, 'e', function () {
          return kl;
        }),
        n.d(e, 'f', function () {
          return kc;
        }),
        n.d(e, 'g', function () {
          return mc;
        }),
        n.d(e, 'h', function () {
          return sr;
        }),
        n.d(e, 'i', function () {
          return zl;
        }),
        n.d(e, 'j', function () {
          return Jo;
        }),
        n.d(e, 'k', function () {
          return Ll;
        }),
        n.d(e, 'l', function () {
          return ta;
        }),
        n.d(e, 'm', function () {
          return xc;
        }),
        n.d(e, 'n', function () {
          return vn;
        }),
        n.d(e, 'o', function () {
          return el;
        }),
        n.d(e, 'p', function () {
          return q;
        }),
        n.d(e, 'q', function () {
          return u;
        }),
        n.d(e, 'r', function () {
          return $;
        }),
        n.d(e, 's', function () {
          return vr;
        }),
        n.d(e, 't', function () {
          return ya;
        }),
        n.d(e, 'u', function () {
          return va;
        }),
        n.d(e, 'v', function () {
          return jl;
        }),
        n.d(e, 'w', function () {
          return at;
        }),
        n.d(e, 'x', function () {
          return gc;
        }),
        n.d(e, 'y', function () {
          return ot;
        }),
        n.d(e, 'z', function () {
          return cc;
        }),
        n.d(e, 'A', function () {
          return Wl;
        }),
        n.d(e, 'B', function () {
          return h;
        }),
        n.d(e, 'C', function () {
          return Rl;
        }),
        n.d(e, 'D', function () {
          return Il;
        }),
        n.d(e, 'E', function () {
          return il;
        }),
        n.d(e, 'F', function () {
          return sa;
        }),
        n.d(e, 'G', function () {
          return na;
        }),
        n.d(e, 'H', function () {
          return ia;
        }),
        n.d(e, 'I', function () {
          return oa;
        }),
        n.d(e, 'J', function () {
          return ai;
        }),
        n.d(e, 'K', function () {
          return p;
        }),
        n.d(e, 'L', function () {
          return yc;
        }),
        n.d(e, 'M', function () {
          return Sa;
        }),
        n.d(e, 'N', function () {
          return ec;
        }),
        n.d(e, 'O', function () {
          return aa;
        }),
        n.d(e, 'P', function () {
          return ka;
        }),
        n.d(e, 'Q', function () {
          return gt;
        }),
        n.d(e, 'R', function () {
          return Tr;
        }),
        n.d(e, 'S', function () {
          return uc;
        }),
        n.d(e, 'T', function () {
          return Fn;
        }),
        n.d(e, 'U', function () {
          return I;
        }),
        n.d(e, 'V', function () {
          return nt;
        }),
        n.d(e, 'W', function () {
          return Nn;
        }),
        n.d(e, 'X', function () {
          return Sc;
        }),
        n.d(e, 'Y', function () {
          return sc;
        }),
        n.d(e, 'Z', function () {
          return Dl;
        }),
        n.d(e, 'ab', function () {
          return or;
        }),
        n.d(e, 'bb', function () {
          return Ua;
        }),
        n.d(e, 'cb', function () {
          return ri;
        }),
        n.d(e, 'db', function () {
          return ui;
        }),
        n.d(e, 'eb', function () {
          return Un;
        }),
        n.d(e, 'fb', function () {
          return An;
        }),
        n.d(e, 'gb', function () {
          return In;
        }),
        n.d(e, 'hb', function () {
          return jn;
        }),
        n.d(e, 'ib', function () {
          return Pn;
        }),
        n.d(e, 'jb', function () {
          return Rn;
        }),
        n.d(e, 'kb', function () {
          return Dn;
        }),
        n.d(e, 'lb', function () {
          return Fa;
        }),
        n.d(e, 'mb', function () {
          return Cc;
        }),
        n.d(e, 'nb', function () {
          return Va;
        }),
        n.d(e, 'ob', function () {
          return Ha;
        }),
        n.d(e, 'pb', function () {
          return Tn;
        }),
        n.d(e, 'qb', function () {
          return N;
        }),
        n.d(e, 'rb', function () {
          return Ir;
        }),
        n.d(e, 'sb', function () {
          return Gr;
        }),
        n.d(e, 'tb', function () {
          return Zr;
        }),
        n.d(e, 'ub', function () {
          return Ar;
        }),
        n.d(e, 'vb', function () {
          return Na;
        }),
        n.d(e, 'wb', function () {
          return Ht;
        }),
        n.d(e, 'xb', function () {
          return O;
        }),
        n.d(e, 'yb', function () {
          return On;
        }),
        n.d(e, 'zb', function () {
          return jo;
        }),
        n.d(e, 'Ab', function () {
          return Ho;
        }),
        n.d(e, 'Bb', function () {
          return Zo;
        }),
        n.d(e, 'Cb', function () {
          return Ri;
        }),
        n.d(e, 'Db', function () {
          return jr;
        }),
        n.d(e, 'Eb', function () {
          return Io;
        }),
        n.d(e, 'Fb', function () {
          return go;
        }),
        n.d(e, 'Gb', function () {
          return Jr;
        }),
        n.d(e, 'Hb', function () {
          return gl;
        }),
        n.d(e, 'Ib', function () {
          return vt;
        }),
        n.d(e, 'Jb', function () {
          return Ot;
        }),
        n.d(e, 'Kb', function () {
          return b;
        }),
        n.d(e, 'Lb', function () {
          return _;
        }),
        n.d(e, 'Mb', function () {
          return St;
        }),
        n.d(e, 'Nb', function () {
          return At;
        }),
        n.d(e, 'Ob', function () {
          return Fr;
        }),
        n.d(e, 'Pb', function () {
          return $r;
        }),
        n.d(e, 'Qb', function () {
          return Kr;
        }),
        n.d(e, 'Rb', function () {
          return Wr;
        }),
        n.d(e, 'Sb', function () {
          return qr;
        }),
        n.d(e, 'Tb', function () {
          return Yr;
        }),
        n.d(e, 'Ub', function () {
          return zr;
        }),
        n.d(e, 'Vb', function () {
          return Qr;
        }),
        n.d(e, 'Wb', function () {
          return gn;
        }),
        n.d(e, 'Xb', function () {
          return Ro;
        }),
        n.d(e, 'Yb', function () {
          return et;
        }),
        n.d(e, 'Zb', function () {
          return Vr;
        }),
        n.d(e, 'ac', function () {
          return Sl;
        }),
        n.d(e, 'bc', function () {
          return Hr;
        }),
        n.d(e, 'cc', function () {
          return Xr;
        }),
        n.d(e, 'dc', function () {
          return yl;
        }),
        n.d(e, 'ec', function () {
          return Re;
        }),
        n.d(e, 'fc', function () {
          return Ie;
        }),
        n.d(e, 'gc', function () {
          return io;
        }),
        n.d(e, 'hc', function () {
          return Ja;
        }),
        n.d(e, 'ic', function () {
          return tl;
        }),
        n.d(e, 'jc', function () {
          return oo;
        }),
        n.d(e, 'kc', function () {
          return ro;
        }),
        n.d(e, 'lc', function () {
          return Br;
        }),
        n.d(e, 'mc', function () {
          return Ka;
        }),
        n.d(e, 'nc', function () {
          return Qa;
        }),
        n.d(e, 'oc', function () {
          return Za;
        }),
        n.d(e, 'pc', function () {
          return dl;
        }),
        n.d(e, 'qc', function () {
          return Nr;
        }),
        n.d(e, 'rc', function () {
          return Ge;
        }),
        n.d(e, 'sc', function () {
          return re;
        }),
        n.d(e, 'tc', function () {
          return hi;
        }),
        n.d(e, 'uc', function () {
          return Et;
        }),
        n.d(e, 'vc', function () {
          return bl;
        }),
        n.d(e, 'wc', function () {
          return pl;
        }),
        n.d(e, 'xc', function () {
          return fo;
        }),
        n.d(e, 'yc', function () {
          return Mr;
        }),
        n.d(e, 'zc', function () {
          return Cl;
        }),
        n.d(e, 'Ac', function () {
          return Oo;
        }),
        n.d(e, 'Bc', function () {
          return Ao;
        }),
        n.d(e, 'Cc', function () {
          return To;
        }),
        n.d(e, 'Dc', function () {
          return Po;
        }),
        n.d(e, 'Ec', function () {
          return ml;
        });
      var i = n('XNiG'),
        s = n('quSY'),
        r = n('HDdC'),
        o = n('VRyK'),
        a = n('w1tV');
      function l(t) {
        return { toString: t }.toString();
      }
      function c(t, e, n) {
        return l(() => {
          const i = (function (t) {
            return function (...e) {
              if (t) {
                const n = t(...e);
                for (const t in n) this[t] = n[t];
              }
            };
          })(e);
          function s(...t) {
            if (this instanceof s) return i.apply(this, t), this;
            const e = new s(...t);
            return (n.annotation = e), n;
            function n(t, n, i) {
              const s = t.hasOwnProperty('__parameters__')
                ? t.__parameters__
                : Object.defineProperty(t, '__parameters__', { value: [] }).__parameters__;
              for (; s.length <= i; ) s.push(null);
              return (s[i] = s[i] || []).push(e), t;
            }
          }
          return (
            n && (s.prototype = Object.create(n.prototype)), (s.prototype.ngMetadataName = t), (s.annotationCls = s), s
          );
        });
      }
      const u = c('Inject', (t) => ({ token: t })),
        h = c('Optional'),
        d = c('Self'),
        p = c('SkipSelf');
      var m = (function (t) {
        return (
          (t[(t.Default = 0)] = 'Default'),
          (t[(t.Host = 1)] = 'Host'),
          (t[(t.Self = 2)] = 'Self'),
          (t[(t.SkipSelf = 4)] = 'SkipSelf'),
          (t[(t.Optional = 8)] = 'Optional'),
          t
        );
      })({});
      function f(t) {
        for (let e in t) if (t[e] === f) return e;
        throw Error('Could not find renamed property on target object.');
      }
      function g(t, e) {
        for (const n in e) e.hasOwnProperty(n) && !t.hasOwnProperty(n) && (t[n] = e[n]);
      }
      function b(t) {
        return { token: t.token, providedIn: t.providedIn || null, factory: t.factory, value: void 0 };
      }
      function _(t) {
        return { factory: t.factory, providers: t.providers || [], imports: t.imports || [] };
      }
      function y(t) {
        return v(t, t[x]) || v(t, t[E]);
      }
      function v(t, e) {
        return e && e.token === t ? e : null;
      }
      function w(t) {
        return t && (t.hasOwnProperty(C) || t.hasOwnProperty(k)) ? t[C] : null;
      }
      const x = f({ ɵprov: f }),
        C = f({ ɵinj: f }),
        S = f({ ɵprovFallback: f }),
        E = f({ ngInjectableDef: f }),
        k = f({ ngInjectorDef: f });
      function O(t) {
        if ('string' == typeof t) return t;
        if (Array.isArray(t)) return '[' + t.map(O).join(', ') + ']';
        if (null == t) return '' + t;
        if (t.overriddenName) return '' + t.overriddenName;
        if (t.name) return '' + t.name;
        const e = t.toString();
        if (null == e) return '' + e;
        const n = e.indexOf('\n');
        return -1 === n ? e : e.substring(0, n);
      }
      function A(t, e) {
        return null == t || '' === t ? (null === e ? '' : e) : null == e || '' === e ? t : t + ' ' + e;
      }
      const T = f({ __forward_ref__: f });
      function I(t) {
        return (
          (t.__forward_ref__ = I),
          (t.toString = function () {
            return O(this());
          }),
          t
        );
      }
      function R(t) {
        return P(t) ? t() : t;
      }
      function P(t) {
        return 'function' == typeof t && t.hasOwnProperty(T) && t.__forward_ref__ === I;
      }
      const D = 'undefined' != typeof globalThis && globalThis,
        j = 'undefined' != typeof window && window,
        L =
          'undefined' != typeof self &&
          'undefined' != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        M = 'undefined' != typeof global && global,
        N = D || M || j || L,
        F = f({ ɵcmp: f }),
        V = f({ ɵdir: f }),
        H = f({ ɵpipe: f }),
        B = f({ ɵmod: f }),
        U = f({ ɵloc: f }),
        z = f({ ɵfac: f }),
        Y = f({ __NG_ELEMENT_ID__: f });
      class $ {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = b({ token: this, providedIn: e.providedIn || 'root', factory: e.factory }));
        }
        toString() {
          return 'InjectionToken ' + this._desc;
        }
      }
      const q = new $('INJECTOR', -1),
        W = {},
        K = /\n/gm,
        Q = f({ provide: String, useValue: f });
      let Z,
        G = void 0;
      function X(t) {
        const e = G;
        return (G = t), e;
      }
      function J(t) {
        const e = Z;
        return (Z = t), e;
      }
      function tt(t, e = m.Default) {
        if (void 0 === G) throw new Error('inject() must be called from an injection context');
        return null === G ? it(t, void 0, e) : G.get(t, e & m.Optional ? null : void 0, e);
      }
      function et(t, e = m.Default) {
        return (Z || tt)(R(t), e);
      }
      const nt = et;
      function it(t, e, n) {
        const i = y(t);
        if (i && 'root' == i.providedIn) return void 0 === i.value ? (i.value = i.factory()) : i.value;
        if (n & m.Optional) return null;
        if (void 0 !== e) return e;
        throw new Error(`Injector: NOT_FOUND [${O(t)}]`);
      }
      function st(t) {
        const e = [];
        for (let n = 0; n < t.length; n++) {
          const i = R(t[n]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new Error('Arguments array must have arguments.');
            let t = void 0,
              n = m.Default;
            for (let e = 0; e < i.length; e++) {
              const s = i[e];
              s instanceof h || 'Optional' === s.ngMetadataName || s === h
                ? (n |= m.Optional)
                : s instanceof p || 'SkipSelf' === s.ngMetadataName || s === p
                ? (n |= m.SkipSelf)
                : s instanceof d || 'Self' === s.ngMetadataName || s === d
                ? (n |= m.Self)
                : (t = s instanceof u || s === u ? s.token : s);
            }
            e.push(et(t, n));
          } else e.push(et(i));
        }
        return e;
      }
      class rt {
        get(t, e = W) {
          if (e === W) {
            const e = new Error(`NullInjectorError: No provider for ${O(t)}!`);
            throw ((e.name = 'NullInjectorError'), e);
          }
          return e;
        }
      }
      class ot {}
      class at {}
      function lt(t, e) {
        t.forEach((t) => (Array.isArray(t) ? lt(t, e) : e(t)));
      }
      function ct(t, e, n) {
        e >= t.length ? t.push(n) : t.splice(e, 0, n);
      }
      function ut(t, e) {
        return e >= t.length - 1 ? t.pop() : t.splice(e, 1)[0];
      }
      function ht(t, e) {
        const n = [];
        for (let i = 0; i < t; i++) n.push(e);
        return n;
      }
      function dt(t, e, n) {
        let i = mt(t, e);
        return (
          i >= 0
            ? (t[1 | i] = n)
            : ((i = ~i),
              (function (t, e, n, i) {
                let s = t.length;
                if (s == e) t.push(n, i);
                else if (1 === s) t.push(i, t[0]), (t[0] = n);
                else {
                  for (s--, t.push(t[s - 1], t[s]); s > e; ) (t[s] = t[s - 2]), s--;
                  (t[e] = n), (t[e + 1] = i);
                }
              })(t, i, e, n)),
          i
        );
      }
      function pt(t, e) {
        const n = mt(t, e);
        if (n >= 0) return t[1 | n];
      }
      function mt(t, e) {
        return (function (t, e, n) {
          let i = 0,
            s = t.length >> 1;
          for (; s !== i; ) {
            const n = i + ((s - i) >> 1),
              r = t[n << 1];
            if (e === r) return n << 1;
            r > e ? (s = n) : (i = n + 1);
          }
          return ~(s << 1);
        })(t, e);
      }
      const ft = (function () {
          var t = { OnPush: 0, Default: 1 };
          return (t[t.OnPush] = 'OnPush'), (t[t.Default] = 'Default'), t;
        })(),
        gt = (function () {
          var t = { Emulated: 0, Native: 1, None: 2, ShadowDom: 3 };
          return (
            (t[t.Emulated] = 'Emulated'),
            (t[t.Native] = 'Native'),
            (t[t.None] = 'None'),
            (t[t.ShadowDom] = 'ShadowDom'),
            t
          );
        })(),
        bt = {},
        _t = [];
      let yt = 0;
      function vt(t) {
        return l(() => {
          const e = t.type,
            n = e.prototype,
            i = {},
            s = {
              type: e,
              providersResolver: null,
              decls: t.decls,
              vars: t.vars,
              factory: null,
              template: t.template || null,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              hostBindings: t.hostBindings || null,
              hostVars: t.hostVars || 0,
              hostAttrs: t.hostAttrs || null,
              contentQueries: t.contentQueries || null,
              declaredInputs: i,
              inputs: null,
              outputs: null,
              exportAs: t.exportAs || null,
              onChanges: null,
              onInit: n.ngOnInit || null,
              doCheck: n.ngDoCheck || null,
              afterContentInit: n.ngAfterContentInit || null,
              afterContentChecked: n.ngAfterContentChecked || null,
              afterViewInit: n.ngAfterViewInit || null,
              afterViewChecked: n.ngAfterViewChecked || null,
              onDestroy: n.ngOnDestroy || null,
              onPush: t.changeDetection === ft.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: t.selectors || _t,
              viewQuery: t.viewQuery || null,
              features: t.features || null,
              data: t.data || {},
              encapsulation: t.encapsulation || gt.Emulated,
              id: 'c',
              styles: t.styles || _t,
              _: null,
              setInput: null,
              schemas: t.schemas || null,
              tView: null,
            },
            r = t.directives,
            o = t.features,
            a = t.pipes;
          return (
            (s.id += yt++),
            (s.inputs = kt(t.inputs, i)),
            (s.outputs = kt(t.outputs)),
            o && o.forEach((t) => t(s)),
            (s.directiveDefs = r ? () => ('function' == typeof r ? r() : r).map(wt) : null),
            (s.pipeDefs = a ? () => ('function' == typeof a ? a() : a).map(xt) : null),
            s
          );
        });
      }
      function wt(t) {
        return (
          Tt(t) ||
          (function (t) {
            return t[V] || null;
          })(t)
        );
      }
      function xt(t) {
        return (function (t) {
          return t[H] || null;
        })(t);
      }
      const Ct = {};
      function St(t) {
        const e = {
          type: t.type,
          bootstrap: t.bootstrap || _t,
          declarations: t.declarations || _t,
          imports: t.imports || _t,
          exports: t.exports || _t,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        };
        return (
          null != t.id &&
            l(() => {
              Ct[t.id] = t.type;
            }),
          e
        );
      }
      function Et(t, e) {
        return l(() => {
          const n = Rt(t, !0);
          (n.declarations = e.declarations || _t), (n.imports = e.imports || _t), (n.exports = e.exports || _t);
        });
      }
      function kt(t, e) {
        if (null == t) return bt;
        const n = {};
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            let s = t[i],
              r = s;
            Array.isArray(s) && ((r = s[1]), (s = s[0])), (n[s] = i), e && (e[s] = r);
          }
        return n;
      }
      const Ot = vt;
      function At(t) {
        return {
          type: t.type,
          name: t.name,
          factory: null,
          pure: !1 !== t.pure,
          onDestroy: t.type.prototype.ngOnDestroy || null,
        };
      }
      function Tt(t) {
        return t[F] || null;
      }
      function It(t, e) {
        return t.hasOwnProperty(z) ? t[z] : null;
      }
      function Rt(t, e) {
        const n = t[B] || null;
        if (!n && !0 === e) throw new Error(`Type ${O(t)} does not have '\u0275mod' property.`);
        return n;
      }
      function Pt(t) {
        return Array.isArray(t) && 'object' == typeof t[1];
      }
      function Dt(t) {
        return Array.isArray(t) && !0 === t[1];
      }
      function jt(t) {
        return 0 != (8 & t.flags);
      }
      function Lt(t) {
        return 2 == (2 & t.flags);
      }
      function Mt(t) {
        return 1 == (1 & t.flags);
      }
      function Nt(t) {
        return null !== t.template;
      }
      function Ft(t) {
        return 0 != (512 & t[2]);
      }
      let Vt = void 0;
      function Ht(t) {
        Vt = t;
      }
      function Bt(t) {
        return !!t.listen;
      }
      const Ut = {
        createRenderer: (t, e) => (void 0 !== Vt ? Vt : 'undefined' != typeof document ? document : void 0),
      };
      function zt(t) {
        for (; Array.isArray(t); ) t = t[0];
        return t;
      }
      function Yt(t, e) {
        return zt(e[t + 20]);
      }
      function $t(t, e) {
        return zt(e[t.index]);
      }
      function qt(t, e) {
        return t.data[e + 20];
      }
      function Wt(t, e) {
        return t[e + 20];
      }
      function Kt(t, e) {
        const n = e[t];
        return Pt(n) ? n : n[0];
      }
      function Qt(t) {
        const e = (function (t) {
          return t.__ngContext__ || null;
        })(t);
        return e ? (Array.isArray(e) ? e : e.lView) : null;
      }
      function Zt(t) {
        return 4 == (4 & t[2]);
      }
      function Gt(t) {
        return 128 == (128 & t[2]);
      }
      function Xt(t, e) {
        return null === t || null == e ? null : t[e];
      }
      function Jt(t) {
        t[18] = 0;
      }
      function te(t, e) {
        t[5] += e;
        let n = t,
          i = t[3];
        for (; null !== i && ((1 === e && 1 === n[5]) || (-1 === e && 0 === n[5])); ) (i[5] += e), (n = i), (i = i[3]);
      }
      const ee = { lFrame: Ce(null), bindingsEnabled: !0, checkNoChangesMode: !1 };
      function ne() {
        return ee.bindingsEnabled;
      }
      function ie() {
        return ee.lFrame.lView;
      }
      function se() {
        return ee.lFrame.tView;
      }
      function re(t) {
        ee.lFrame.contextLView = t;
      }
      function oe() {
        return ee.lFrame.previousOrParentTNode;
      }
      function ae(t, e) {
        (ee.lFrame.previousOrParentTNode = t), (ee.lFrame.isParent = e);
      }
      function le() {
        return ee.lFrame.isParent;
      }
      function ce() {
        ee.lFrame.isParent = !1;
      }
      function ue() {
        return ee.checkNoChangesMode;
      }
      function he(t) {
        ee.checkNoChangesMode = t;
      }
      function de() {
        const t = ee.lFrame;
        let e = t.bindingRootIndex;
        return -1 === e && (e = t.bindingRootIndex = t.tView.bindingStartIndex), e;
      }
      function pe() {
        return ee.lFrame.bindingIndex++;
      }
      function me(t) {
        const e = ee.lFrame,
          n = e.bindingIndex;
        return (e.bindingIndex = e.bindingIndex + t), n;
      }
      function fe(t, e) {
        const n = ee.lFrame;
        (n.bindingIndex = n.bindingRootIndex = t), ge(e);
      }
      function ge(t) {
        ee.lFrame.currentDirectiveIndex = t;
      }
      function be(t) {
        const e = ee.lFrame.currentDirectiveIndex;
        return -1 === e ? null : t[e];
      }
      function _e() {
        return ee.lFrame.currentQueryIndex;
      }
      function ye(t) {
        ee.lFrame.currentQueryIndex = t;
      }
      function ve(t, e) {
        const n = xe();
        (ee.lFrame = n), (n.previousOrParentTNode = e), (n.lView = t);
      }
      function we(t, e) {
        const n = xe(),
          i = t[1];
        (ee.lFrame = n),
          (n.previousOrParentTNode = e),
          (n.lView = t),
          (n.tView = i),
          (n.contextLView = t),
          (n.bindingIndex = i.bindingStartIndex);
      }
      function xe() {
        const t = ee.lFrame,
          e = null === t ? null : t.child;
        return null === e ? Ce(t) : e;
      }
      function Ce(t) {
        const e = {
          previousOrParentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: 0,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentSanitizer: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
        };
        return null !== t && (t.child = e), e;
      }
      function Se() {
        const t = ee.lFrame;
        return (ee.lFrame = t.parent), (t.previousOrParentTNode = null), (t.lView = null), t;
      }
      const Ee = Se;
      function ke() {
        const t = Se();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = 0),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.currentSanitizer = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function Oe() {
        return ee.lFrame.selectedIndex;
      }
      function Ae(t) {
        ee.lFrame.selectedIndex = t;
      }
      function Te() {
        const t = ee.lFrame;
        return qt(t.tView, t.selectedIndex);
      }
      function Ie() {
        ee.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';
      }
      function Re() {
        ee.lFrame.currentNamespace = null;
      }
      function Pe(t, e) {
        for (let n = e.directiveStart, i = e.directiveEnd; n < i; n++) {
          const e = t.data[n];
          e.afterContentInit && (t.contentHooks || (t.contentHooks = [])).push(-n, e.afterContentInit),
            e.afterContentChecked &&
              ((t.contentHooks || (t.contentHooks = [])).push(n, e.afterContentChecked),
              (t.contentCheckHooks || (t.contentCheckHooks = [])).push(n, e.afterContentChecked)),
            e.afterViewInit && (t.viewHooks || (t.viewHooks = [])).push(-n, e.afterViewInit),
            e.afterViewChecked &&
              ((t.viewHooks || (t.viewHooks = [])).push(n, e.afterViewChecked),
              (t.viewCheckHooks || (t.viewCheckHooks = [])).push(n, e.afterViewChecked)),
            null != e.onDestroy && (t.destroyHooks || (t.destroyHooks = [])).push(n, e.onDestroy);
        }
      }
      function De(t, e, n) {
        Me(t, e, 3, n);
      }
      function je(t, e, n, i) {
        (3 & t[2]) === n && Me(t, e, n, i);
      }
      function Le(t, e) {
        let n = t[2];
        (3 & n) === e && ((n &= 2047), (n += 1), (t[2] = n));
      }
      function Me(t, e, n, i) {
        const s = null != i ? i : -1;
        let r = 0;
        for (let o = void 0 !== i ? 65535 & t[18] : 0; o < e.length; o++)
          if ('number' == typeof e[o + 1]) {
            if (((r = e[o]), null != i && r >= i)) break;
          } else
            e[o] < 0 && (t[18] += 65536),
              (r < s || -1 == s) && (Ne(t, n, e, o), (t[18] = (4294901760 & t[18]) + o + 2)),
              o++;
      }
      function Ne(t, e, n, i) {
        const s = n[i] < 0,
          r = n[i + 1],
          o = t[s ? -n[i] : n[i]];
        s ? t[2] >> 11 < t[18] >> 16 && (3 & t[2]) === e && ((t[2] += 2048), r.call(o)) : r.call(o);
      }
      class Fe {
        constructor(t, e, n) {
          (this.factory = t), (this.resolving = !1), (this.canSeeViewProviders = e), (this.injectImpl = n);
        }
      }
      function Ve(t, e, n) {
        const i = Bt(t);
        let s = 0;
        for (; s < n.length; ) {
          const r = n[s];
          if ('number' == typeof r) {
            if (0 !== r) break;
            s++;
            const o = n[s++],
              a = n[s++],
              l = n[s++];
            i ? t.setAttribute(e, a, l, o) : e.setAttributeNS(o, a, l);
          } else {
            const o = r,
              a = n[++s];
            Be(o) ? i && t.setProperty(e, o, a) : i ? t.setAttribute(e, o, a) : e.setAttribute(o, a), s++;
          }
        }
        return s;
      }
      function He(t) {
        return 3 === t || 4 === t || 6 === t;
      }
      function Be(t) {
        return 64 === t.charCodeAt(0);
      }
      function Ue(t, e) {
        if (null === e || 0 === e.length);
        else if (null === t || 0 === t.length) t = e.slice();
        else {
          let n = -1;
          for (let i = 0; i < e.length; i++) {
            const s = e[i];
            'number' == typeof s ? (n = s) : 0 === n || ze(t, n, s, null, -1 === n || 2 === n ? e[++i] : null);
          }
        }
        return t;
      }
      function ze(t, e, n, i, s) {
        let r = 0,
          o = t.length;
        if (-1 === e) o = -1;
        else
          for (; r < t.length; ) {
            const n = t[r++];
            if ('number' == typeof n) {
              if (n === e) {
                o = -1;
                break;
              }
              if (n > e) {
                o = r - 1;
                break;
              }
            }
          }
        for (; r < t.length; ) {
          const e = t[r];
          if ('number' == typeof e) break;
          if (e === n) {
            if (null === i) return void (null !== s && (t[r + 1] = s));
            if (i === t[r + 1]) return void (t[r + 2] = s);
          }
          r++, null !== i && r++, null !== s && r++;
        }
        -1 !== o && (t.splice(o, 0, e), (r = o + 1)),
          t.splice(r++, 0, n),
          null !== i && t.splice(r++, 0, i),
          null !== s && t.splice(r++, 0, s);
      }
      function Ye(t) {
        return -1 !== t;
      }
      function $e(t) {
        return 32767 & t;
      }
      function qe(t) {
        return t >> 16;
      }
      function We(t, e) {
        let n = qe(t),
          i = e;
        for (; n > 0; ) (i = i[15]), n--;
        return i;
      }
      function Ke(t) {
        return 'string' == typeof t ? t : null == t ? '' : '' + t;
      }
      function Qe(t) {
        return 'function' == typeof t
          ? t.name || t.toString()
          : 'object' == typeof t && null != t && 'function' == typeof t.type
          ? t.type.name || t.type.toString()
          : Ke(t);
      }
      const Ze = (() =>
        (('undefined' != typeof requestAnimationFrame && requestAnimationFrame) || setTimeout).bind(N))();
      function Ge(t) {
        return { name: 'body', target: t.ownerDocument.body };
      }
      function Xe(t) {
        return t instanceof Function ? t() : t;
      }
      let Je = !0;
      function tn(t) {
        const e = Je;
        return (Je = t), e;
      }
      let en = 0;
      function nn(t, e) {
        const n = rn(t, e);
        if (-1 !== n) return n;
        const i = e[1];
        i.firstCreatePass && ((t.injectorIndex = e.length), sn(i.data, t), sn(e, null), sn(i.blueprint, null));
        const s = on(t, e),
          r = t.injectorIndex;
        if (Ye(s)) {
          const t = $e(s),
            n = We(s, e),
            i = n[1].data;
          for (let s = 0; s < 8; s++) e[r + s] = n[t + s] | i[t + s];
        }
        return (e[r + 8] = s), r;
      }
      function sn(t, e) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, e);
      }
      function rn(t, e) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null == e[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function on(t, e) {
        if (t.parent && -1 !== t.parent.injectorIndex) return t.parent.injectorIndex;
        let n = e[6],
          i = 1;
        for (; n && -1 === n.injectorIndex; ) (n = (e = e[15]) ? e[6] : null), i++;
        return n ? n.injectorIndex | (i << 16) : -1;
      }
      function an(t, e, n) {
        !(function (t, e, n) {
          let i = 'string' != typeof n ? n[Y] : n.charCodeAt(0) || 0;
          null == i && (i = n[Y] = en++);
          const s = 255 & i,
            r = 1 << s,
            o = 64 & s,
            a = 32 & s,
            l = e.data;
          128 & s
            ? o
              ? a
                ? (l[t + 7] |= r)
                : (l[t + 6] |= r)
              : a
              ? (l[t + 5] |= r)
              : (l[t + 4] |= r)
            : o
            ? a
              ? (l[t + 3] |= r)
              : (l[t + 2] |= r)
            : a
            ? (l[t + 1] |= r)
            : (l[t] |= r);
        })(t, e, n);
      }
      function ln(t, e, n, i = m.Default, s) {
        if (null !== t) {
          const s = (function (t) {
            if ('string' == typeof t) return t.charCodeAt(0) || 0;
            const e = t[Y];
            return 'number' == typeof e && e > 0 ? 255 & e : e;
          })(n);
          if ('function' == typeof s) {
            ve(e, t);
            try {
              const t = s();
              if (null != t || i & m.Optional) return t;
              throw new Error(`No provider for ${Qe(n)}!`);
            } finally {
              Ee();
            }
          } else if ('number' == typeof s) {
            if (-1 === s) return new fn(t, e);
            let r = null,
              o = rn(t, e),
              a = -1,
              l = i & m.Host ? e[16][6] : null;
            for (
              (-1 === o || i & m.SkipSelf) &&
              ((a = -1 === o ? on(t, e) : e[o + 8]), mn(i, !1) ? ((r = e[1]), (o = $e(a)), (e = We(a, e))) : (o = -1));
              -1 !== o;

            ) {
              a = e[o + 8];
              const t = e[1];
              if (pn(s, o, t.data)) {
                const t = un(o, e, n, r, i, l);
                if (t !== cn) return t;
              }
              mn(i, e[1].data[o + 8] === l) && pn(s, o, e) ? ((r = t), (o = $e(a)), (e = We(a, e))) : (o = -1);
            }
          }
        }
        if ((i & m.Optional && void 0 === s && (s = null), 0 == (i & (m.Self | m.Host)))) {
          const t = e[9],
            r = J(void 0);
          try {
            return t ? t.get(n, s, i & m.Optional) : it(n, s, i & m.Optional);
          } finally {
            J(r);
          }
        }
        if (i & m.Optional) return s;
        throw new Error(`NodeInjector: NOT_FOUND [${Qe(n)}]`);
      }
      const cn = {};
      function un(t, e, n, i, s, r) {
        const o = e[1],
          a = o.data[t + 8],
          l = hn(a, o, n, null == i ? Lt(a) && Je : i != o && 3 === a.type, s & m.Host && r === a);
        return null !== l ? dn(e, o, l, a) : cn;
      }
      function hn(t, e, n, i, s) {
        const r = t.providerIndexes,
          o = e.data,
          a = 65535 & r,
          l = t.directiveStart,
          c = r >> 16,
          u = s ? a + c : t.directiveEnd;
        for (let h = i ? a : a + c; h < u; h++) {
          const t = o[h];
          if ((h < l && n === t) || (h >= l && t.type === n)) return h;
        }
        if (s) {
          const t = o[l];
          if (t && Nt(t) && t.type === n) return l;
        }
        return null;
      }
      function dn(t, e, n, i) {
        let s = t[n];
        const r = e.data;
        if (s instanceof Fe) {
          const o = s;
          if (o.resolving) throw new Error('Circular dep for ' + Qe(r[n]));
          const a = tn(o.canSeeViewProviders);
          let l;
          (o.resolving = !0), o.injectImpl && (l = J(o.injectImpl)), ve(t, i);
          try {
            (s = t[n] = o.factory(void 0, r, t, i)),
              e.firstCreatePass &&
                n >= i.directiveStart &&
                (function (t, e, n) {
                  const { onChanges: i, onInit: s, doCheck: r } = e;
                  i &&
                    ((n.preOrderHooks || (n.preOrderHooks = [])).push(t, i),
                    (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(t, i)),
                    s && (n.preOrderHooks || (n.preOrderHooks = [])).push(-t, s),
                    r &&
                      ((n.preOrderHooks || (n.preOrderHooks = [])).push(t, r),
                      (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(t, r));
                })(n, r[n], e);
          } finally {
            o.injectImpl && J(l), tn(a), (o.resolving = !1), Ee();
          }
        }
        return s;
      }
      function pn(t, e, n) {
        const i = 64 & t,
          s = 32 & t;
        let r;
        return (
          (r =
            128 & t
              ? i
                ? s
                  ? n[e + 7]
                  : n[e + 6]
                : s
                ? n[e + 5]
                : n[e + 4]
              : i
              ? s
                ? n[e + 3]
                : n[e + 2]
              : s
              ? n[e + 1]
              : n[e]),
          !!(r & (1 << t))
        );
      }
      function mn(t, e) {
        return !(t & m.Self || (t & m.Host && e));
      }
      class fn {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e) {
          return ln(this._tNode, this._lView, t, void 0, e);
        }
      }
      function gn(t) {
        return l(() => {
          const e = Object.getPrototypeOf(t.prototype).constructor,
            n =
              e[z] ||
              (function t(e) {
                const n = e;
                if (P(e))
                  return () => {
                    const e = t(R(n));
                    return e ? e() : null;
                  };
                let i = It(n);
                if (null === i) {
                  const t = w(n);
                  i = t && t.factory;
                }
                return i || null;
              })(e);
          return null !== n ? n : (t) => new t();
        });
      }
      function bn(t) {
        return t.ngDebugContext;
      }
      function _n(t) {
        return t.ngOriginalError;
      }
      function yn(t, ...e) {
        t.error(...e);
      }
      class vn {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t),
            n = this._findContext(t),
            i = (function (t) {
              return t.ngErrorLogger || yn;
            })(t);
          i(this._console, 'ERROR', t),
            e && i(this._console, 'ORIGINAL ERROR', e),
            n && i(this._console, 'ERROR CONTEXT', n);
        }
        _findContext(t) {
          return t ? (bn(t) ? bn(t) : this._findContext(_n(t))) : null;
        }
        _findOriginalError(t) {
          let e = _n(t);
          for (; e && _n(e); ) e = _n(e);
          return e;
        }
      }
      class wn {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return (
            'SafeValue must use [property]=binding: ' +
            this.changingThisBreaksApplicationSecurity +
            ' (see http://g.co/ng/security#xss)'
          );
        }
      }
      class xn extends wn {
        getTypeName() {
          return 'HTML';
        }
      }
      class Cn extends wn {
        getTypeName() {
          return 'Style';
        }
      }
      class Sn extends wn {
        getTypeName() {
          return 'Script';
        }
      }
      class En extends wn {
        getTypeName() {
          return 'URL';
        }
      }
      class kn extends wn {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function On(t) {
        return t instanceof wn ? t.changingThisBreaksApplicationSecurity : t;
      }
      function An(t, e) {
        const n = Tn(t);
        if (null != n && n !== e) {
          if ('ResourceURL' === n && 'URL' === e) return !0;
          throw new Error(`Required a safe ${e}, got a ${n} (see http://g.co/ng/security#xss)`);
        }
        return n === e;
      }
      function Tn(t) {
        return (t instanceof wn && t.getTypeName()) || null;
      }
      function In(t) {
        return new xn(t);
      }
      function Rn(t) {
        return new Cn(t);
      }
      function Pn(t) {
        return new Sn(t);
      }
      function Dn(t) {
        return new En(t);
      }
      function jn(t) {
        return new kn(t);
      }
      let Ln = !0,
        Mn = !1;
      function Nn() {
        return (Mn = !0), Ln;
      }
      function Fn() {
        if (Mn) throw new Error('Cannot enable prod mode after platform setup.');
        Ln = !1;
      }
      class Vn {
        constructor(t) {
          (this.defaultDoc = t),
            (this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert'));
          let e = this.inertDocument.body;
          if (null == e) {
            const t = this.inertDocument.createElement('html');
            this.inertDocument.appendChild(t), (e = this.inertDocument.createElement('body')), t.appendChild(e);
          }
          (e.innerHTML = '<svg><g onload="this.parentNode.remove()"></g></svg>'),
            !e.querySelector || e.querySelector('svg')
              ? ((e.innerHTML = '<svg><p><style><img src="</style><img src=x onerror=alert(1)//">'),
                (this.getInertBodyElement =
                  e.querySelector &&
                  e.querySelector('svg img') &&
                  (function () {
                    try {
                      return !!window.DOMParser;
                    } catch (t) {
                      return !1;
                    }
                  })()
                    ? this.getInertBodyElement_DOMParser
                    : this.getInertBodyElement_InertDocument))
              : (this.getInertBodyElement = this.getInertBodyElement_XHR);
        }
        getInertBodyElement_XHR(t) {
          t = '<body><remove></remove>' + t + '</body>';
          try {
            t = encodeURI(t);
          } catch (i) {
            return null;
          }
          const e = new XMLHttpRequest();
          (e.responseType = 'document'), e.open('GET', 'data:text/html;charset=utf-8,' + t, !1), e.send(void 0);
          const n = e.response.body;
          return n.removeChild(n.firstChild), n;
        }
        getInertBodyElement_DOMParser(t) {
          t = '<body><remove></remove>' + t + '</body>';
          try {
            const e = new window.DOMParser().parseFromString(t, 'text/html').body;
            return e.removeChild(e.firstChild), e;
          } catch (e) {
            return null;
          }
        }
        getInertBodyElement_InertDocument(t) {
          const e = this.inertDocument.createElement('template');
          if ('content' in e) return (e.innerHTML = t), e;
          const n = this.inertDocument.createElement('body');
          return (n.innerHTML = t), this.defaultDoc.documentMode && this.stripCustomNsAttrs(n), n;
        }
        stripCustomNsAttrs(t) {
          const e = t.attributes;
          for (let i = e.length - 1; 0 < i; i--) {
            const n = e.item(i).name;
            ('xmlns:ns1' !== n && 0 !== n.indexOf('ns1:')) || t.removeAttribute(n);
          }
          let n = t.firstChild;
          for (; n; ) n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n), (n = n.nextSibling);
        }
      }
      const Hn = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
        Bn = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function Un(t) {
        return (t = String(t)).match(Hn) || t.match(Bn)
          ? t
          : (Nn() && console.warn(`WARNING: sanitizing unsafe URL value ${t} (see http://g.co/ng/security#xss)`),
            'unsafe:' + t);
      }
      function zn(t) {
        const e = {};
        for (const n of t.split(',')) e[n] = !0;
        return e;
      }
      function Yn(...t) {
        const e = {};
        for (const n of t) for (const t in n) n.hasOwnProperty(t) && (e[t] = !0);
        return e;
      }
      const $n = zn('area,br,col,hr,img,wbr'),
        qn = zn('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        Wn = zn('rp,rt'),
        Kn = Yn(Wn, qn),
        Qn = Yn(
          $n,
          Yn(
            qn,
            zn(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'
            )
          ),
          Yn(
            Wn,
            zn(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'
            )
          ),
          Kn
        ),
        Zn = zn('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        Gn = zn('srcset'),
        Xn = Yn(
          Zn,
          Gn,
          zn(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width'
          ),
          zn(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'
          )
        ),
        Jn = zn('script,style,template');
      class ti {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let e = t.firstChild,
            n = !0;
          for (; e; )
            if (
              (e.nodeType === Node.ELEMENT_NODE
                ? (n = this.startElement(e))
                : e.nodeType === Node.TEXT_NODE
                ? this.chars(e.nodeValue)
                : (this.sanitizedSomething = !0),
              n && e.firstChild)
            )
              e = e.firstChild;
            else
              for (; e; ) {
                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                let t = this.checkClobberedElement(e, e.nextSibling);
                if (t) {
                  e = t;
                  break;
                }
                e = this.checkClobberedElement(e, e.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const e = t.nodeName.toLowerCase();
          if (!Qn.hasOwnProperty(e)) return (this.sanitizedSomething = !0), !Jn.hasOwnProperty(e);
          this.buf.push('<'), this.buf.push(e);
          const n = t.attributes;
          for (let s = 0; s < n.length; s++) {
            const t = n.item(s),
              e = t.name,
              r = e.toLowerCase();
            if (!Xn.hasOwnProperty(r)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let o = t.value;
            Zn[r] && (o = Un(o)),
              Gn[r] &&
                ((i = o),
                (o = (i = String(i))
                  .split(',')
                  .map((t) => Un(t.trim()))
                  .join(', '))),
              this.buf.push(' ', e, '="', ii(o), '"');
          }
          var i;
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const e = t.nodeName.toLowerCase();
          Qn.hasOwnProperty(e) && !$n.hasOwnProperty(e) && (this.buf.push('</'), this.buf.push(e), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(ii(t));
        }
        checkClobberedElement(t, e) {
          if (
            e &&
            (t.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error('Failed to sanitize html because the element is clobbered: ' + t.outerHTML);
          return e;
        }
      }
      const ei = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        ni = /([^\#-~ |!])/g;
      function ii(t) {
        return t
          .replace(/&/g, '&amp;')
          .replace(ei, function (t) {
            return '&#' + (1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320) + 65536) + ';';
          })
          .replace(ni, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let si;
      function ri(t, e) {
        let n = null;
        try {
          si = si || new Vn(t);
          let i = e ? String(e) : '';
          n = si.getInertBodyElement(i);
          let s = 5,
            r = i;
          do {
            if (0 === s) throw new Error('Failed to sanitize html because the input is unstable');
            s--, (i = r), (r = n.innerHTML), (n = si.getInertBodyElement(i));
          } while (i !== r);
          const o = new ti(),
            a = o.sanitizeChildren(oi(n) || n);
          return (
            Nn() &&
              o.sanitizedSomething &&
              console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss'),
            a
          );
        } finally {
          if (n) {
            const t = oi(n) || n;
            for (; t.firstChild; ) t.removeChild(t.firstChild);
          }
        }
      }
      function oi(t) {
        return 'content' in t &&
          (function (t) {
            return t.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === t.nodeName;
          })(t)
          ? t.content
          : null;
      }
      const ai = (function () {
          var t = { NONE: 0, HTML: 1, STYLE: 2, SCRIPT: 3, URL: 4, RESOURCE_URL: 5 };
          return (
            (t[t.NONE] = 'NONE'),
            (t[t.HTML] = 'HTML'),
            (t[t.STYLE] = 'STYLE'),
            (t[t.SCRIPT] = 'SCRIPT'),
            (t[t.URL] = 'URL'),
            (t[t.RESOURCE_URL] = 'RESOURCE_URL'),
            t
          );
        })(),
        li = new RegExp(
          '^([-,."\'%_!# a-zA-Z0-9]+|(?:(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?|(?:rgb|hsl)a?|(?:repeating-)?(?:linear|radial)-gradient|(?:attr|calc|var))\\([-0-9.%, #a-zA-Z]+\\))$',
          'g'
        ),
        ci = /^url\(([^)]+)\)$/;
      function ui(t) {
        if (!(t = String(t).trim())) return '';
        const e = t.match(ci);
        return (e && Un(e[1]) === e[1]) ||
          (t.match(li) &&
            (function (t) {
              let e = !0,
                n = !0;
              for (let i = 0; i < t.length; i++) {
                const s = t.charAt(i);
                "'" === s && n ? (e = !e) : '"' === s && e && (n = !n);
              }
              return e && n;
            })(t))
          ? t
          : (Nn() && console.warn(`WARNING: sanitizing unsafe style value ${t} (see http://g.co/ng/security#xss).`),
            'unsafe');
      }
      function hi(t) {
        const e = (function () {
          const t = ie();
          return t && t[12];
        })();
        return e ? e.sanitize(ai.URL, t) || '' : An(t, 'URL') ? On(t) : Un(Ke(t));
      }
      function di(t, e) {
        t.__ngContext__ = e;
      }
      function pi(t) {
        throw new Error('Multiple components match node with tagname ' + t.tagName);
      }
      function mi() {
        throw new Error('Cannot mix multi providers and regular providers');
      }
      function fi(t, e, n) {
        let i = t.length;
        for (;;) {
          const s = t.indexOf(e, n);
          if (-1 === s) return s;
          if (0 === s || t.charCodeAt(s - 1) <= 32) {
            const n = e.length;
            if (s + n === i || t.charCodeAt(s + n) <= 32) return s;
          }
          n = s + 1;
        }
      }
      function gi(t, e, n) {
        let i = 0;
        for (; i < t.length; ) {
          let s = t[i++];
          if (n && 'class' === s) {
            if (((s = t[i]), -1 !== fi(s.toLowerCase(), e, 0))) return !0;
          } else if (1 === s) {
            for (; i < t.length && 'string' == typeof (s = t[i++]); ) if (s.toLowerCase() === e) return !0;
            return !1;
          }
        }
        return !1;
      }
      function bi(t) {
        return 0 === t.type && 'ng-template' !== t.tagName;
      }
      function _i(t, e, n) {
        return e === (0 !== t.type || n ? t.tagName : 'ng-template');
      }
      function yi(t, e, n) {
        let i = 4;
        const s = t.attrs || [],
          r = (function (t) {
            for (let e = 0; e < t.length; e++) if (He(t[e])) return e;
            return t.length;
          })(s);
        let o = !1;
        for (let a = 0; a < e.length; a++) {
          const l = e[a];
          if ('number' != typeof l) {
            if (!o)
              if (4 & i) {
                if (((i = 2 | (1 & i)), ('' !== l && !_i(t, l, n)) || ('' === l && 1 === e.length))) {
                  if (vi(i)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & i ? l : e[++a];
                if (8 & i && null !== t.attrs) {
                  if (!gi(t.attrs, c, n)) {
                    if (vi(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const u = wi(8 & i ? 'class' : l, s, bi(t), n);
                if (-1 === u) {
                  if (vi(i)) return !1;
                  o = !0;
                  continue;
                }
                if ('' !== c) {
                  let t;
                  t = u > r ? '' : s[u + 1].toLowerCase();
                  const e = 8 & i ? t : null;
                  if ((e && -1 !== fi(e, c, 0)) || (2 & i && c !== t)) {
                    if (vi(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !vi(i) && !vi(l)) return !1;
            if (o && vi(l)) continue;
            (o = !1), (i = l | (1 & i));
          }
        }
        return vi(i) || o;
      }
      function vi(t) {
        return 0 == (1 & t);
      }
      function wi(t, e, n, i) {
        if (null === e) return -1;
        let s = 0;
        if (i || !n) {
          let n = !1;
          for (; s < e.length; ) {
            const i = e[s];
            if (i === t) return s;
            if (3 === i || 6 === i) n = !0;
            else {
              if (1 === i || 2 === i) {
                let t = e[++s];
                for (; 'string' == typeof t; ) t = e[++s];
                continue;
              }
              if (4 === i) break;
              if (0 === i) {
                s += 4;
                continue;
              }
            }
            s += n ? 1 : 2;
          }
          return -1;
        }
        return (function (t, e) {
          let n = t.indexOf(4);
          if (n > -1)
            for (n++; n < t.length; ) {
              const i = t[n];
              if ('number' == typeof i) return -1;
              if (i === e) return n;
              n++;
            }
          return -1;
        })(e, t);
      }
      function xi(t, e, n = !1) {
        for (let i = 0; i < e.length; i++) if (yi(t, e[i], n)) return !0;
        return !1;
      }
      function Ci(t, e) {
        t: for (let n = 0; n < e.length; n++) {
          const i = e[n];
          if (t.length === i.length) {
            for (let e = 0; e < t.length; e++) if (t[e] !== i[e]) continue t;
            return !0;
          }
        }
        return !1;
      }
      function Si(t, e) {
        return t ? ':not(' + e.trim() + ')' : e;
      }
      function Ei(t) {
        let e = t[0],
          n = 1,
          i = 2,
          s = '',
          r = !1;
        for (; n < t.length; ) {
          let o = t[n];
          if ('string' == typeof o)
            if (2 & i) {
              const e = t[++n];
              s += '[' + o + (e.length > 0 ? '="' + e + '"' : '') + ']';
            } else 8 & i ? (s += '.' + o) : 4 & i && (s += ' ' + o);
          else '' === s || vi(o) || ((e += Si(r, s)), (s = '')), (i = o), (r = r || !vi(i));
          n++;
        }
        return '' !== s && (e += Si(r, s)), e;
      }
      const ki = {};
      function Oi(t) {
        const e = t[3];
        return Dt(e) ? e[3] : e;
      }
      function Ai(t) {
        return Ii(t[13]);
      }
      function Ti(t) {
        return Ii(t[4]);
      }
      function Ii(t) {
        for (; null !== t && !Dt(t); ) t = t[4];
        return t;
      }
      function Ri(t) {
        Pi(se(), ie(), Oe() + t, ue());
      }
      function Pi(t, e, n, i) {
        if (!i)
          if (3 == (3 & e[2])) {
            const i = t.preOrderCheckHooks;
            null !== i && De(e, i, n);
          } else {
            const i = t.preOrderHooks;
            null !== i && je(e, i, 0, n);
          }
        Ae(n);
      }
      function Di(t, e) {
        return (t << 17) | (e << 2);
      }
      function ji(t) {
        return (t >> 17) & 32767;
      }
      function Li(t) {
        return 2 | t;
      }
      function Mi(t) {
        return (131068 & t) >> 2;
      }
      function Ni(t, e) {
        return (-131069 & t) | (e << 2);
      }
      function Fi(t) {
        return 1 | t;
      }
      function Vi(t, e) {
        const n = t.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const s = n[i],
              r = n[i + 1];
            if (-1 !== r) {
              const n = t.data[r];
              ye(s), n.contentQueries(2, e[r], r);
            }
          }
      }
      function Hi(t, e, n) {
        return Bt(e) ? e.createElement(t, n) : null === n ? e.createElement(t) : e.createElementNS(n, t);
      }
      function Bi(t, e, n, i, s, r, o, a, l, c) {
        const u = e.blueprint.slice();
        return (
          (u[0] = s),
          (u[2] = 140 | i),
          Jt(u),
          (u[3] = u[15] = t),
          (u[8] = n),
          (u[10] = o || (t && t[10])),
          (u[11] = a || (t && t[11])),
          (u[12] = l || (t && t[12]) || null),
          (u[9] = c || (t && t[9]) || null),
          (u[6] = r),
          (u[16] = 2 == e.type ? t[16] : u),
          u
        );
      }
      function Ui(t, e, n, i, s, r) {
        const o = n + 20,
          a =
            t.data[o] ||
            (function (t, e, n, i, s, r) {
              const o = oe(),
                a = le(),
                l = a ? o : o && o.parent,
                c = (t.data[n] = Xi(0, l && l !== e ? l : null, i, n, s, r));
              return (
                null === t.firstChild && (t.firstChild = c),
                o && (!a || null != o.child || (null === c.parent && 2 !== o.type) ? a || (o.next = c) : (o.child = c)),
                c
              );
            })(t, e, o, i, s, r);
        return ae(a, !0), a;
      }
      function zi(t, e, n) {
        we(e, e[6]);
        try {
          const i = t.viewQuery;
          null !== i && vs(1, i, n);
          const s = t.template;
          null !== s && qi(t, e, s, 1, n),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && Vi(t, e),
            t.staticViewQueries && vs(2, t.viewQuery, n);
          const r = t.components;
          null !== r &&
            (function (t, e) {
              for (let n = 0; n < e.length; n++) fs(t, e[n]);
            })(e, r);
        } catch (i) {
          throw (t.firstCreatePass && (t.incompleteFirstPass = !0), i);
        } finally {
          (e[2] &= -5), ke();
        }
      }
      function Yi(t, e, n, i) {
        const s = e[2];
        if (256 == (256 & s)) return;
        we(e, e[6]);
        const r = ue();
        try {
          Jt(e), (ee.lFrame.bindingIndex = t.bindingStartIndex), null !== n && qi(t, e, n, 2, i);
          const o = 3 == (3 & s);
          if (!r)
            if (o) {
              const n = t.preOrderCheckHooks;
              null !== n && De(e, n, null);
            } else {
              const n = t.preOrderHooks;
              null !== n && je(e, n, 0, null), Le(e, 0);
            }
          if (
            ((function (t) {
              for (let e = Ai(t); null !== e; e = Ti(e)) {
                if (!e[2]) continue;
                const t = e[9];
                for (let e = 0; e < t.length; e++) {
                  const n = t[e],
                    i = n[3];
                  0 == (1024 & n[2]) && te(i, 1), (n[2] |= 1024);
                }
              }
            })(e),
            (function (t) {
              for (let e = Ai(t); null !== e; e = Ti(e))
                for (let t = 10; t < e.length; t++) {
                  const n = e[t],
                    i = n[1];
                  Gt(n) && Yi(i, n, i.template, n[8]);
                }
            })(e),
            null !== t.contentQueries && Vi(t, e),
            !r)
          )
            if (o) {
              const n = t.contentCheckHooks;
              null !== n && De(e, n);
            } else {
              const n = t.contentHooks;
              null !== n && je(e, n, 1), Le(e, 1);
            }
          !(function (t, e) {
            try {
              const n = t.expandoInstructions;
              if (null !== n) {
                let i = t.expandoStartIndex,
                  s = -1,
                  r = -1;
                for (let t = 0; t < n.length; t++) {
                  const o = n[t];
                  'number' == typeof o
                    ? o <= 0
                      ? ((r = 0 - o), Ae(r), (i += 9 + n[++t]), (s = i))
                      : (i += o)
                    : (null !== o && (fe(i, s), o(2, e[s])), s++);
                }
              }
            } finally {
              Ae(-1);
            }
          })(t, e);
          const a = t.components;
          null !== a &&
            (function (t, e) {
              for (let n = 0; n < e.length; n++) ms(t, e[n]);
            })(e, a);
          const l = t.viewQuery;
          if ((null !== l && vs(2, l, i), !r))
            if (o) {
              const n = t.viewCheckHooks;
              null !== n && De(e, n);
            } else {
              const n = t.viewHooks;
              null !== n && je(e, n, 2), Le(e, 2);
            }
          !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
            r || (e[2] &= -73),
            1024 & e[2] && ((e[2] &= -1025), te(e[3], -1));
        } finally {
          ke();
        }
      }
      function $i(t, e, n, i) {
        const s = e[10],
          r = !ue(),
          o = Zt(e);
        try {
          r && !o && s.begin && s.begin(), o && zi(t, e, i), Yi(t, e, n, i);
        } finally {
          r && !o && s.end && s.end();
        }
      }
      function qi(t, e, n, i, s) {
        const r = Oe();
        try {
          Ae(-1), 2 & i && e.length > 20 && Pi(t, e, 0, ue()), n(i, s);
        } finally {
          Ae(r);
        }
      }
      function Wi(t, e, n) {
        if (jt(e)) {
          const i = e.directiveEnd;
          for (let s = e.directiveStart; s < i; s++) {
            const e = t.data[s];
            e.contentQueries && e.contentQueries(1, n[s], s);
          }
        }
      }
      function Ki(t, e, n) {
        ne() &&
          ((function (t, e, n, i) {
            const s = n.directiveStart,
              r = n.directiveEnd;
            t.firstCreatePass || nn(n, e), di(i, e);
            const o = n.initialInputs;
            for (let a = s; a < r; a++) {
              const i = t.data[a],
                r = Nt(i);
              r && us(e, n, i);
              const l = dn(e, t, a, n);
              di(l, e), null !== o && hs(0, a - s, l, i, 0, o), r && (Kt(n.index, e)[8] = l);
            }
          })(t, e, n, $t(n, e)),
          128 == (128 & n.flags) &&
            (function (t, e, n) {
              const i = n.directiveStart,
                s = n.directiveEnd,
                r = t.expandoInstructions,
                o = t.firstCreatePass,
                a = n.index - 20,
                l = ee.lFrame.currentDirectiveIndex;
              try {
                Ae(a);
                for (let n = i; n < s; n++) {
                  const i = t.data[n],
                    s = e[n];
                  ge(n),
                    null !== i.hostBindings || 0 !== i.hostVars || null !== i.hostAttrs ? ss(i, s) : o && r.push(null);
                }
              } finally {
                Ae(-1), ge(l);
              }
            })(t, e, n));
      }
      function Qi(t, e, n = $t) {
        const i = e.localNames;
        if (null !== i) {
          let s = e.index + 1;
          for (let r = 0; r < i.length; r += 2) {
            const o = i[r + 1],
              a = -1 === o ? n(e, t) : t[o];
            t[s++] = a;
          }
        }
      }
      function Zi(t) {
        const e = t.tView;
        return null === e || e.incompleteFirstPass
          ? (t.tView = Gi(
              1,
              -1,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts
            ))
          : e;
      }
      function Gi(t, e, n, i, s, r, o, a, l, c) {
        const u = 20 + i,
          h = u + s,
          d = (function (t, e) {
            const n = [];
            for (let i = 0; i < e; i++) n.push(i < t ? null : ki);
            return n;
          })(u, h);
        return (d[1] = {
          type: t,
          id: e,
          blueprint: d,
          template: n,
          queries: null,
          viewQuery: a,
          node: null,
          data: d.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: h,
          expandoInstructions: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof r ? r() : r,
          pipeRegistry: 'function' == typeof o ? o() : o,
          firstChild: null,
          schemas: l,
          consts: c,
          incompleteFirstPass: !1,
        });
      }
      function Xi(t, e, n, i, s, r) {
        return {
          type: n,
          index: i,
          injectorIndex: e ? e.injectorIndex : -1,
          directiveStart: -1,
          directiveEnd: -1,
          directiveStylingLast: -1,
          propertyBindings: null,
          flags: 0,
          providerIndexes: 0,
          tagName: s,
          attrs: r,
          mergedAttrs: null,
          localNames: null,
          initialInputs: void 0,
          inputs: null,
          outputs: null,
          tViews: null,
          next: null,
          projectionNext: null,
          child: null,
          parent: e,
          projection: null,
          styles: null,
          stylesWithoutHost: null,
          residualStyles: void 0,
          classes: null,
          classesWithoutHost: null,
          residualClasses: void 0,
          classBindings: 0,
          styleBindings: 0,
        };
      }
      function Ji(t, e, n) {
        for (let i in t)
          if (t.hasOwnProperty(i)) {
            const s = t[i];
            (n = null === n ? {} : n).hasOwnProperty(i) ? n[i].push(e, s) : (n[i] = [e, s]);
          }
        return n;
      }
      function ts(t, e, n, i, s, r, o, a) {
        const l = $t(e, n);
        let c,
          u = e.inputs;
        var h;
        !a && null != u && (c = u[i])
          ? (ks(t, n, c, i, s),
            Lt(e) &&
              (function (t, e) {
                const n = Kt(e, t);
                16 & n[2] || (n[2] |= 64);
              })(n, e.index))
          : 3 === e.type &&
            ((i =
              'class' === (h = i)
                ? 'className'
                : 'for' === h
                ? 'htmlFor'
                : 'formaction' === h
                ? 'formAction'
                : 'innerHtml' === h
                ? 'innerHTML'
                : 'readonly' === h
                ? 'readOnly'
                : 'tabindex' === h
                ? 'tabIndex'
                : h),
            (s = null != o ? o(s, e.tagName || '', i) : s),
            Bt(r) ? r.setProperty(l, i, s) : Be(i) || (l.setProperty ? l.setProperty(i, s) : (l[i] = s)));
      }
      function es(t, e, n, i) {
        let s = !1;
        if (ne()) {
          const r = (function (t, e, n) {
              const i = t.directiveRegistry;
              let s = null;
              if (i)
                for (let r = 0; r < i.length; r++) {
                  const o = i[r];
                  xi(n, o.selectors, !1) &&
                    (s || (s = []),
                    an(nn(n, e), t, o.type),
                    Nt(o) ? (2 & n.flags && pi(n), os(t, n), s.unshift(o)) : s.push(o));
                }
              return s;
            })(t, e, n),
            o = null === i ? null : { '': -1 };
          if (null !== r) {
            let i = 0;
            (s = !0), ls(n, t.data.length, r.length);
            for (let t = 0; t < r.length; t++) {
              const e = r[t];
              e.providersResolver && e.providersResolver(e);
            }
            rs(t, n, r.length);
            let a = !1,
              l = !1;
            for (let s = 0; s < r.length; s++) {
              const c = r[s];
              (n.mergedAttrs = Ue(n.mergedAttrs, c.hostAttrs)),
                cs(t, e, c),
                as(t.data.length - 1, c, o),
                null !== c.contentQueries && (n.flags |= 8),
                (null === c.hostBindings && null === c.hostAttrs && 0 === c.hostVars) || (n.flags |= 128),
                !a &&
                  (c.onChanges || c.onInit || c.doCheck) &&
                  ((t.preOrderHooks || (t.preOrderHooks = [])).push(n.index - 20), (a = !0)),
                l ||
                  (!c.onChanges && !c.doCheck) ||
                  ((t.preOrderCheckHooks || (t.preOrderCheckHooks = [])).push(n.index - 20), (l = !0)),
                ns(t, c),
                (i += c.hostVars);
            }
            !(function (t, e) {
              const n = e.directiveEnd,
                i = t.data,
                s = e.attrs,
                r = [];
              let o = null,
                a = null;
              for (let l = e.directiveStart; l < n; l++) {
                const t = i[l],
                  n = t.inputs,
                  c = null === s || bi(e) ? null : ds(n, s);
                r.push(c), (o = Ji(n, l, o)), (a = Ji(t.outputs, l, a));
              }
              null !== o &&
                (o.hasOwnProperty('class') && (e.flags |= 16), o.hasOwnProperty('style') && (e.flags |= 32)),
                (e.initialInputs = r),
                (e.inputs = o),
                (e.outputs = a);
            })(t, n),
              is(t, e, i);
          }
          o &&
            (function (t, e, n) {
              if (e) {
                const i = (t.localNames = []);
                for (let t = 0; t < e.length; t += 2) {
                  const s = n[e[t + 1]];
                  if (null == s) throw new Error(`Export of name '${e[t + 1]}' not found!`);
                  i.push(e[t], s);
                }
              }
            })(n, i, o);
        }
        return (n.mergedAttrs = Ue(n.mergedAttrs, n.attrs)), s;
      }
      function ns(t, e) {
        const n = t.expandoInstructions;
        n.push(e.hostBindings), 0 !== e.hostVars && n.push(e.hostVars);
      }
      function is(t, e, n) {
        for (let i = 0; i < n; i++) e.push(ki), t.blueprint.push(ki), t.data.push(null);
      }
      function ss(t, e) {
        null !== t.hostBindings && t.hostBindings(1, e);
      }
      function rs(t, e, n) {
        const i = 20 - e.index,
          s = t.data.length - (65535 & e.providerIndexes);
        (t.expandoInstructions || (t.expandoInstructions = [])).push(i, s, n);
      }
      function os(t, e) {
        (e.flags |= 2), (t.components || (t.components = [])).push(e.index);
      }
      function as(t, e, n) {
        if (n) {
          if (e.exportAs) for (let i = 0; i < e.exportAs.length; i++) n[e.exportAs[i]] = t;
          Nt(e) && (n[''] = t);
        }
      }
      function ls(t, e, n) {
        (t.flags |= 1), (t.directiveStart = e), (t.directiveEnd = e + n), (t.providerIndexes = e);
      }
      function cs(t, e, n) {
        t.data.push(n);
        const i = n.factory || (n.factory = It(n.type)),
          s = new Fe(i, Nt(n), null);
        t.blueprint.push(s), e.push(s);
      }
      function us(t, e, n) {
        const i = $t(e, t),
          s = Zi(n),
          r = t[10],
          o = gs(t, Bi(t, s, null, n.onPush ? 64 : 16, i, e, r, r.createRenderer(i, n)));
        t[e.index] = o;
      }
      function hs(t, e, n, i, s, r) {
        const o = r[e];
        if (null !== o) {
          const t = i.setInput;
          for (let e = 0; e < o.length; ) {
            const s = o[e++],
              r = o[e++],
              a = o[e++];
            null !== t ? i.setInput(n, a, s, r) : (n[r] = a);
          }
        }
      }
      function ds(t, e) {
        let n = null,
          i = 0;
        for (; i < e.length; ) {
          const s = e[i];
          if (0 !== s)
            if (5 !== s) {
              if ('number' == typeof s) break;
              t.hasOwnProperty(s) && (null === n && (n = []), n.push(s, t[s], e[i + 1])), (i += 2);
            } else i += 2;
          else i += 4;
        }
        return n;
      }
      function ps(t, e, n, i) {
        return new Array(t, !0, !1, e, null, 0, i, n, null, null);
      }
      function ms(t, e) {
        const n = Kt(e, t);
        if (Gt(n)) {
          const t = n[1];
          80 & n[2]
            ? Yi(t, n, t.template, n[8])
            : n[5] > 0 &&
              (function t(e) {
                for (let i = Ai(e); null !== i; i = Ti(i))
                  for (let e = 10; e < i.length; e++) {
                    const n = i[e];
                    if (1024 & n[2]) {
                      const t = n[1];
                      Yi(t, n, t.template, n[8]);
                    } else n[5] > 0 && t(n);
                  }
                const n = e[1].components;
                if (null !== n)
                  for (let i = 0; i < n.length; i++) {
                    const s = Kt(n[i], e);
                    Gt(s) && s[5] > 0 && t(s);
                  }
              })(n);
        }
      }
      function fs(t, e) {
        const n = Kt(e, t),
          i = n[1];
        !(function (t, e) {
          for (let n = e.length; n < t.blueprint.length; n++) e.push(t.blueprint[n]);
        })(i, n),
          zi(i, n, n[8]);
      }
      function gs(t, e) {
        return t[13] ? (t[14][4] = e) : (t[13] = e), (t[14] = e), e;
      }
      function bs(t) {
        for (; t; ) {
          t[2] |= 64;
          const e = Oi(t);
          if (Ft(t) && !e) return t;
          t = e;
        }
        return null;
      }
      function _s(t, e, n) {
        const i = e[10];
        i.begin && i.begin();
        try {
          Yi(t, e, t.template, n);
        } catch (s) {
          throw (Es(e, s), s);
        } finally {
          i.end && i.end();
        }
      }
      function ys(t) {
        !(function (t) {
          for (let e = 0; e < t.components.length; e++) {
            const n = t.components[e],
              i = Qt(n),
              s = i[1];
            $i(s, i, s.template, n);
          }
        })(t[8]);
      }
      function vs(t, e, n) {
        ye(0), e(t, n);
      }
      const ws = (() => Promise.resolve(null))();
      function xs(t) {
        return t[7] || (t[7] = []);
      }
      function Cs(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function Ss(t, e, n) {
        return (
          (null === t || Nt(t)) &&
            (n = (function (t) {
              for (; Array.isArray(t); ) {
                if ('object' == typeof t[1]) return t;
                t = t[0];
              }
              return null;
            })(n[e.index])),
          n[11]
        );
      }
      function Es(t, e) {
        const n = t[9],
          i = n ? n.get(vn, null) : null;
        i && i.handleError(e);
      }
      function ks(t, e, n, i, s) {
        for (let r = 0; r < n.length; ) {
          const o = n[r++],
            a = n[r++],
            l = e[o],
            c = t.data[o];
          null !== c.setInput ? c.setInput(l, s, i, a) : (l[a] = s);
        }
      }
      function Os(t, e) {
        const n = e[3];
        return -1 === t.index ? (Dt(n) ? n : null) : n;
      }
      function As(t, e) {
        const n = Os(t, e);
        return n ? Hs(e[11], n[7]) : null;
      }
      function Ts(t, e, n, i, s) {
        if (null != i) {
          let r,
            o = !1;
          Dt(i) ? (r = i) : Pt(i) && ((o = !0), (i = i[0]));
          const a = zt(i);
          0 === t && null !== n
            ? null == s
              ? Fs(e, n, a)
              : Ns(e, n, a, s || null)
            : 1 === t && null !== n
            ? Ns(e, n, a, s || null)
            : 2 === t
            ? (function (t, e, n) {
                const i = Hs(t, e);
                i &&
                  (function (t, e, n, i) {
                    Bt(t) ? t.removeChild(e, n, i) : e.removeChild(n);
                  })(t, i, e, n);
              })(e, a, o)
            : 3 === t && e.destroyNode(a),
            null != r &&
              (function (t, e, n, i, s) {
                const r = n[7];
                r !== zt(n) && Ts(e, t, i, r, s);
                for (let o = 10; o < n.length; o++) {
                  const s = n[o];
                  $s(s[1], s, t, e, i, r);
                }
              })(e, t, r, n, s);
        }
      }
      function Is(t, e, n, i) {
        const s = As(t.node, e);
        s && $s(t, e, e[11], n ? 1 : 2, s, i);
      }
      function Rs(t, e) {
        const n = t[9],
          i = n.indexOf(e);
        1024 & e[2] && te(e[3], -1), n.splice(i, 1);
      }
      function Ps(t, e) {
        if (t.length <= 10) return;
        const n = 10 + e,
          i = t[n];
        if (i) {
          const s = i[17];
          null !== s && s !== t && Rs(s, i), e > 0 && (t[n - 1][4] = i[4]);
          const r = ut(t, 10 + e);
          Is(i[1], i, !1, null);
          const o = r[19];
          null !== o && o.detachView(r[1]), (i[3] = null), (i[4] = null), (i[2] &= -129);
        }
        return i;
      }
      function Ds(t, e) {
        if (!(256 & e[2])) {
          const n = e[11];
          Bt(n) && n.destroyNode && $s(t, e, n, 3, null, null),
            (function (t) {
              let e = t[13];
              if (!e) return Ls(t[1], t);
              for (; e; ) {
                let n = null;
                if (Pt(e)) n = e[13];
                else {
                  const t = e[10];
                  t && (n = t);
                }
                if (!n) {
                  for (; e && !e[4] && e !== t; ) Pt(e) && Ls(e[1], e), (e = js(e, t));
                  null === e && (e = t), Pt(e) && Ls(e[1], e), (n = e && e[4]);
                }
                e = n;
              }
            })(e);
        }
      }
      function js(t, e) {
        let n;
        return Pt(t) && (n = t[6]) && 2 === n.type ? Os(n, t) : t[3] === e ? null : t[3];
      }
      function Ls(t, e) {
        if (!(256 & e[2])) {
          (e[2] &= -129),
            (e[2] |= 256),
            (function (t, e) {
              let n;
              if (null != t && null != (n = t.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const t = e[n[i]];
                  if (!(t instanceof Fe)) {
                    const e = n[i + 1];
                    if (Array.isArray(e)) for (let n = 0; n < e.length; n += 2) e[n + 1].call(t[e[n]]);
                    else e.call(t);
                  }
                }
            })(t, e),
            (function (t, e) {
              const n = t.cleanup;
              if (null !== n) {
                const t = e[7];
                for (let i = 0; i < n.length - 1; i += 2)
                  if ('string' == typeof n[i]) {
                    const s = n[i + 1],
                      r = 'function' == typeof s ? s(e) : zt(e[s]),
                      o = t[n[i + 2]],
                      a = n[i + 3];
                    'boolean' == typeof a ? r.removeEventListener(n[i], o, a) : a >= 0 ? t[a]() : t[-a].unsubscribe(),
                      (i += 2);
                  } else n[i].call(t[n[i + 1]]);
                e[7] = null;
              }
            })(t, e);
          const n = e[6];
          n && 3 === n.type && Bt(e[11]) && e[11].destroy();
          const i = e[17];
          if (null !== i && Dt(e[3])) {
            i !== e[3] && Rs(i, e);
            const n = e[19];
            null !== n && n.detachView(t);
          }
        }
      }
      function Ms(t, e, n) {
        let i = e.parent;
        for (; null != i && (4 === i.type || 5 === i.type); ) i = (e = i).parent;
        if (null == i) {
          const t = n[6];
          return 2 === t.type ? As(t, n) : n[0];
        }
        if (e && 5 === e.type && 4 & e.flags) return $t(e, n).parentNode;
        if (2 & i.flags) {
          const e = t.data,
            n = e[e[i.index].directiveStart].encapsulation;
          if (n !== gt.ShadowDom && n !== gt.Native) return null;
        }
        return $t(i, n);
      }
      function Ns(t, e, n, i) {
        Bt(t) ? t.insertBefore(e, n, i) : e.insertBefore(n, i, !0);
      }
      function Fs(t, e, n) {
        Bt(t) ? t.appendChild(e, n) : e.appendChild(n);
      }
      function Vs(t, e, n, i) {
        null !== i ? Ns(t, e, n, i) : Fs(t, e, n);
      }
      function Hs(t, e) {
        return Bt(t) ? t.parentNode(e) : e.parentNode;
      }
      function Bs(t, e) {
        if (2 === t.type) {
          const n = Os(t, e);
          return null === n ? null : zs(n.indexOf(e, 10) - 10, n);
        }
        return 4 === t.type || 5 === t.type ? $t(t, e) : null;
      }
      function Us(t, e, n, i) {
        const s = Ms(t, i, e);
        if (null != s) {
          const t = e[11],
            r = Bs(i.parent || e[6], e);
          if (Array.isArray(n)) for (let e = 0; e < n.length; e++) Vs(t, s, n[e], r);
          else Vs(t, s, n, r);
        }
      }
      function zs(t, e) {
        const n = 10 + t + 1;
        if (n < e.length) {
          const t = e[n],
            i = t[1].firstChild;
          if (null !== i)
            return (function t(e, n) {
              if (null !== n) {
                const i = n.type;
                if (3 === i) return $t(n, e);
                if (0 === i) return zs(-1, e[n.index]);
                if (4 === i || 5 === i) {
                  const i = n.child;
                  if (null !== i) return t(e, i);
                  {
                    const t = e[n.index];
                    return Dt(t) ? zs(-1, t) : zt(t);
                  }
                }
                {
                  const i = e[16],
                    s = i[6],
                    r = Oi(i),
                    o = s.projection[n.projection];
                  return null != o ? t(r, o) : t(e, n.next);
                }
              }
              return null;
            })(t, i);
        }
        return e[7];
      }
      function Ys(t, e, n, i, s, r, o) {
        for (; null != n; ) {
          const a = i[n.index],
            l = n.type;
          o && 0 === e && (a && di(zt(a), i), (n.flags |= 4)),
            64 != (64 & n.flags) &&
              (4 === l || 5 === l
                ? (Ys(t, e, n.child, i, s, r, !1), Ts(e, t, s, a, r))
                : 1 === l
                ? qs(t, e, i, n, s, r)
                : Ts(e, t, s, a, r)),
            (n = o ? n.projectionNext : n.next);
        }
      }
      function $s(t, e, n, i, s, r) {
        Ys(n, i, t.node.child, e, s, r, !1);
      }
      function qs(t, e, n, i, s, r) {
        const o = n[16],
          a = o[6].projection[i.projection];
        if (Array.isArray(a)) for (let l = 0; l < a.length; l++) Ts(e, t, s, a[l], r);
        else Ys(t, e, a, o[3], s, r, !0);
      }
      function Ws(t, e, n) {
        Bt(t) ? t.setAttribute(e, 'style', n) : (e.style.cssText = n);
      }
      function Ks(t, e, n) {
        Bt(t) ? ('' === n ? t.removeAttribute(e, 'class') : t.setAttribute(e, 'class', n)) : (e.className = n);
      }
      class Qs {
        constructor(t, e) {
          (this._lView = t), (this._cdRefInjectingView = e), (this._appRef = null), (this._viewContainerRef = null);
        }
        get rootNodes() {
          const t = this._lView;
          return null == t[0]
            ? (function t(e, n, i, s, r = !1) {
                for (; null !== i; ) {
                  const o = n[i.index];
                  if ((null !== o && s.push(zt(o)), Dt(o)))
                    for (let e = 10; e < o.length; e++) {
                      const n = o[e],
                        i = n[1].firstChild;
                      null !== i && t(n[1], n, i, s);
                    }
                  const a = i.type;
                  if (4 === a || 5 === a) t(e, n, i.child, s);
                  else if (1 === a) {
                    const e = n[16],
                      r = e[6].projection[i.projection];
                    if (Array.isArray(r)) s.push(...r);
                    else {
                      const n = Oi(e);
                      t(n[1], n, r, s, !0);
                    }
                  }
                  i = r ? i.projectionNext : i.next;
                }
                return s;
              })(t[1], t, t[6].child, [])
            : [];
        }
        get context() {
          return this._lView[8];
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._viewContainerRef) {
            const t = this._viewContainerRef.indexOf(this);
            t > -1 && this._viewContainerRef.detach(t), (this._viewContainerRef = null);
          }
          Ds(this._lView[1], this._lView);
        }
        onDestroy(t) {
          var e, n, i;
          (e = this._lView[1]),
            (i = t),
            xs((n = this._lView)).push(i),
            e.firstCreatePass && Cs(e).push(n[7].length - 1, null);
        }
        markForCheck() {
          bs(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          _s(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (t, e, n) {
            he(!0);
            try {
              _s(t, e, n);
            } finally {
              he(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef(t) {
          if (this._appRef) throw new Error('This view is already attached directly to the ApplicationRef!');
          this._viewContainerRef = t;
        }
        detachFromAppRef() {
          var t;
          (this._appRef = null), $s(this._lView[1], (t = this._lView), t[11], 2, null, null);
        }
        attachToAppRef(t) {
          if (this._viewContainerRef) throw new Error('This view is already attached to a ViewContainer!');
          this._appRef = t;
        }
      }
      class Zs extends Qs {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          ys(this._view);
        }
        checkNoChanges() {
          !(function (t) {
            he(!0);
            try {
              ys(t);
            } finally {
              he(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      let Gs, Xs, Js;
      function tr(t, e, n) {
        return Gs || (Gs = class extends t {}), new Gs($t(e, n));
      }
      function er(t, e, n, i) {
        return (
          Xs ||
            (Xs = class extends t {
              constructor(t, e, n) {
                super(), (this._declarationView = t), (this._declarationTContainer = e), (this.elementRef = n);
              }
              createEmbeddedView(t) {
                const e = this._declarationTContainer.tViews,
                  n = Bi(this._declarationView, e, t, 16, null, e.node);
                n[17] = this._declarationView[this._declarationTContainer.index];
                const i = this._declarationView[19];
                return null !== i && (n[19] = i.createEmbeddedView(e)), zi(e, n, t), new Qs(n);
              }
            }),
          0 === n.type ? new Xs(i, n, tr(e, n, i)) : null
        );
      }
      function nr(t, e, n, i) {
        let s;
        Js ||
          (Js = class extends t {
            constructor(t, e, n) {
              super(), (this._lContainer = t), (this._hostTNode = e), (this._hostView = n);
            }
            get element() {
              return tr(e, this._hostTNode, this._hostView);
            }
            get injector() {
              return new fn(this._hostTNode, this._hostView);
            }
            get parentInjector() {
              const t = on(this._hostTNode, this._hostView),
                e = We(t, this._hostView),
                n = (function (t, e, n) {
                  if (n.parent && -1 !== n.parent.injectorIndex) {
                    const t = n.parent.injectorIndex;
                    let e = n.parent;
                    for (; null != e.parent && t == e.parent.injectorIndex; ) e = e.parent;
                    return e;
                  }
                  let i = qe(t),
                    s = e,
                    r = e[6];
                  for (; i > 1; ) (s = s[15]), (r = s[6]), i--;
                  return r;
                })(t, this._hostView, this._hostTNode);
              return Ye(t) && null != n ? new fn(n, e) : new fn(null, this._hostView);
            }
            clear() {
              for (; this.length > 0; ) this.remove(this.length - 1);
            }
            get(t) {
              return (null !== this._lContainer[8] && this._lContainer[8][t]) || null;
            }
            get length() {
              return this._lContainer.length - 10;
            }
            createEmbeddedView(t, e, n) {
              const i = t.createEmbeddedView(e || {});
              return this.insert(i, n), i;
            }
            createComponent(t, e, n, i, s) {
              const r = n || this.parentInjector;
              if (!s && null == t.ngModule && r) {
                const t = r.get(ot, null);
                t && (s = t);
              }
              const o = t.create(r, i, void 0, s);
              return this.insert(o.hostView, e), o;
            }
            insert(t, e) {
              const n = t._lView,
                i = n[1];
              if (t.destroyed) throw new Error('Cannot insert a destroyed View in a ViewContainer!');
              if ((this.allocateContainerIfNeeded(), Dt(n[3]))) {
                const e = this.indexOf(t);
                if (-1 !== e) this.detach(e);
                else {
                  const e = n[3],
                    i = new Js(e, e[6], e[3]);
                  i.detach(i.indexOf(t));
                }
              }
              const s = this._adjustIndex(e);
              return (
                (function (t, e, n, i) {
                  const s = 10 + i,
                    r = n.length;
                  i > 0 && (n[s - 1][4] = e),
                    i < r - 10 ? ((e[4] = n[s]), ct(n, 10 + i, e)) : (n.push(e), (e[4] = null)),
                    (e[3] = n);
                  const o = e[17];
                  null !== o &&
                    n !== o &&
                    (function (t, e) {
                      const n = t[9];
                      e[16] !== e[3][3][16] && (t[2] = !0), null === n ? (t[9] = [e]) : n.push(e);
                    })(o, e);
                  const a = e[19];
                  null !== a && a.insertView(t), (e[2] |= 128);
                })(i, n, this._lContainer, s),
                Is(i, n, !0, zs(s, this._lContainer)),
                t.attachToViewContainerRef(this),
                ct(this._lContainer[8], s, t),
                t
              );
            }
            move(t, e) {
              if (t.destroyed) throw new Error('Cannot move a destroyed View in a ViewContainer!');
              return this.insert(t, e);
            }
            indexOf(t) {
              const e = this._lContainer[8];
              return null !== e ? e.indexOf(t) : -1;
            }
            remove(t) {
              this.allocateContainerIfNeeded();
              const e = this._adjustIndex(t, -1);
              !(function (t, e) {
                const n = Ps(t, e);
                n && Ds(n[1], n);
              })(this._lContainer, e),
                ut(this._lContainer[8], e);
            }
            detach(t) {
              this.allocateContainerIfNeeded();
              const e = this._adjustIndex(t, -1),
                n = Ps(this._lContainer, e);
              return n && null != ut(this._lContainer[8], e) ? new Qs(n) : null;
            }
            _adjustIndex(t, e = 0) {
              return null == t ? this.length + e : t;
            }
            allocateContainerIfNeeded() {
              null === this._lContainer[8] && (this._lContainer[8] = []);
            }
          });
        const r = i[n.index];
        if (Dt(r)) s = r;
        else {
          let t;
          if (4 === n.type) t = zt(r);
          else if (((t = i[11].createComment('')), Ft(i))) {
            const e = i[11],
              s = $t(n, i);
            Ns(
              e,
              Hs(e, s),
              t,
              (function (t, e) {
                return Bt(t) ? t.nextSibling(e) : e.nextSibling;
              })(e, s)
            );
          } else Us(i[1], i, t, n);
          (i[n.index] = s = ps(r, i, t, n)), gs(i, s);
        }
        return new Js(s, n, i);
      }
      function ir(t = !1) {
        return (function (t, e, n) {
          if (!n && Lt(t)) {
            const n = Kt(t.index, e);
            return new Qs(n, n);
          }
          return 3 === t.type || 0 === t.type || 4 === t.type || 5 === t.type ? new Qs(e[16], e) : null;
        })(oe(), ie(), t);
      }
      let sr = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => rr()), t;
      })();
      const rr = ir,
        or = new $('Set Injector scope.'),
        ar = {},
        lr = {},
        cr = [];
      let ur = void 0;
      function hr() {
        return void 0 === ur && (ur = new rt()), ur;
      }
      function dr(t, e = null, n = null, i) {
        return new pr(t, n, e || hr(), i);
      }
      class pr {
        constructor(t, e, n, i = null) {
          (this.parent = n),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const s = [];
          e && lt(e, (n) => this.processProvider(n, t, e)),
            lt([t], (t) => this.processInjectorType(t, [], s)),
            this.records.set(q, gr(void 0, this));
          const r = this.records.get(or);
          (this.scope = null != r ? r.value : null), (this.source = i || ('object' == typeof t ? null : O(t)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((t) => t.ngOnDestroy());
          } finally {
            this.records.clear(), this.onDestroy.clear(), this.injectorDefTypes.clear();
          }
        }
        get(t, e = W, n = m.Default) {
          this.assertNotDestroyed();
          const i = X(this);
          try {
            if (!(n & m.SkipSelf)) {
              let e = this.records.get(t);
              if (void 0 === e) {
                const n = ('function' == typeof (s = t) || ('object' == typeof s && s instanceof $)) && y(t);
                (e = n && this.injectableDefInScope(n) ? gr(mr(t), ar) : null), this.records.set(t, e);
              }
              if (null != e) return this.hydrate(t, e);
            }
            return (n & m.Self ? hr() : this.parent).get(t, (e = n & m.Optional && e === W ? null : e));
          } catch (r) {
            if ('NullInjectorError' === r.name) {
              if (((r.ngTempTokenPath = r.ngTempTokenPath || []).unshift(O(t)), i)) throw r;
              return (function (t, e, n, i) {
                const s = t.ngTempTokenPath;
                throw (
                  (e.__source && s.unshift(e.__source),
                  (t.message = (function (t, e, n, i = null) {
                    t = t && '\n' === t.charAt(0) && '\u0275' == t.charAt(1) ? t.substr(2) : t;
                    let s = O(e);
                    if (Array.isArray(e)) s = e.map(O).join(' -> ');
                    else if ('object' == typeof e) {
                      let t = [];
                      for (let n in e)
                        if (e.hasOwnProperty(n)) {
                          let i = e[n];
                          t.push(n + ':' + ('string' == typeof i ? JSON.stringify(i) : O(i)));
                        }
                      s = `{${t.join(', ')}}`;
                    }
                    return `${n}${i ? '(' + i + ')' : ''}[${s}]: ${t.replace(K, '\n  ')}`;
                  })('\n' + t.message, s, n, i)),
                  (t.ngTokenPath = s),
                  (t.ngTempTokenPath = null),
                  t)
                );
              })(r, t, 'R3InjectorError', this.source);
            }
            throw r;
          } finally {
            X(i);
          }
          var s;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((t) => this.get(t));
        }
        toString() {
          const t = [];
          return this.records.forEach((e, n) => t.push(O(n))), `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Error('Injector has already been destroyed.');
        }
        processInjectorType(t, e, n) {
          if (!(t = R(t))) return !1;
          let i = w(t);
          const s = (null == i && t.ngModule) || void 0,
            r = void 0 === s ? t : s,
            o = -1 !== n.indexOf(r);
          if ((void 0 !== s && (i = w(s)), null == i)) return !1;
          if (null != i.imports && !o) {
            let t;
            n.push(r);
            try {
              lt(i.imports, (i) => {
                this.processInjectorType(i, e, n) && (void 0 === t && (t = []), t.push(i));
              });
            } finally {
            }
            if (void 0 !== t)
              for (let e = 0; e < t.length; e++) {
                const { ngModule: n, providers: i } = t[e];
                lt(i, (t) => this.processProvider(t, n, i || cr));
              }
          }
          this.injectorDefTypes.add(r), this.records.set(r, gr(i.factory, ar));
          const a = i.providers;
          if (null != a && !o) {
            const e = t;
            lt(a, (t) => this.processProvider(t, e, a));
          }
          return void 0 !== s && void 0 !== t.providers;
        }
        processProvider(t, e, n) {
          let i = _r((t = R(t))) ? t : R(t && t.provide);
          const s = (function (t, e, n) {
            return br(t) ? gr(void 0, t.useValue) : gr(fr(t, e, n), ar);
          })(t, e, n);
          if (_r(t) || !0 !== t.multi) {
            const t = this.records.get(i);
            t && void 0 !== t.multi && mi();
          } else {
            let e = this.records.get(i);
            e
              ? void 0 === e.multi && mi()
              : ((e = gr(void 0, ar, !0)), (e.factory = () => st(e.multi)), this.records.set(i, e)),
              (i = t),
              e.multi.push(t);
          }
          this.records.set(i, s);
        }
        hydrate(t, e) {
          var n;
          return (
            e.value === lr
              ? (function (t) {
                  throw new Error('Cannot instantiate cyclic dependency! ' + t);
                })(O(t))
              : e.value === ar && ((e.value = lr), (e.value = e.factory())),
            'object' == typeof e.value &&
              e.value &&
              null !== (n = e.value) &&
              'object' == typeof n &&
              'function' == typeof n.ngOnDestroy &&
              this.onDestroy.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          return (
            !!t.providedIn &&
            ('string' == typeof t.providedIn
              ? 'any' === t.providedIn || t.providedIn === this.scope
              : this.injectorDefTypes.has(t.providedIn))
          );
        }
      }
      function mr(t) {
        const e = y(t),
          n = null !== e ? e.factory : It(t);
        if (null !== n) return n;
        const i = w(t);
        if (null !== i) return i.factory;
        if (t instanceof $) throw new Error(`Token ${O(t)} is missing a \u0275prov definition.`);
        if (t instanceof Function)
          return (function (t) {
            const e = t.length;
            if (e > 0) {
              const n = ht(e, '?');
              throw new Error(`Can't resolve all parameters for ${O(t)}: (${n.join(', ')}).`);
            }
            const n = (function (t) {
              const e = t && (t[x] || t[E] || (t[S] && t[S]()));
              if (e) {
                const n = (function (t) {
                  if (t.hasOwnProperty('name')) return t.name;
                  const e = ('' + t).match(/^function\s*([^\s(]+)/);
                  return null === e ? '' : e[1];
                })(t);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in v10. Please add @Injectable() to the "${n}" class.`
                  ),
                  e
                );
              }
              return null;
            })(t);
            return null !== n ? () => n.factory(t) : () => new t();
          })(t);
        throw new Error('unreachable');
      }
      function fr(t, e, n) {
        let i = void 0;
        if (_r(t)) {
          const e = R(t);
          return It(e) || mr(e);
        }
        if (br(t)) i = () => R(t.useValue);
        else if ((s = t) && s.useFactory) i = () => t.useFactory(...st(t.deps || []));
        else if (
          (function (t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          i = () => et(R(t.useExisting));
        else {
          const s = R(t && (t.useClass || t.provide));
          if (
            (s ||
              (function (t, e, n) {
                let i = '';
                throw (
                  (t &&
                    e &&
                    (i = ` - only instances of Provider and Type are allowed, got: [${e
                      .map((t) => (t == n ? '?' + n + '?' : '...'))
                      .join(', ')}]`),
                  new Error(`Invalid provider for the NgModule '${O(t)}'` + i))
                );
              })(e, n, t),
            !(function (t) {
              return !!t.deps;
            })(t))
          )
            return It(s) || mr(s);
          i = () => new s(...st(t.deps));
        }
        var s;
        return i;
      }
      function gr(t, e, n = !1) {
        return { factory: t, value: e, multi: n ? [] : void 0 };
      }
      function br(t) {
        return null !== t && 'object' == typeof t && Q in t;
      }
      function _r(t) {
        return 'function' == typeof t;
      }
      const yr = function (t, e, n) {
        return (function (t, e = null, n = null, i) {
          const s = dr(t, e, n, i);
          return s._resolveInjectorDefTypes(), s;
        })({ name: n }, e, t, n);
      };
      let vr = (() => {
        class t {
          static create(t, e) {
            return Array.isArray(t) ? yr(t, e, '') : yr(t.providers, t.parent, t.name || '');
          }
        }
        return (
          (t.THROW_IF_NOT_FOUND = W),
          (t.NULL = new rt()),
          (t.ɵprov = b({ token: t, providedIn: 'any', factory: () => et(q) })),
          (t.__NG_ELEMENT_ID__ = -1),
          t
        );
      })();
      const wr = new $('AnalyzeForEntryComponents');
      let xr = new Map();
      const Cr = new Set();
      function Sr(t) {
        return 'string' == typeof t ? t : t.text();
      }
      function Er(t, e, n) {
        let i = n ? t.styles : null,
          s = n ? t.classes : null,
          r = 0;
        if (null !== e)
          for (let o = 0; o < e.length; o++) {
            const t = e[o];
            'number' == typeof t ? (r = t) : 1 == r ? (s = A(s, t)) : 2 == r && (i = A(i, t + ': ' + e[++o] + ';'));
          }
        n ? (t.styles = i) : (t.stylesWithoutHost = i), n ? (t.classes = s) : (t.classesWithoutHost = s);
      }
      let kr = null;
      function Or() {
        if (!kr) {
          const t = N.Symbol;
          if (t && t.iterator) kr = t.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const n = t[e];
              'entries' !== n && 'size' !== n && Map.prototype[n] === Map.prototype.entries && (kr = n);
            }
          }
        }
        return kr;
      }
      function Ar(t, e) {
        return t === e || ('number' == typeof t && 'number' == typeof e && isNaN(t) && isNaN(e));
      }
      class Tr {
        constructor(t) {
          this.wrapped = t;
        }
        static wrap(t) {
          return new Tr(t);
        }
        static unwrap(t) {
          return Tr.isWrapped(t) ? t.wrapped : t;
        }
        static isWrapped(t) {
          return t instanceof Tr;
        }
      }
      function Ir(t) {
        return !!Rr(t) && (Array.isArray(t) || (!(t instanceof Map) && Or() in t));
      }
      function Rr(t) {
        return null !== t && ('function' == typeof t || 'object' == typeof t);
      }
      function Pr(t, e, n) {
        return (t[e] = n);
      }
      function Dr(t, e, n) {
        return !Object.is(t[e], n) && ((t[e] = n), !0);
      }
      function jr(t, e, n, i) {
        const s = ie();
        return (
          Dr(s, pe(), e) &&
            (se(),
            (function (t, e, n, i, s, r) {
              const o = $t(t, e),
                a = e[11];
              if (null == i) Bt(a) ? a.removeAttribute(o, n, r) : o.removeAttribute(n);
              else {
                const e = null == s ? Ke(i) : s(i, t.tagName || '', n);
                Bt(a) ? a.setAttribute(o, n, e, r) : r ? o.setAttributeNS(r, n, e) : o.setAttribute(n, e);
              }
            })(Te(), s, t, e, n, i)),
          jr
        );
      }
      function Lr(t, e, n, i) {
        return Dr(t, pe(), n) ? e + Ke(n) + i : ki;
      }
      function Mr(t, e, n, i, s, r, o, a) {
        const l = ie(),
          c = se(),
          u = t + 20,
          h = c.firstCreatePass
            ? (function (t, e, n, i, s, r, o, a, l) {
                const c = e.consts,
                  u = Ui(e, n[6], t, 0, o || null, Xt(c, a));
                es(e, n, u, Xt(c, l)), Pe(e, u);
                const h = (u.tViews = Gi(2, -1, i, s, r, e.directiveRegistry, e.pipeRegistry, null, e.schemas, c)),
                  d = Xi(0, null, 2, -1, null, null);
                return (
                  (d.injectorIndex = u.injectorIndex),
                  (h.node = d),
                  null !== e.queries && (e.queries.template(e, u), (h.queries = e.queries.embeddedTView(u))),
                  u
                );
              })(t, c, l, e, n, i, s, r, o)
            : c.data[u];
        ae(h, !1);
        const d = l[11].createComment('');
        Us(c, l, d, h), di(d, l), gs(l, (l[u] = ps(d, l, d, h))), Mt(h) && Ki(c, l, h), null != o && Qi(l, h, a);
      }
      function Nr(t) {
        return Wt(ee.lFrame.contextLView, t);
      }
      function Fr(t, e = m.Default) {
        const n = ie();
        return null == n ? et(t, e) : ln(oe(), n, R(t), e);
      }
      function Vr(t) {
        return (function (t, e) {
          if ('class' === e) return t.classes;
          if ('style' === e) return t.styles;
          const n = t.attrs;
          if (n) {
            const t = n.length;
            let i = 0;
            for (; i < t; ) {
              const s = n[i];
              if (He(s)) break;
              if (0 === s) i += 2;
              else if ('number' == typeof s) for (i++; i < t && 'string' == typeof n[i]; ) i++;
              else {
                if (s === e) return n[i + 1];
                i += 2;
              }
            }
          }
          return null;
        })(oe(), t);
      }
      function Hr() {
        throw new Error('invalid');
      }
      function Br(t, e, n) {
        const i = ie();
        return Dr(i, pe(), e) && ts(se(), Te(), i, t, e, i[11], n, !1), Br;
      }
      function Ur(t, e, n, i, s) {
        const r = s ? 'class' : 'style';
        ks(t, n, e.inputs[r], r, i);
      }
      function zr(t, e, n, i) {
        const s = ie(),
          r = se(),
          o = 20 + t,
          a = s[11],
          l = (s[o] = Hi(e, a, ee.lFrame.currentNamespace)),
          c = r.firstCreatePass
            ? (function (t, e, n, i, s, r, o) {
                const a = e.consts,
                  l = Xt(a, r),
                  c = Ui(e, n[6], t, 3, s, l);
                return (
                  es(e, n, c, Xt(a, o)),
                  null !== c.attrs && Er(c, c.attrs, !1),
                  null !== c.mergedAttrs && Er(c, c.mergedAttrs, !0),
                  null !== e.queries && e.queries.elementStart(e, c),
                  c
                );
              })(t, r, s, 0, e, n, i)
            : r.data[o];
        ae(c, !0);
        const u = c.mergedAttrs;
        null !== u && Ve(a, l, u);
        const h = c.classes;
        null !== h && Ks(a, l, h);
        const d = c.styles;
        null !== d && Ws(a, l, d),
          Us(r, s, l, c),
          0 === ee.lFrame.elementDepthCount && di(l, s),
          ee.lFrame.elementDepthCount++,
          Mt(c) && (Ki(r, s, c), Wi(r, c, s)),
          null !== i && Qi(s, c);
      }
      function Yr() {
        let t = oe();
        le() ? ce() : ((t = t.parent), ae(t, !1));
        const e = t;
        ee.lFrame.elementDepthCount--;
        const n = se();
        n.firstCreatePass && (Pe(n, t), jt(t) && n.queries.elementEnd(t)),
          null != e.classesWithoutHost &&
            (function (t) {
              return 0 != (16 & t.flags);
            })(e) &&
            Ur(n, e, ie(), e.classesWithoutHost, !0),
          null != e.stylesWithoutHost &&
            (function (t) {
              return 0 != (32 & t.flags);
            })(e) &&
            Ur(n, e, ie(), e.stylesWithoutHost, !1);
      }
      function $r(t, e, n, i) {
        zr(t, e, n, i), Yr();
      }
      function qr(t, e, n) {
        const i = ie(),
          s = se(),
          r = t + 20,
          o = s.firstCreatePass
            ? (function (t, e, n, i, s) {
                const r = e.consts,
                  o = Xt(r, i),
                  a = Ui(e, n[6], t, 4, 'ng-container', o);
                return (
                  null !== o && Er(a, o, !0),
                  es(e, n, a, Xt(r, s)),
                  null !== e.queries && e.queries.elementStart(e, a),
                  a
                );
              })(t, s, i, e, n)
            : s.data[r];
        ae(o, !0);
        const a = (i[r] = i[11].createComment(''));
        Us(s, i, a, o), di(a, i), Mt(o) && (Ki(s, i, o), Wi(s, o, i)), null != n && Qi(i, o);
      }
      function Wr() {
        let t = oe();
        const e = se();
        le() ? ce() : ((t = t.parent), ae(t, !1)), e.firstCreatePass && (Pe(e, t), jt(t) && e.queries.elementEnd(t));
      }
      function Kr(t, e, n) {
        qr(t, e, n), Wr();
      }
      function Qr() {
        return ie();
      }
      function Zr(t) {
        return !!t && 'function' == typeof t.then;
      }
      function Gr(t) {
        return !!t && 'function' == typeof t.subscribe;
      }
      function Xr(t, e, n = !1, i) {
        const s = ie(),
          r = se(),
          o = oe();
        return to(r, s, s[11], o, t, e, n, i), Xr;
      }
      function Jr(t, e, n = !1, i) {
        const s = oe(),
          r = ie(),
          o = se();
        return to(o, r, Ss(be(o.data), s, r), s, t, e, n, i), Jr;
      }
      function to(t, e, n, i, s, r, o = !1, a) {
        const l = Mt(i),
          c = t.firstCreatePass && (t.cleanup || (t.cleanup = [])),
          u = xs(e);
        let h = !0;
        if (3 === i.type) {
          const d = $t(i, e),
            p = a ? a(d) : bt,
            m = p.target || d,
            f = u.length,
            g = a ? (t) => a(zt(t[i.index])).target : i.index;
          if (Bt(n)) {
            let o = null;
            if (
              (!a &&
                l &&
                (o = (function (t, e, n, i) {
                  const s = t.cleanup;
                  if (null != s)
                    for (let r = 0; r < s.length - 1; r += 2) {
                      const t = s[r];
                      if (t === n && s[r + 1] === i) {
                        const t = e[7],
                          n = s[r + 2];
                        return t.length > n ? t[n] : null;
                      }
                      'string' == typeof t && (r += 2);
                    }
                  return null;
                })(t, e, s, i.index)),
              null !== o)
            )
              ((o.__ngLastListenerFn__ || o).__ngNextListenerFn__ = r), (o.__ngLastListenerFn__ = r), (h = !1);
            else {
              r = no(i, e, r, !1);
              const t = n.listen(p.name || m, s, r);
              u.push(r, t), c && c.push(s, g, f, f + 1);
            }
          } else (r = no(i, e, r, !0)), m.addEventListener(s, r, o), u.push(r), c && c.push(s, g, f, o);
        }
        const d = i.outputs;
        let p;
        if (h && null !== d && (p = d[s])) {
          const t = p.length;
          if (t)
            for (let n = 0; n < t; n += 2) {
              const t = e[p[n]][p[n + 1]].subscribe(r),
                o = u.length;
              u.push(r, t), c && c.push(s, i.index, o, -(o + 1));
            }
        }
      }
      function eo(t, e, n) {
        try {
          return !1 !== e(n);
        } catch (i) {
          return Es(t, i), !1;
        }
      }
      function no(t, e, n, i) {
        return function s(r) {
          if (r === Function) return n;
          const o = 2 & t.flags ? Kt(t.index, e) : e;
          0 == (32 & e[2]) && bs(o);
          let a = eo(e, n, r),
            l = s.__ngNextListenerFn__;
          for (; l; ) (a = eo(e, l, r) && a), (l = l.__ngNextListenerFn__);
          return i && !1 === a && (r.preventDefault(), (r.returnValue = !1)), a;
        };
      }
      function io(t = 1) {
        return (function (t) {
          return (ee.lFrame.contextLView = (function (t, e) {
            for (; t > 0; ) (e = e[15]), t--;
            return e;
          })(t, ee.lFrame.contextLView))[8];
        })(t);
      }
      function so(t, e) {
        let n = null;
        const i = (function (t) {
          const e = t.attrs;
          if (null != e) {
            const t = e.indexOf(5);
            if (0 == (1 & t)) return e[t + 1];
          }
          return null;
        })(t);
        for (let s = 0; s < e.length; s++) {
          const r = e[s];
          if ('*' !== r) {
            if (null === i ? xi(t, r, !0) : Ci(i, r)) return s;
          } else n = s;
        }
        return n;
      }
      function ro(t) {
        const e = ie()[16][6];
        if (!e.projection) {
          const n = (e.projection = ht(t ? t.length : 1, null)),
            i = n.slice();
          let s = e.child;
          for (; null !== s; ) {
            const e = t ? so(s, t) : 0;
            null !== e && (i[e] ? (i[e].projectionNext = s) : (n[e] = s), (i[e] = s)), (s = s.next);
          }
        }
      }
      function oo(t, e = 0, n) {
        const i = ie(),
          s = se(),
          r = Ui(s, i[6], t, 1, null, n || null);
        null === r.projection && (r.projection = e),
          ce(),
          (function (t, e, n) {
            qs(e[11], 0, e, n, Ms(t, n, e), Bs(n.parent || e[6], e));
          })(s, i, r);
      }
      const ao = [];
      function lo(t, e, n, i, s) {
        const r = t[n + 1],
          o = null === e;
        let a = i ? ji(r) : Mi(r),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const n = t[a + 1];
          co(t[a], e) && ((l = !0), (t[a + 1] = i ? Fi(n) : Li(n))), (a = i ? ji(n) : Mi(n));
        }
        l && (t[n + 1] = i ? Li(r) : Fi(r));
      }
      function co(t, e) {
        return (
          null === t ||
          null == e ||
          (Array.isArray(t) ? t[1] : t) === e ||
          (!(!Array.isArray(t) || 'string' != typeof e) && mt(t, e) >= 0)
        );
      }
      const uo = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function ho(t) {
        return t.substring(uo.key, uo.keyEnd);
      }
      function po(t, e) {
        const n = uo.textEnd;
        return n === e
          ? -1
          : ((e = uo.keyEnd = (function (t, e, n) {
              for (; e < n && t.charCodeAt(e) > 32; ) e++;
              return e;
            })(t, (uo.key = e), n)),
            mo(t, e, n));
      }
      function mo(t, e, n) {
        for (; e < n && t.charCodeAt(e) <= 32; ) e++;
        return e;
      }
      function fo(t, e, n) {
        return _o(t, e, n, !1), fo;
      }
      function go(t, e) {
        return _o(t, e, null, !0), go;
      }
      function bo(t, e) {
        for (
          let n = (function (t) {
            return (
              (function (t) {
                (uo.key = 0), (uo.keyEnd = 0), (uo.value = 0), (uo.valueEnd = 0), (uo.textEnd = t.length);
              })(t),
              po(t, mo(t, 0, uo.textEnd))
            );
          })(e);
          n >= 0;
          n = po(e, n)
        )
          dt(t, ho(e), !0);
      }
      function _o(t, e, n, i) {
        const s = ie(),
          r = se(),
          o = me(2);
        if ((r.firstUpdatePass && vo(r, t, o, i), e !== ki && Dr(s, o, e))) {
          let a;
          null == n &&
            (a = (function () {
              const t = ee.lFrame;
              return null === t ? null : t.currentSanitizer;
            })()) &&
            (n = a),
            Co(
              r,
              r.data[Oe() + 20],
              s,
              s[11],
              t,
              (s[o + 1] = (function (t, e) {
                return (
                  null == t ||
                    ('function' == typeof e
                      ? (t = e(t))
                      : 'string' == typeof e
                      ? (t += e)
                      : 'object' == typeof t && (t = O(On(t)))),
                  t
                );
              })(e, n)),
              i,
              o
            );
        }
      }
      function yo(t, e) {
        return e >= t.expandoStartIndex;
      }
      function vo(t, e, n, i) {
        const s = t.data;
        if (null === s[n + 1]) {
          const r = s[Oe() + 20],
            o = yo(t, n);
          ko(r, i) && null === e && !o && (e = !1),
            (e = (function (t, e, n, i) {
              const s = be(t);
              let r = i ? e.residualClasses : e.residualStyles;
              if (null === s)
                0 === (i ? e.classBindings : e.styleBindings) &&
                  ((n = xo((n = wo(null, t, e, n, i)), e.attrs, i)), (r = null));
              else {
                const o = e.directiveStylingLast;
                if (-1 === o || t[o] !== s)
                  if (((n = wo(s, t, e, n, i)), null === r)) {
                    let n = (function (t, e, n) {
                      const i = n ? e.classBindings : e.styleBindings;
                      if (0 !== Mi(i)) return t[ji(i)];
                    })(t, e, i);
                    void 0 !== n &&
                      Array.isArray(n) &&
                      ((n = wo(null, t, e, n[1], i)),
                      (n = xo(n, e.attrs, i)),
                      (function (t, e, n, i) {
                        t[ji(n ? e.classBindings : e.styleBindings)] = i;
                      })(t, e, i, n));
                  } else
                    r = (function (t, e, n) {
                      let i = void 0;
                      const s = e.directiveEnd;
                      for (let r = 1 + e.directiveStylingLast; r < s; r++) i = xo(i, t[r].hostAttrs, n);
                      return xo(i, e.attrs, n);
                    })(t, e, i);
              }
              return void 0 !== r && (i ? (e.residualClasses = r) : (e.residualStyles = r)), n;
            })(s, r, e, i)),
            (function (t, e, n, i, s, r) {
              let o = r ? e.classBindings : e.styleBindings,
                a = ji(o),
                l = Mi(o);
              t[i] = n;
              let c,
                u = !1;
              if (Array.isArray(n)) {
                const t = n;
                (c = t[1]), (null === c || mt(t, c) > 0) && (u = !0);
              } else c = n;
              if (s)
                if (0 !== l) {
                  const e = ji(t[a + 1]);
                  (t[i + 1] = Di(e, a)),
                    0 !== e && (t[e + 1] = Ni(t[e + 1], i)),
                    (t[a + 1] = (131071 & t[a + 1]) | (i << 17));
                } else (t[i + 1] = Di(a, 0)), 0 !== a && (t[a + 1] = Ni(t[a + 1], i)), (a = i);
              else (t[i + 1] = Di(l, 0)), 0 === a ? (a = i) : (t[l + 1] = Ni(t[l + 1], i)), (l = i);
              u && (t[i + 1] = Li(t[i + 1])),
                lo(t, c, i, !0),
                lo(t, c, i, !1),
                (function (t, e, n, i, s) {
                  const r = s ? t.residualClasses : t.residualStyles;
                  null != r && 'string' == typeof e && mt(r, e) >= 0 && (n[i + 1] = Fi(n[i + 1]));
                })(e, c, t, i, r),
                (o = Di(a, l)),
                r ? (e.classBindings = o) : (e.styleBindings = o);
            })(s, r, e, n, o, i);
        }
      }
      function wo(t, e, n, i, s) {
        let r = null;
        const o = n.directiveEnd;
        let a = n.directiveStylingLast;
        for (-1 === a ? (a = n.directiveStart) : a++; a < o && ((r = e[a]), (i = xo(i, r.hostAttrs, s)), r !== t); )
          a++;
        return null !== t && (n.directiveStylingLast = a), i;
      }
      function xo(t, e, n) {
        const i = n ? 1 : 2;
        let s = -1;
        if (null !== e)
          for (let r = 0; r < e.length; r++) {
            const o = e[r];
            'number' == typeof o
              ? (s = o)
              : s === i && (Array.isArray(t) || (t = void 0 === t ? [] : ['', t]), dt(t, o, !!n || e[++r]));
          }
        return void 0 === t ? null : t;
      }
      function Co(t, e, n, i, s, r, o, a) {
        if (3 !== e.type) return;
        const l = t.data,
          c = l[a + 1];
        Eo(1 == (1 & c) ? So(l, e, n, s, Mi(c), o) : void 0) ||
          (Eo(r) ||
            ((function (t) {
              return 2 == (2 & t);
            })(c) &&
              (r = So(l, null, n, s, a, o))),
          (function (t, e, n, i, s) {
            const r = Bt(t);
            if (e) s ? (r ? t.addClass(n, i) : n.classList.add(i)) : r ? t.removeClass(n, i) : n.classList.remove(i);
            else {
              const e = -1 == i.indexOf('-') ? void 0 : 2;
              null == s
                ? r
                  ? t.removeStyle(n, i, e)
                  : n.style.removeProperty(i)
                : r
                ? t.setStyle(n, i, s, e)
                : n.style.setProperty(i, s);
            }
          })(i, o, Yt(Oe(), n), s, r));
      }
      function So(t, e, n, i, s, r) {
        const o = null === e;
        let a = void 0;
        for (; s > 0; ) {
          const e = t[s],
            r = Array.isArray(e),
            l = r ? e[1] : e,
            c = null === l;
          let u = n[s + 1];
          u === ki && (u = c ? ao : void 0);
          let h = c ? pt(u, i) : l === i ? u : void 0;
          if ((r && !Eo(h) && (h = pt(e, i)), Eo(h) && ((a = h), o))) return a;
          const d = t[s + 1];
          s = o ? ji(d) : Mi(d);
        }
        if (null !== e) {
          let t = r ? e.residualClasses : e.residualStyles;
          null != t && (a = pt(t, i));
        }
        return a;
      }
      function Eo(t) {
        return void 0 !== t;
      }
      function ko(t, e) {
        return 0 != (t.flags & (e ? 16 : 32));
      }
      function Oo(t, e = '') {
        const n = ie(),
          i = se(),
          s = t + 20,
          r = i.firstCreatePass ? Ui(i, n[6], t, 3, null, null) : i.data[s],
          o = (n[s] = (function (t, e) {
            return Bt(e) ? e.createText(t) : e.createTextNode(t);
          })(e, n[11]));
        Us(i, n, o, r), ae(r, !1);
      }
      function Ao(t) {
        return To('', t, ''), Ao;
      }
      function To(t, e, n) {
        const i = ie(),
          s = Lr(i, t, e, n);
        return (
          s !== ki &&
            (function (t, e, n) {
              const i = Yt(e, t),
                s = t[11];
              Bt(s) ? s.setValue(i, n) : (i.textContent = n);
            })(i, Oe(), s),
          To
        );
      }
      function Io(t, e, n) {
        !(function (t, e, n, i) {
          const s = se(),
            r = me(2);
          s.firstUpdatePass && vo(s, null, r, !0);
          const o = ie();
          if (n !== ki && Dr(o, r, n)) {
            const i = s.data[Oe() + 20];
            if (ko(i, !0) && !yo(s, r)) {
              let t = i.classesWithoutHost;
              null !== t && (n = A(t, n || '')), Ur(s, i, o, n, !0);
            } else
              !(function (t, e, n, i, s, r, o, a) {
                s === ki && (s = ao);
                let l = 0,
                  c = 0,
                  u = 0 < s.length ? s[0] : null,
                  h = 0 < r.length ? r[0] : null;
                for (; null !== u || null !== h; ) {
                  const o = l < s.length ? s[l + 1] : void 0,
                    d = c < r.length ? r[c + 1] : void 0;
                  let p = null,
                    m = void 0;
                  u === h
                    ? ((l += 2), (c += 2), o !== d && ((p = h), (m = d)))
                    : null === h || (null !== u && u < h)
                    ? ((l += 2), (p = u))
                    : ((c += 2), (p = h), (m = d)),
                    null !== p && Co(t, e, n, i, p, m, !0, a),
                    (u = l < s.length ? s[l] : null),
                    (h = c < r.length ? r[c] : null);
                }
              })(
                s,
                i,
                o,
                o[11],
                o[r + 1],
                (o[r + 1] = (function (t, e, n) {
                  if (null == n || '' === n) return ao;
                  const i = [],
                    s = On(n);
                  if (Array.isArray(s)) for (let r = 0; r < s.length; r++) t(i, s[r], !0);
                  else if ('object' == typeof s) for (const r in s) s.hasOwnProperty(r) && t(i, r, s[r]);
                  else 'string' == typeof s && e(i, s);
                  return i;
                })(t, e, n)),
                0,
                r
              );
          }
        })(dt, bo, Lr(ie(), t, e, n));
      }
      function Ro(t, e, n) {
        const i = ie();
        return Dr(i, pe(), e) && ts(se(), Te(), i, t, e, i[11], n, !0), Ro;
      }
      function Po(t, e, n) {
        const i = ie();
        if (Dr(i, pe(), e)) {
          const s = se(),
            r = Te();
          ts(s, r, i, t, e, Ss(be(s.data), r, i), n, !0);
        }
        return Po;
      }
      function Do(t, e) {
        const n = Qt(t)[1],
          i = n.data.length - 1;
        Pe(n, { directiveStart: i, directiveEnd: i + 1 });
      }
      function jo(t) {
        let e = Object.getPrototypeOf(t.type.prototype).constructor,
          n = !0;
        const i = [t];
        for (; e; ) {
          let s = void 0;
          if (Nt(t)) s = e.ɵcmp || e.ɵdir;
          else {
            if (e.ɵcmp) throw new Error('Directives cannot inherit Components');
            s = e.ɵdir;
          }
          if (s) {
            if (n) {
              i.push(s);
              const e = t;
              (e.inputs = Lo(t.inputs)), (e.declaredInputs = Lo(t.declaredInputs)), (e.outputs = Lo(t.outputs));
              const n = s.hostBindings;
              n && Fo(t, n);
              const r = s.viewQuery,
                o = s.contentQueries;
              if (
                (r && Mo(t, r),
                o && No(t, o),
                g(t.inputs, s.inputs),
                g(t.declaredInputs, s.declaredInputs),
                g(t.outputs, s.outputs),
                Nt(s) && s.data.animation)
              ) {
                const e = t.data;
                e.animation = (e.animation || []).concat(s.data.animation);
              }
              (e.afterContentChecked = e.afterContentChecked || s.afterContentChecked),
                (e.afterContentInit = t.afterContentInit || s.afterContentInit),
                (e.afterViewChecked = t.afterViewChecked || s.afterViewChecked),
                (e.afterViewInit = t.afterViewInit || s.afterViewInit),
                (e.doCheck = t.doCheck || s.doCheck),
                (e.onDestroy = t.onDestroy || s.onDestroy),
                (e.onInit = t.onInit || s.onInit);
            }
            const e = s.features;
            if (e)
              for (let i = 0; i < e.length; i++) {
                const s = e[i];
                s && s.ngInherit && s(t), s === jo && (n = !1);
              }
          }
          e = Object.getPrototypeOf(e);
        }
        !(function (t) {
          let e = 0,
            n = null;
          for (let i = t.length - 1; i >= 0; i--) {
            const s = t[i];
            (s.hostVars = e += s.hostVars), (s.hostAttrs = Ue(s.hostAttrs, (n = Ue(n, s.hostAttrs))));
          }
        })(i);
      }
      function Lo(t) {
        return t === bt ? {} : t === _t ? [] : t;
      }
      function Mo(t, e) {
        const n = t.viewQuery;
        t.viewQuery = n
          ? (t, i) => {
              e(t, i), n(t, i);
            }
          : e;
      }
      function No(t, e) {
        const n = t.contentQueries;
        t.contentQueries = n
          ? (t, i, s) => {
              e(t, i, s), n(t, i, s);
            }
          : e;
      }
      function Fo(t, e) {
        const n = t.hostBindings;
        t.hostBindings = n
          ? (t, i) => {
              e(t, i), n(t, i);
            }
          : e;
      }
      class Vo {
        constructor(t, e, n) {
          (this.previousValue = t), (this.currentValue = e), (this.firstChange = n);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Ho(t) {
        t.type.prototype.ngOnChanges &&
          ((t.setInput = Bo),
          (t.onChanges = function () {
            const t = Uo(this),
              e = t && t.current;
            if (e) {
              const n = t.previous;
              if (n === bt) t.previous = e;
              else for (let t in e) n[t] = e[t];
              (t.current = null), this.ngOnChanges(e);
            }
          }));
      }
      function Bo(t, e, n, i) {
        const s =
            Uo(t) ||
            (function (t, e) {
              return (t.__ngSimpleChanges__ = e);
            })(t, { previous: bt, current: null }),
          r = s.current || (s.current = {}),
          o = s.previous,
          a = this.declaredInputs[n],
          l = o[a];
        (r[a] = new Vo(l && l.currentValue, e, o === bt)), (t[i] = e);
      }
      function Uo(t) {
        return t.__ngSimpleChanges__ || null;
      }
      function zo(t, e, n, i, s) {
        if (((t = R(t)), Array.isArray(t))) for (let r = 0; r < t.length; r++) zo(t[r], e, n, i, s);
        else {
          const r = se(),
            o = ie();
          let a = _r(t) ? t : R(t.provide),
            l = fr(t);
          const c = oe(),
            u = 65535 & c.providerIndexes,
            h = c.directiveStart,
            d = c.providerIndexes >> 16;
          if (_r(t) || !t.multi) {
            const i = new Fe(l, s, Fr),
              p = qo(a, e, s ? u : u + d, h);
            -1 === p
              ? (an(nn(c, o), r, a),
                Yo(r, t, e.length),
                e.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                s && (c.providerIndexes += 65536),
                n.push(i),
                o.push(i))
              : ((n[p] = i), (o[p] = i));
          } else {
            const p = qo(a, e, u + d, h),
              m = qo(a, e, u, u + d),
              f = p >= 0 && n[p],
              g = m >= 0 && n[m];
            if ((s && !g) || (!s && !f)) {
              an(nn(c, o), r, a);
              const u = (function (t, e, n, i, s) {
                const r = new Fe(t, n, Fr);
                return (r.multi = []), (r.index = e), (r.componentProviders = 0), $o(r, s, i && !n), r;
              })(s ? Ko : Wo, n.length, s, i, l);
              !s && g && (n[m].providerFactory = u),
                Yo(r, t, e.length, 0),
                e.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                s && (c.providerIndexes += 65536),
                n.push(u),
                o.push(u);
            } else Yo(r, t, p > -1 ? p : m, $o(n[s ? m : p], l, !s && i));
            !s && i && g && n[m].componentProviders++;
          }
        }
      }
      function Yo(t, e, n, i) {
        const s = _r(e);
        if (s || e.useClass) {
          const r = (e.useClass || e).prototype.ngOnDestroy;
          if (r) {
            const o = t.destroyHooks || (t.destroyHooks = []);
            if (!s && e.multi) {
              const t = o.indexOf(n);
              -1 === t ? o.push(n, [i, r]) : o[t + 1].push(i, r);
            } else o.push(n, r);
          }
        }
      }
      function $o(t, e, n) {
        return n && t.componentProviders++, t.multi.push(e) - 1;
      }
      function qo(t, e, n, i) {
        for (let s = n; s < i; s++) if (e[s] === t) return s;
        return -1;
      }
      function Wo(t, e, n, i) {
        return Qo(this.multi, []);
      }
      function Ko(t, e, n, i) {
        const s = this.multi;
        let r;
        if (this.providerFactory) {
          const t = this.providerFactory.componentProviders,
            e = dn(n, n[1], this.providerFactory.index, i);
          (r = e.slice(0, t)), Qo(s, r);
          for (let n = t; n < e.length; n++) r.push(e[n]);
        } else (r = []), Qo(s, r);
        return r;
      }
      function Qo(t, e) {
        for (let n = 0; n < t.length; n++) e.push((0, t[n])());
        return e;
      }
      function Zo(t, e = []) {
        return (n) => {
          n.providersResolver = (n, i) =>
            (function (t, e, n) {
              const i = se();
              if (i.firstCreatePass) {
                const s = Nt(t);
                zo(n, i.data, i.blueprint, s, !0), zo(e, i.data, i.blueprint, s, !1);
              }
            })(n, i ? i(t) : t, e);
        };
      }
      Ho.ngInherit = !0;
      class Go {}
      class Xo {
        resolveComponentFactory(t) {
          throw (function (t) {
            const e = Error(`No component factory found for ${O(t)}. Did you add it to @NgModule.entryComponents?`);
            return (e.ngComponent = t), e;
          })(t);
        }
      }
      let Jo = (() => {
          class t {}
          return (t.NULL = new Xo()), t;
        })(),
        ta = (() => {
          class t {
            constructor(t) {
              this.nativeElement = t;
            }
          }
          return (t.__NG_ELEMENT_ID__ = () => ea(t)), t;
        })();
      const ea = function (t) {
        return tr(t, oe(), ie());
      };
      class na {}
      const ia = (function () {
        var t = { Important: 1, DashCase: 2 };
        return (t[t.Important] = 'Important'), (t[t.DashCase] = 'DashCase'), t;
      })();
      let sa = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => ra()), t;
      })();
      const ra = function () {
        const t = ie(),
          e = Kt(oe().index, t);
        return (function (t) {
          const e = t[11];
          if (Bt(e)) return e;
          throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');
        })(Pt(e) ? e : t);
      };
      let oa = (() => {
        class t {}
        return (t.ɵprov = b({ token: t, providedIn: 'root', factory: () => null })), t;
      })();
      class aa {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const la = new aa('9.1.11');
      class ca {
        constructor() {}
        supports(t) {
          return Ir(t);
        }
        create(t) {
          return new ha(t);
        }
      }
      const ua = (t, e) => e;
      class ha {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || ua);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            n = this._removalsHead,
            i = 0,
            s = null;
          for (; e || n; ) {
            const r = !n || (e && e.currentIndex < fa(n, i, s)) ? e : n,
              o = fa(r, i, s),
              a = r.currentIndex;
            if (r === n) i--, (n = n._nextRemoved);
            else if (((e = e._next), null == r.previousIndex)) i++;
            else {
              s || (s = []);
              const t = o - i,
                e = a - i;
              if (t != e) {
                for (let n = 0; n < t; n++) {
                  const i = n < s.length ? s[n] : (s[n] = 0),
                    r = i + n;
                  e <= r && r < t && (s[n] = i + 1);
                }
                s[r.previousIndex] = e - t;
              }
            }
            o !== a && t(r, o, a);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (e = this._identityChangesHead; null !== e; e = e._nextIdentityChange) t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !Ir(t)))
            throw new Error(`Error trying to diff '${O(t)}'. Only arrays and iterables are allowed`);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e,
            n,
            i,
            s = this._itHead,
            r = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let e = 0; e < this.length; e++)
              (n = t[e]),
                (i = this._trackByFn(e, n)),
                null !== s && Ar(s.trackById, i)
                  ? (r && (s = this._verifyReinsertion(s, n, i, e)), Ar(s.item, n) || this._addIdentityChange(s, n))
                  : ((s = this._mismatch(s, n, i, e)), (r = !0)),
                (s = s._next);
          } else
            (e = 0),
              (function (t, e) {
                if (Array.isArray(t)) for (let n = 0; n < t.length; n++) e(t[n]);
                else {
                  const n = t[Or()]();
                  let i;
                  for (; !(i = n.next()).done; ) e(i.value);
                }
              })(t, (t) => {
                (i = this._trackByFn(e, t)),
                  null !== s && Ar(s.trackById, i)
                    ? (r && (s = this._verifyReinsertion(s, t, i, e)), Ar(s.item, t) || this._addIdentityChange(s, t))
                    : ((s = this._mismatch(s, t, i, e)), (r = !0)),
                  (s = s._next),
                  e++;
              }),
              (this.length = e);
          return this._truncate(s), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t, e;
            for (t = this._previousItHead = this._itHead; null !== t; t = t._next) t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded) t.previousIndex = t.currentIndex;
            for (this._additionsHead = this._additionsTail = null, t = this._movesHead; null !== t; t = e)
              (t.previousIndex = t.currentIndex), (e = t._nextMoved);
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, n, i) {
          let s;
          return (
            null === t ? (s = this._itTail) : ((s = t._prev), this._remove(t)),
            null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(n, i))
              ? (Ar(t.item, e) || this._addIdentityChange(t, e), this._moveAfter(t, s, i))
              : null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null))
              ? (Ar(t.item, e) || this._addIdentityChange(t, e), this._reinsertAfter(t, s, i))
              : (t = this._addAfter(new da(e, n), s, i)),
            t
          );
        }
        _verifyReinsertion(t, e, n, i) {
          let s = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null);
          return (
            null !== s
              ? (t = this._reinsertAfter(s, t._prev, i))
              : t.currentIndex != i && ((t.currentIndex = i), this._addToMoves(t, i)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail && (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail && (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, n) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const i = t._prevRemoved,
            s = t._nextRemoved;
          return (
            null === i ? (this._removalsHead = s) : (i._nextRemoved = s),
            null === s ? (this._removalsTail = i) : (s._prevRemoved = i),
            this._insertAfter(t, e, n),
            this._addToMoves(t, n),
            t
          );
        }
        _moveAfter(t, e, n) {
          return this._unlink(t), this._insertAfter(t, e, n), this._addToMoves(t, n), t;
        }
        _addAfter(t, e, n) {
          return (
            this._insertAfter(t, e, n),
            (this._additionsTail =
              null === this._additionsTail ? (this._additionsHead = t) : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, n) {
          const i = null === e ? this._itHead : e._next;
          return (
            (t._next = i),
            (t._prev = e),
            null === i ? (this._itTail = t) : (i._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new ma()),
            this._linkedRecords.put(t),
            (t.currentIndex = n),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            n = t._next;
          return null === e ? (this._itHead = n) : (e._next = n), null === n ? (this._itTail = e) : (n._prev = e), t;
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail = null === this._movesTail ? (this._movesHead = t) : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords && (this._unlinkedRecords = new ma()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t), (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail), (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class da {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class pa {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t), (t._nextDup = null), (t._prevDup = null))
            : ((this._tail._nextDup = t), (t._prevDup = this._tail), (t._nextDup = null), (this._tail = t));
        }
        get(t, e) {
          let n;
          for (n = this._head; null !== n; n = n._nextDup)
            if ((null === e || e <= n.currentIndex) && Ar(n.trackById, t)) return n;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            n = t._nextDup;
          return (
            null === e ? (this._head = n) : (e._nextDup = n),
            null === n ? (this._tail = e) : (n._prevDup = e),
            null === this._head
          );
        }
      }
      class ma {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let n = this.map.get(e);
          n || ((n = new pa()), this.map.set(e, n)), n.add(t);
        }
        get(t, e) {
          const n = this.map.get(t);
          return n ? n.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function fa(t, e, n) {
        const i = t.previousIndex;
        if (null === i) return i;
        let s = 0;
        return n && i < n.length && (s = n[i]), i + e + s;
      }
      class ga {
        constructor() {}
        supports(t) {
          return t instanceof Map || Rr(t);
        }
        create() {
          return new ba();
        }
      }
      class ba {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead;
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || Rr(t)))
              throw new Error(`Error trying to diff '${O(t)}'. Only maps and objects are allowed`);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (t, n) => {
              if (e && e.key === n) this._maybeAddToChanges(e, t), (this._appendAfter = e), (e = e._next);
              else {
                const i = this._getOrCreateRecordForKey(n, t);
                e = this._insertBeforeOrAppend(e, i);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let t = e; null !== t; t = t._nextRemoved)
              t === this._mapHead && (this._mapHead = null),
                this._records.delete(t.key),
                (t._nextRemoved = t._next),
                (t.previousValue = t.currentValue),
                (t.currentValue = null),
                (t._prev = null),
                (t._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const n = t._prev;
            return (
              (e._next = t),
              (e._prev = n),
              (t._prev = e),
              n && (n._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter ? ((this._appendAfter._next = e), (e._prev = this._appendAfter)) : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const n = this._records.get(t);
            this._maybeAddToChanges(n, e);
            const i = n._prev,
              s = n._next;
            return i && (i._next = s), s && (s._prev = i), (n._next = null), (n._prev = null), n;
          }
          const n = new _a(t);
          return this._records.set(t, n), (n.currentValue = e), this._addToAdditions(n), n;
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (this._previousMapHead = this._mapHead, t = this._previousMapHead; null !== t; t = t._next)
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged) t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded) t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Ar(e, t.currentValue) || ((t.previousValue = t.currentValue), (t.currentValue = e), this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map ? t.forEach(e) : Object.keys(t).forEach((n) => e(t[n], n));
        }
      }
      class _a {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      let ya = (() => {
          class t {
            constructor(t) {
              this.factories = t;
            }
            static create(e, n) {
              if (null != n) {
                const t = n.factories.slice();
                e = e.concat(t);
              }
              return new t(e);
            }
            static extend(e) {
              return {
                provide: t,
                useFactory: (n) => {
                  if (!n) throw new Error('Cannot extend IterableDiffers without a parent injector');
                  return t.create(e, n);
                },
                deps: [[t, new p(), new h()]],
              };
            }
            find(t) {
              const e = this.factories.find((e) => e.supports(t));
              if (null != e) return e;
              throw new Error(
                `Cannot find a differ supporting object '${t}' of type '${((n = t), n.name || typeof n)}'`
              );
              var n;
            }
          }
          return (t.ɵprov = b({ token: t, providedIn: 'root', factory: () => new t([new ca()]) })), t;
        })(),
        va = (() => {
          class t {
            constructor(t) {
              this.factories = t;
            }
            static create(e, n) {
              if (n) {
                const t = n.factories.slice();
                e = e.concat(t);
              }
              return new t(e);
            }
            static extend(e) {
              return {
                provide: t,
                useFactory: (n) => {
                  if (!n) throw new Error('Cannot extend KeyValueDiffers without a parent injector');
                  return t.create(e, n);
                },
                deps: [[t, new p(), new h()]],
              };
            }
            find(t) {
              const e = this.factories.find((e) => e.supports(t));
              if (e) return e;
              throw new Error(`Cannot find a differ supporting object '${t}'`);
            }
          }
          return (t.ɵprov = b({ token: t, providedIn: 'root', factory: () => new t([new ga()]) })), t;
        })();
      const wa = [new ga()],
        xa = new ya([new ca()]),
        Ca = new va(wa);
      let Sa = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => Ea(t, ta)), t;
      })();
      const Ea = function (t, e) {
        return er(t, e, oe(), ie());
      };
      let ka = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => Oa(t, ta)), t;
      })();
      const Oa = function (t, e) {
          return nr(t, e, oe(), ie());
        },
        Aa = {};
      class Ta extends Jo {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = Tt(t);
          return new Pa(e, this.ngModule);
        }
      }
      function Ia(t) {
        const e = [];
        for (let n in t) t.hasOwnProperty(n) && e.push({ propName: t[n], templateName: n });
        return e;
      }
      const Ra = new $('SCHEDULER_TOKEN', { providedIn: 'root', factory: () => Ze });
      class Pa extends Go {
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = t.selectors.map(Ei).join(',')),
            (this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return Ia(this.componentDef.inputs);
        }
        get outputs() {
          return Ia(this.componentDef.outputs);
        }
        create(t, e, n, i) {
          const s = (i = i || this.ngModule)
              ? (function (t, e) {
                  return {
                    get: (n, i, s) => {
                      const r = t.get(n, Aa, s);
                      return r !== Aa || i === Aa ? r : e.get(n, i, s);
                    },
                  };
                })(t, i.injector)
              : t,
            r = s.get(na, Ut),
            o = s.get(oa, null),
            a = r.createRenderer(null, this.componentDef),
            l = this.componentDef.selectors[0][0] || 'div',
            c = n
              ? (function (t, e, n) {
                  if (Bt(t)) return t.selectRootElement(e, n === gt.ShadowDom);
                  let i = 'string' == typeof e ? t.querySelector(e) : e;
                  return (i.textContent = ''), i;
                })(a, n, this.componentDef.encapsulation)
              : Hi(
                  l,
                  r.createRenderer(null, this.componentDef),
                  (function (t) {
                    const e = t.toLowerCase();
                    return 'svg' === e
                      ? 'http://www.w3.org/2000/svg'
                      : 'math' === e
                      ? 'http://www.w3.org/1998/MathML/'
                      : null;
                  })(l)
                ),
            u = this.componentDef.onPush ? 576 : 528,
            h = 'string' == typeof n && /^#root-ng-internal-isolated-\d+/.test(n),
            d = { components: [], scheduler: Ze, clean: ws, playerHandler: null, flags: 0 },
            p = Gi(0, -1, null, 1, 0, null, null, null, null, null),
            m = Bi(null, p, d, u, null, null, r, a, o, s);
          let f, g;
          we(m, null);
          try {
            const t = (function (t, e, n, i, s, r) {
              const o = n[1];
              n[20] = t;
              const a = Ui(o, null, 0, 3, null, null),
                l = (a.mergedAttrs = e.hostAttrs);
              null !== l &&
                (Er(a, l, !0),
                null !== t &&
                  (Ve(s, t, l), null !== a.classes && Ks(s, t, a.classes), null !== a.styles && Ws(s, t, a.styles)));
              const c = i.createRenderer(t, e),
                u = Bi(n, Zi(e), null, e.onPush ? 64 : 16, n[20], a, i, c, void 0);
              return (
                o.firstCreatePass && (an(nn(a, n), o, e.type), os(o, a), ls(a, n.length, 1)), gs(n, u), (n[20] = u)
              );
            })(c, this.componentDef, m, r, a);
            if (c)
              if (n) Ve(a, c, ['ng-version', la.full]);
              else {
                const { attrs: t, classes: e } = (function (t) {
                  const e = [],
                    n = [];
                  let i = 1,
                    s = 2;
                  for (; i < t.length; ) {
                    let r = t[i];
                    if ('string' == typeof r) 2 === s ? '' !== r && e.push(r, t[++i]) : 8 === s && n.push(r);
                    else {
                      if (!vi(s)) break;
                      s = r;
                    }
                    i++;
                  }
                  return { attrs: e, classes: n };
                })(this.componentDef.selectors[0]);
                t && Ve(a, c, t), e && e.length > 0 && Ks(a, c, e.join(' '));
              }
            if (((g = qt(p, 0)), void 0 !== e)) {
              const t = (g.projection = []);
              for (let n = 0; n < this.ngContentSelectors.length; n++) {
                const i = e[n];
                t.push(null != i ? Array.from(i) : null);
              }
            }
            (f = (function (t, e, n, i, s) {
              const r = n[1],
                o = (function (t, e, n) {
                  const i = oe();
                  t.firstCreatePass && (n.providersResolver && n.providersResolver(n), rs(t, i, 1), cs(t, e, n));
                  const s = dn(e, t, e.length - 1, i);
                  di(s, e);
                  const r = $t(i, e);
                  return r && di(r, e), s;
                })(r, n, e);
              i.components.push(o),
                (t[8] = o),
                s && s.forEach((t) => t(o, e)),
                e.contentQueries && e.contentQueries(1, o, n.length - 1);
              const a = oe();
              if (r.firstCreatePass && (null !== e.hostBindings || null !== e.hostAttrs)) {
                Ae(a.index - 20);
                const t = n[1];
                ns(t, e), is(t, n, e.hostVars), ss(e, o);
              }
              return o;
            })(t, this.componentDef, m, d, [Do])),
              zi(p, m, null);
          } finally {
            ke();
          }
          const b = new Da(this.componentType, f, tr(ta, g, m), m, g);
          return (n && !h) || (p.node.child = g), b;
        }
      }
      class Da extends class {} {
        constructor(t, e, n, i, s) {
          super(),
            (this.location = n),
            (this._rootLView = i),
            (this._tNode = s),
            (this.destroyCbs = []),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new Zs(i)),
            (function (t, e, n, i) {
              let s = t.node;
              null == s && (t.node = s = Xi(0, null, 2, -1, null, null)), (i[6] = s);
            })(i[1], 0, 0, i),
            (this.componentType = t);
        }
        get injector() {
          return new fn(this._tNode, this._rootLView);
        }
        destroy() {
          this.destroyCbs &&
            (this.destroyCbs.forEach((t) => t()),
            (this.destroyCbs = null),
            !this.hostView.destroyed && this.hostView.destroy());
        }
        onDestroy(t) {
          this.destroyCbs && this.destroyCbs.push(t);
        }
      }
      const ja = void 0;
      var La = [
        'en',
        [['a', 'p'], ['AM', 'PM'], ja],
        [['AM', 'PM'], ja, ja],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        ja,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        ja,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', ja, "{1} 'at' {0}", ja],
        ['.', ',', ';', '%', '+', '-', 'E', '\xd7', '\u2030', '\u221e', 'NaN', ':'],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function (t) {
          let e = Math.floor(Math.abs(t)),
            n = t.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === e && 0 === n ? 1 : 5;
        },
      ];
      let Ma = {};
      function Na(t, e, n) {
        'string' != typeof e && ((n = e), (e = t[Ua.LocaleId])),
          (e = e.toLowerCase().replace(/_/g, '-')),
          (Ma[e] = t),
          n && (Ma[e][Ua.ExtraData] = n);
      }
      function Fa(t) {
        const e = (function (t) {
          return t.toLowerCase().replace(/_/g, '-');
        })(t);
        let n = Ba(e);
        if (n) return n;
        const i = e.split('-')[0];
        if (((n = Ba(i)), n)) return n;
        if ('en' === i) return La;
        throw new Error(`Missing locale data for the locale "${t}".`);
      }
      function Va(t) {
        return Fa(t)[Ua.CurrencyCode] || null;
      }
      function Ha(t) {
        return Fa(t)[Ua.PluralCase];
      }
      function Ba(t) {
        return t in Ma || (Ma[t] = N.ng && N.ng.common && N.ng.common.locales && N.ng.common.locales[t]), Ma[t];
      }
      const Ua = (function () {
        var t = {
          LocaleId: 0,
          DayPeriodsFormat: 1,
          DayPeriodsStandalone: 2,
          DaysFormat: 3,
          DaysStandalone: 4,
          MonthsFormat: 5,
          MonthsStandalone: 6,
          Eras: 7,
          FirstDayOfWeek: 8,
          WeekendRange: 9,
          DateFormat: 10,
          TimeFormat: 11,
          DateTimeFormat: 12,
          NumberSymbols: 13,
          NumberFormats: 14,
          CurrencyCode: 15,
          CurrencySymbol: 16,
          CurrencyName: 17,
          Currencies: 18,
          Directionality: 19,
          PluralCase: 20,
          ExtraData: 21,
        };
        return (
          (t[t.LocaleId] = 'LocaleId'),
          (t[t.DayPeriodsFormat] = 'DayPeriodsFormat'),
          (t[t.DayPeriodsStandalone] = 'DayPeriodsStandalone'),
          (t[t.DaysFormat] = 'DaysFormat'),
          (t[t.DaysStandalone] = 'DaysStandalone'),
          (t[t.MonthsFormat] = 'MonthsFormat'),
          (t[t.MonthsStandalone] = 'MonthsStandalone'),
          (t[t.Eras] = 'Eras'),
          (t[t.FirstDayOfWeek] = 'FirstDayOfWeek'),
          (t[t.WeekendRange] = 'WeekendRange'),
          (t[t.DateFormat] = 'DateFormat'),
          (t[t.TimeFormat] = 'TimeFormat'),
          (t[t.DateTimeFormat] = 'DateTimeFormat'),
          (t[t.NumberSymbols] = 'NumberSymbols'),
          (t[t.NumberFormats] = 'NumberFormats'),
          (t[t.CurrencyCode] = 'CurrencyCode'),
          (t[t.CurrencySymbol] = 'CurrencySymbol'),
          (t[t.CurrencyName] = 'CurrencyName'),
          (t[t.Currencies] = 'Currencies'),
          (t[t.Directionality] = 'Directionality'),
          (t[t.PluralCase] = 'PluralCase'),
          (t[t.ExtraData] = 'ExtraData'),
          t
        );
      })();
      let za = 'en-US';
      function Ya(t) {
        var e, n;
        (n = 'Expected localeId to be defined'),
          null == (e = t) &&
            (function (t, e, n, i) {
              throw new Error('ASSERTION ERROR: ' + t + ` [Expected=> null != ${e} <=Actual]`);
            })(n, e),
          'string' == typeof t && (za = t.toLowerCase().replace(/_/g, '-'));
      }
      const $a = new Map();
      class qa extends ot {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Ta(this));
          const n = Rt(t),
            i = t[U] || null;
          i && Ya(i),
            (this._bootstrapComponents = Xe(n.bootstrap)),
            (this._r3Injector = dr(
              t,
              e,
              [
                { provide: ot, useValue: this },
                { provide: Jo, useValue: this.componentFactoryResolver },
              ],
              O(t)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(t));
        }
        get(t, e = vr.THROW_IF_NOT_FOUND, n = m.Default) {
          return t === vr || t === ot || t === q ? this : this._r3Injector.get(t, e, n);
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(), this.destroyCbs.forEach((t) => t()), (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class Wa extends at {
        constructor(t) {
          super(),
            (this.moduleType = t),
            null !== Rt(t) &&
              (function t(e) {
                if (null !== e.ɵmod.id) {
                  const t = e.ɵmod.id;
                  (function (t, e, n) {
                    if (e && e !== n) throw new Error(`Duplicate module registered for ${t} - ${O(e)} vs ${O(e.name)}`);
                  })(t, $a.get(t), e),
                    $a.set(t, e);
                }
                let n = e.ɵmod.imports;
                n instanceof Function && (n = n()), n && n.forEach((e) => t(e));
              })(t);
        }
        create(t) {
          return new qa(this.moduleType, t);
        }
      }
      function Ka(t, e, n) {
        const i = de() + t,
          s = ie();
        return s[i] === ki
          ? Pr(s, i, n ? e.call(n) : e())
          : (function (t, e) {
              return t[e];
            })(s, i);
      }
      function Qa(t, e, n, i) {
        return Xa(ie(), de(), t, e, n, i);
      }
      function Za(t, e, n, i, s) {
        return (function (t, e, n, i, s, r, o) {
          const a = e + n;
          return (function (t, e, n, i) {
            const s = Dr(t, e, n);
            return Dr(t, e + 1, i) || s;
          })(t, a, s, r)
            ? Pr(t, a + 2, o ? i.call(o, s, r) : i(s, r))
            : Ga(t, a + 2);
        })(ie(), de(), t, e, n, i, s);
      }
      function Ga(t, e) {
        const n = t[e];
        return n === ki ? void 0 : n;
      }
      function Xa(t, e, n, i, s, r) {
        const o = e + n;
        return Dr(t, o, s) ? Pr(t, o + 1, r ? i.call(r, s) : i(s)) : Ga(t, o + 1);
      }
      function Ja(t, e) {
        const n = se();
        let i;
        const s = t + 20;
        n.firstCreatePass
          ? ((i = (function (t, e) {
              if (e)
                for (let n = e.length - 1; n >= 0; n--) {
                  const i = e[n];
                  if (t === i.name) return i;
                }
              throw new Error(`The pipe '${t}' could not be found!`);
            })(e, n.pipeRegistry)),
            (n.data[s] = i),
            i.onDestroy && (n.destroyHooks || (n.destroyHooks = [])).push(s, i.onDestroy))
          : (i = n.data[s]);
        const r = i.factory || (i.factory = It(i.type)),
          o = J(Fr),
          a = tn(!1),
          l = r();
        return (
          tn(a),
          J(o),
          (function (t, e, n, i) {
            const s = n + 20;
            s >= t.data.length && ((t.data[s] = null), (t.blueprint[s] = null)), (e[s] = i);
          })(n, ie(), t, l),
          l
        );
      }
      function tl(t, e, n) {
        const i = ie(),
          s = Wt(i, t);
        return (function (t, e) {
          return Tr.isWrapped(e) && ((e = Tr.unwrap(e)), (t[ee.lFrame.bindingIndex] = ki)), e;
        })(
          i,
          (function (t, e) {
            return t[1].data[e + 20].pure;
          })(i, t)
            ? Xa(i, de(), e, s.transform, n, s)
            : s.transform(n)
        );
      }
      class el extends i.a {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, n) {
          let i,
            r = (t) => null,
            o = () => null;
          t && 'object' == typeof t
            ? ((i = this.__isAsync
                ? (e) => {
                    setTimeout(() => t.next(e));
                  }
                : (e) => {
                    t.next(e);
                  }),
              t.error &&
                (r = this.__isAsync
                  ? (e) => {
                      setTimeout(() => t.error(e));
                    }
                  : (e) => {
                      t.error(e);
                    }),
              t.complete &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => t.complete());
                    }
                  : () => {
                      t.complete();
                    }))
            : ((i = this.__isAsync
                ? (e) => {
                    setTimeout(() => t(e));
                  }
                : (e) => {
                    t(e);
                  }),
              e &&
                (r = this.__isAsync
                  ? (t) => {
                      setTimeout(() => e(t));
                    }
                  : (t) => {
                      e(t);
                    }),
              n &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => n());
                    }
                  : () => {
                      n();
                    }));
          const a = super.subscribe(i, r, o);
          return t instanceof s.a && t.add(a), a;
        }
      }
      function nl() {
        return this._results[Or()]();
      }
      class il {
        constructor() {
          (this.dirty = !0), (this._results = []), (this.changes = new el()), (this.length = 0);
          const t = Or(),
            e = il.prototype;
          e[t] || (e[t] = nl);
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t) {
          (this._results = (function t(e, n) {
            void 0 === n && (n = e);
            for (let i = 0; i < e.length; i++) {
              let s = e[i];
              Array.isArray(s) ? (n === e && (n = e.slice(0, i)), t(s, n)) : n !== e && n.push(s);
            }
            return n;
          })(t)),
            (this.dirty = !1),
            (this.length = this._results.length),
            (this.last = this._results[this.length - 1]),
            (this.first = this._results[0]);
        }
        notifyOnChanges() {
          this.changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      class sl {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new sl(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class rl {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const n = null !== t.contentQueries ? t.contentQueries[0] : e.length,
              i = [];
            for (let t = 0; t < n; t++) {
              const n = e.getByIndex(t);
              i.push(this.queries[n.indexInDeclarationView].clone());
            }
            return new rl(i);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++) null !== xl(t, e).matches && this.queries[e].setDirty();
        }
      }
      class ol {
        constructor(t, e, n, i = null) {
          (this.predicate = t), (this.descendants = e), (this.isStatic = n), (this.read = i);
        }
      }
      class al {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let n = 0; n < this.queries.length; n++) this.queries[n].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++) this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let n = 0; n < this.length; n++) {
            const i = null !== e ? e.length : 0,
              s = this.getByIndex(n).embeddedTView(t, i);
            s && ((s.indexInDeclarationView = n), null !== e ? e.push(s) : (e = [s]));
          }
          return null !== e ? new al(e) : null;
        }
        template(t, e) {
          for (let n = 0; n < this.queries.length; n++) this.queries[n].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class ll {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index && (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0), this.addMatch(-t.index, e), new ll(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && !1 === this.metadata.descendants) {
            const e = this._declarationNodeIndex;
            let n = t.parent;
            for (; null !== n && 4 === n.type && n.index !== e; ) n = n.parent;
            return e === (null !== n ? n.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          if (Array.isArray(this.metadata.predicate)) {
            const n = this.metadata.predicate;
            for (let i = 0; i < n.length; i++) this.matchTNodeWithReadOption(t, e, cl(e, n[i]));
          } else {
            const n = this.metadata.predicate;
            n === Sa
              ? 0 === e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, hn(e, t, n, !1, !1));
          }
        }
        matchTNodeWithReadOption(t, e, n) {
          if (null !== n) {
            const i = this.metadata.read;
            if (null !== i)
              if (i === ta || i === ka || (i === Sa && 0 === e.type)) this.addMatch(e.index, -2);
              else {
                const n = hn(e, t, i, !1, !1);
                null !== n && this.addMatch(e.index, n);
              }
            else this.addMatch(e.index, n);
          }
        }
        addMatch(t, e) {
          null === this.matches ? (this.matches = [t, e]) : this.matches.push(t, e);
        }
      }
      function cl(t, e) {
        const n = t.localNames;
        if (null !== n) for (let i = 0; i < n.length; i += 2) if (n[i] === e) return n[i + 1];
        return null;
      }
      function ul(t, e, n, i) {
        return -1 === n
          ? (function (t, e) {
              return 3 === t.type || 4 === t.type ? tr(ta, t, e) : 0 === t.type ? er(Sa, ta, t, e) : null;
            })(e, t)
          : -2 === n
          ? (function (t, e, n) {
              return n === ta ? tr(ta, e, t) : n === Sa ? er(Sa, ta, e, t) : n === ka ? nr(ka, ta, e, t) : void 0;
            })(t, e, i)
          : dn(t, t[1], n, e);
      }
      function hl(t, e, n, i) {
        const s = e[19].queries[i];
        if (null === s.matches) {
          const i = t.data,
            r = n.matches,
            o = [];
          for (let t = 0; t < r.length; t += 2) {
            const s = r[t];
            o.push(s < 0 ? null : ul(e, i[s], r[t + 1], n.metadata.read));
          }
          s.matches = o;
        }
        return s.matches;
      }
      function dl(t) {
        const e = ie(),
          n = se(),
          i = _e();
        ye(i + 1);
        const s = xl(n, i);
        if (t.dirty && Zt(e) === s.metadata.isStatic) {
          if (null === s.matches) t.reset([]);
          else {
            const r = s.crossesNgTemplate
              ? (function t(e, n, i, s) {
                  const r = e.queries.getByIndex(i),
                    o = r.matches;
                  if (null !== o) {
                    const a = hl(e, n, r, i);
                    for (let e = 0; e < o.length; e += 2) {
                      const i = o[e];
                      if (i > 0) s.push(a[e / 2]);
                      else {
                        const r = o[e + 1],
                          a = n[-i];
                        for (let e = 10; e < a.length; e++) {
                          const n = a[e];
                          n[17] === n[3] && t(n[1], n, r, s);
                        }
                        if (null !== a[9]) {
                          const e = a[9];
                          for (let n = 0; n < e.length; n++) {
                            const i = e[n];
                            t(i[1], i, r, s);
                          }
                        }
                      }
                    }
                  }
                  return s;
                })(n, e, i, [])
              : hl(n, e, s, i);
            t.reset(r), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function pl(t, e, n) {
        fl(se(), ie(), t, e, n, !0);
      }
      function ml(t, e, n) {
        fl(se(), ie(), t, e, n, !1);
      }
      function fl(t, e, n, i, s, r) {
        t.firstCreatePass && (wl(t, new ol(n, i, r, s), -1), r && (t.staticViewQueries = !0)), vl(t, e);
      }
      function gl(t, e, n, i) {
        _l(se(), ie(), e, n, i, !1, oe(), t);
      }
      function bl(t, e, n, i) {
        _l(se(), ie(), e, n, i, !0, oe(), t);
      }
      function _l(t, e, n, i, s, r, o, a) {
        t.firstCreatePass &&
          (wl(t, new ol(n, i, r, s), o.index),
          (function (t, e) {
            const n = t.contentQueries || (t.contentQueries = []);
            e !== (t.contentQueries.length ? n[n.length - 1] : -1) && n.push(t.queries.length - 1, e);
          })(t, a),
          r && (t.staticContentQueries = !0)),
          vl(t, e);
      }
      function yl() {
        return (t = ie()), (e = _e()), t[19].queries[e].queryList;
        var t, e;
      }
      function vl(t, e) {
        const n = new il();
        !(function (t, e, n, i) {
          const s = xs(e);
          s.push(n), t.firstCreatePass && Cs(t).push(i, s.length - 1);
        })(t, e, n, n.destroy),
          null === e[19] && (e[19] = new rl()),
          e[19].queries.push(new sl(n));
      }
      function wl(t, e, n) {
        null === t.queries && (t.queries = new al()), t.queries.track(new ll(e, n));
      }
      function xl(t, e) {
        return t.queries.getByIndex(e);
      }
      function Cl(t, e) {
        return er(Sa, ta, t, e);
      }
      function Sl(t = m.Default) {
        const e = ir(!0);
        if (null != e || t & m.Optional) return e;
        throw new Error('No provider for ChangeDetectorRef!');
      }
      const El = new $('Application Initializer');
      let kl = (() => {
        class t {
          constructor(t) {
            (this.appInits = t),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((t, e) => {
                (this.resolve = t), (this.reject = e);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const t = [],
              e = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let n = 0; n < this.appInits.length; n++) {
                const e = this.appInits[n]();
                Zr(e) && t.push(e);
              }
            Promise.all(t)
              .then(() => {
                e();
              })
              .catch((t) => {
                this.reject(t);
              }),
              0 === t.length && e(),
              (this.initialized = !0);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(et(El, 8));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Ol = new $('AppId'),
        Al = {
          provide: Ol,
          useFactory: function () {
            return `${Tl()}${Tl()}${Tl()}`;
          },
          deps: [],
        };
      function Tl() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Il = new $('Platform Initializer'),
        Rl = new $('Platform ID'),
        Pl = new $('appBootstrapListener');
      let Dl = (() => {
        class t {
          log(t) {
            console.log(t);
          }
          warn(t) {
            console.warn(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const jl = new $('LocaleId'),
        Ll = new $('DefaultCurrencyCode');
      class Ml {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      const Nl = function (t) {
          return new Wa(t);
        },
        Fl = Nl,
        Vl = function (t) {
          return Promise.resolve(Nl(t));
        },
        Hl = function (t) {
          const e = Nl(t),
            n = Xe(Rt(t).declarations).reduce((t, e) => {
              const n = Tt(e);
              return n && t.push(new Pa(n)), t;
            }, []);
          return new Ml(e, n);
        },
        Bl = Hl,
        Ul = function (t) {
          return Promise.resolve(Hl(t));
        };
      let zl = (() => {
        class t {
          constructor() {
            (this.compileModuleSync = Fl),
              (this.compileModuleAsync = Vl),
              (this.compileModuleAndAllComponentsSync = Bl),
              (this.compileModuleAndAllComponentsAsync = Ul);
          }
          clearCache() {}
          clearCacheFor(t) {}
          getModuleId(t) {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Yl = new $('compilerOptions'),
        $l = (() => Promise.resolve(0))();
      function ql(t) {
        'undefined' == typeof Zone
          ? $l.then(() => {
              t && t.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', t);
      }
      class Wl {
        constructor({ enableLongStackTrace: t = !1, shouldCoalesceEventChangeDetection: e = !1 }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new el(!1)),
            (this.onMicrotaskEmpty = new el(!1)),
            (this.onStable = new el(!1)),
            (this.onError = new el(!1)),
            'undefined' == typeof Zone)
          )
            throw new Error('In this configuration Angular requires Zone.js');
          Zone.assertZonePatched(),
            (this._nesting = 0),
            (this._outer = this._inner = Zone.current),
            Zone.wtfZoneSpec && (this._inner = this._inner.fork(Zone.wtfZoneSpec)),
            Zone.TaskTrackingZoneSpec && (this._inner = this._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t && Zone.longStackTraceZoneSpec && (this._inner = this._inner.fork(Zone.longStackTraceZoneSpec)),
            (this.shouldCoalesceEventChangeDetection = e),
            (this.lastRequestAnimationFrameId = -1),
            (this.nativeRequestAnimationFrame = (function () {
              let t = N.requestAnimationFrame,
                e = N.cancelAnimationFrame;
              if ('undefined' != typeof Zone && t && e) {
                const n = t[Zone.__symbol__('OriginalDelegate')];
                n && (t = n);
                const i = e[Zone.__symbol__('OriginalDelegate')];
                i && (e = i);
              }
              return { nativeRequestAnimationFrame: t, nativeCancelAnimationFrame: e };
            })().nativeRequestAnimationFrame),
            (function (t) {
              const e =
                !!t.shouldCoalesceEventChangeDetection &&
                t.nativeRequestAnimationFrame &&
                (() => {
                  !(function (t) {
                    -1 === t.lastRequestAnimationFrameId &&
                      ((t.lastRequestAnimationFrameId = t.nativeRequestAnimationFrame.call(N, () => {
                        (t.lastRequestAnimationFrameId = -1), Gl(t), Zl(t);
                      })),
                      Gl(t));
                  })(t);
                });
              t._inner = t._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0, maybeDelayChangeDetection: e },
                onInvokeTask: (n, i, s, r, o, a) => {
                  try {
                    return Xl(t), n.invokeTask(s, r, o, a);
                  } finally {
                    e && 'eventTask' === r.type && e(), Jl(t);
                  }
                },
                onInvoke: (e, n, i, s, r, o, a) => {
                  try {
                    return Xl(t), e.invoke(i, s, r, o, a);
                  } finally {
                    Jl(t);
                  }
                },
                onHasTask: (e, n, i, s) => {
                  e.hasTask(i, s),
                    n === i &&
                      ('microTask' == s.change
                        ? ((t._hasPendingMicrotasks = s.microTask), Gl(t), Zl(t))
                        : 'macroTask' == s.change && (t.hasPendingMacrotasks = s.macroTask));
                },
                onHandleError: (e, n, i, s) => (e.handleError(i, s), t.runOutsideAngular(() => t.onError.emit(s)), !1),
              });
            })(this);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!Wl.isInAngularZone()) throw new Error('Expected to be in Angular Zone, but it is not!');
        }
        static assertNotInAngularZone() {
          if (Wl.isInAngularZone()) throw new Error('Expected to not be in Angular Zone, but it is!');
        }
        run(t, e, n) {
          return this._inner.run(t, e, n);
        }
        runTask(t, e, n, i) {
          const s = this._inner,
            r = s.scheduleEventTask('NgZoneEvent: ' + i, t, Ql, Kl, Kl);
          try {
            return s.runTask(r, e, n);
          } finally {
            s.cancelTask(r);
          }
        }
        runGuarded(t, e, n) {
          return this._inner.runGuarded(t, e, n);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      function Kl() {}
      const Ql = {};
      function Zl(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function Gl(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          (t.shouldCoalesceEventChangeDetection && -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function Xl(t) {
        t._nesting++, t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function Jl(t) {
        t._nesting--, Zl(t);
      }
      class tc {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new el()),
            (this.onMicrotaskEmpty = new el()),
            (this.onStable = new el()),
            (this.onError = new el());
        }
        run(t, e, n) {
          return t.apply(e, n);
        }
        runGuarded(t, e, n) {
          return t.apply(e, n);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, n, i) {
          return t.apply(e, n);
        }
      }
      let ec = (() => {
          class t {
            constructor(t) {
              (this._ngZone = t),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                t.run(() => {
                  this.taskTrackingZone = 'undefined' == typeof Zone ? null : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Wl.assertNotInAngularZone(),
                        ql(() => {
                          (this._isZoneStable = !0), this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (this._pendingCount += 1), (this._didWork = !0), this._pendingCount;
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks;
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                ql(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let t = this._callbacks.pop();
                    clearTimeout(t.timeoutId), t.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let t = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (e) => !e.updateCb || !e.updateCb(t) || (clearTimeout(e.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((t) => ({
                    source: t.source,
                    creationLocation: t.creationLocation,
                    data: t.data,
                  }))
                : [];
            }
            addCallback(t, e, n) {
              let i = -1;
              e &&
                e > 0 &&
                (i = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter((t) => t.timeoutId !== i)),
                    t(this._didWork, this.getPendingTasks());
                }, e)),
                this._callbacks.push({ doneCb: t, timeoutId: i, updateCb: n });
            }
            whenStable(t, e, n) {
              if (n && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?'
                );
              this.addCallback(t, e, n), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(t, e, n) {
              return [];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(et(Wl));
            }),
            (t.ɵprov = b({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        nc = (() => {
          class t {
            constructor() {
              (this._applications = new Map()), oc.addToWindow(this);
            }
            registerApplication(t, e) {
              this._applications.set(t, e);
            }
            unregisterApplication(t) {
              this._applications.delete(t);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(t) {
              return this._applications.get(t) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(t, e = !0) {
              return oc.findTestabilityInTree(this, t, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = b({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      class ic {
        addToWindow(t) {}
        findTestabilityInTree(t, e, n) {
          return null;
        }
      }
      function sc(t) {
        oc = t;
      }
      let rc,
        oc = new ic(),
        ac = function (t, e, n) {
          const i = t.get(Yl, []).concat(e),
            s = new Wa(n);
          if (0 === xr.size) return Promise.resolve(s);
          const r = (function (t) {
            const e = [];
            return t.forEach((t) => t && e.push(...t)), e;
          })(i.map((t) => t.providers));
          if (0 === r.length) return Promise.resolve(s);
          const o = (function () {
              const t = N.ng;
              if (!t || !t.ɵcompilerFacade)
                throw new Error(
                  "Angular JIT compilation failed: '@angular/compiler' not loaded!\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping."
                );
              return t.ɵcompilerFacade;
            })(),
            a = vr.create({ providers: r }).get(o.ResourceLoader);
          return (function (t) {
            const e = [],
              n = new Map();
            function i(t) {
              let e = n.get(t);
              if (!e) {
                const i = ((t) => Promise.resolve(a.get(t)))(t);
                n.set(t, (e = i.then(Sr)));
              }
              return e;
            }
            return (
              xr.forEach((t, n) => {
                const s = [];
                t.templateUrl &&
                  s.push(
                    i(t.templateUrl).then((e) => {
                      t.template = e;
                    })
                  );
                const r = t.styleUrls,
                  o = t.styles || (t.styles = []),
                  a = t.styles.length;
                r &&
                  r.forEach((e, n) => {
                    o.push(''),
                      s.push(
                        i(e).then((i) => {
                          (o[a + n] = i), r.splice(r.indexOf(e), 1), 0 == r.length && (t.styleUrls = void 0);
                        })
                      );
                  });
                const l = Promise.all(s).then(() =>
                  (function (t) {
                    Cr.delete(t);
                  })(n)
                );
                e.push(l);
              }),
              (xr = new Map()),
              Promise.all(e).then(() => {})
            );
          })().then(() => s);
        };
      const lc = new $('AllowMultipleToken');
      class cc {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function uc(t, e, n = []) {
        const i = 'Platform: ' + e,
          s = new $(i);
        return (e = []) => {
          let r = hc();
          if (!r || r.injector.get(lc, !1))
            if (t) t(n.concat(e).concat({ provide: s, useValue: !0 }));
            else {
              const t = n.concat(e).concat({ provide: s, useValue: !0 }, { provide: or, useValue: 'platform' });
              !(function (t) {
                if (rc && !rc.destroyed && !rc.injector.get(lc, !1))
                  throw new Error('There can be only one platform. Destroy the previous one to create a new one.');
                rc = t.get(dc);
                const e = t.get(Il, null);
                e && e.forEach((t) => t());
              })(vr.create({ providers: t, name: i }));
            }
          return (function (t) {
            const e = hc();
            if (!e) throw new Error('No platform exists!');
            if (!e.injector.get(t, null))
              throw new Error('A platform with a different configuration has been created. Please destroy it first.');
            return e;
          })(s);
        };
      }
      function hc() {
        return rc && !rc.destroyed ? rc : null;
      }
      let dc = (() => {
        class t {
          constructor(t) {
            (this._injector = t), (this._modules = []), (this._destroyListeners = []), (this._destroyed = !1);
          }
          bootstrapModuleFactory(t, e) {
            const n = (function (t, e) {
                let n;
                return (
                  (n =
                    'noop' === t
                      ? new tc()
                      : ('zone.js' === t ? void 0 : t) ||
                        new Wl({ enableLongStackTrace: Nn(), shouldCoalesceEventChangeDetection: e })),
                  n
                );
              })(e ? e.ngZone : void 0, (e && e.ngZoneEventCoalescing) || !1),
              i = [{ provide: Wl, useValue: n }];
            return n.run(() => {
              const e = vr.create({ providers: i, parent: this.injector, name: t.moduleType.name }),
                s = t.create(e),
                r = s.injector.get(vn, null);
              if (!r) throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');
              return (
                s.onDestroy(() => fc(this._modules, s)),
                n.runOutsideAngular(() =>
                  n.onError.subscribe({
                    next: (t) => {
                      r.handleError(t);
                    },
                  })
                ),
                (function (t, e, n) {
                  try {
                    const i = n();
                    return Zr(i)
                      ? i.catch((n) => {
                          throw (e.runOutsideAngular(() => t.handleError(n)), n);
                        })
                      : i;
                  } catch (i) {
                    throw (e.runOutsideAngular(() => t.handleError(i)), i);
                  }
                })(r, n, () => {
                  const t = s.injector.get(kl);
                  return (
                    t.runInitializers(),
                    t.donePromise.then(
                      () => (Ya(s.injector.get(jl, 'en-US') || 'en-US'), this._moduleDoBootstrap(s), s)
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(t, e = []) {
            const n = pc({}, e);
            return ac(this.injector, n, t).then((t) => this.bootstrapModuleFactory(t, n));
          }
          _moduleDoBootstrap(t) {
            const e = t.injector.get(mc);
            if (t._bootstrapComponents.length > 0) t._bootstrapComponents.forEach((t) => e.bootstrap(t));
            else {
              if (!t.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${O(
                    t.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
                );
              t.instance.ngDoBootstrap(e);
            }
            this._modules.push(t);
          }
          onDestroy(t) {
            this._destroyListeners.push(t);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Error('The platform has already been destroyed!');
            this._modules.slice().forEach((t) => t.destroy()),
              this._destroyListeners.forEach((t) => t()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(et(vr));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function pc(t, e) {
        return Array.isArray(e) ? e.reduce(pc, t) : Object.assign(Object.assign({}, t), e);
      }
      let mc = (() => {
        class t {
          constructor(t, e, n, i, s, l) {
            (this._zone = t),
              (this._console = e),
              (this._injector = n),
              (this._exceptionHandler = i),
              (this._componentFactoryResolver = s),
              (this._initStatus = l),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._enforceNoNewChanges = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._enforceNoNewChanges = Nn()),
              this._zone.onMicrotaskEmpty.subscribe({
                next: () => {
                  this._zone.run(() => {
                    this.tick();
                  });
                },
              });
            const c = new r.a((t) => {
                (this._stable =
                  this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    t.next(this._stable), t.complete();
                  });
              }),
              u = new r.a((t) => {
                let e;
                this._zone.runOutsideAngular(() => {
                  e = this._zone.onStable.subscribe(() => {
                    Wl.assertNotInAngularZone(),
                      ql(() => {
                        this._stable ||
                          this._zone.hasPendingMacrotasks ||
                          this._zone.hasPendingMicrotasks ||
                          ((this._stable = !0), t.next(!0));
                      });
                  });
                });
                const n = this._zone.onUnstable.subscribe(() => {
                  Wl.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        t.next(!1);
                      }));
                });
                return () => {
                  e.unsubscribe(), n.unsubscribe();
                };
              });
            this.isStable = Object(o.a)(c, u.pipe(Object(a.a)()));
          }
          bootstrap(t, e) {
            if (!this._initStatus.done)
              throw new Error(
                'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.'
              );
            let n;
            (n = t instanceof Go ? t : this._componentFactoryResolver.resolveComponentFactory(t)),
              this.componentTypes.push(n.componentType);
            const i = n.isBoundToModule ? void 0 : this._injector.get(ot),
              s = n.create(vr.NULL, [], e || n.selector, i);
            s.onDestroy(() => {
              this._unloadComponent(s);
            });
            const r = s.injector.get(ec, null);
            return (
              r && s.injector.get(nc).registerApplication(s.location.nativeElement, r),
              this._loadComponent(s),
              Nn() &&
                this._console.log(
                  'Angular is running in the development mode. Call enableProdMode() to enable the production mode.'
                ),
              s
            );
          }
          tick() {
            if (this._runningTick) throw new Error('ApplicationRef.tick is called recursively');
            try {
              this._runningTick = !0;
              for (let t of this._views) t.detectChanges();
              if (this._enforceNoNewChanges) for (let t of this._views) t.checkNoChanges();
            } catch (t) {
              this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(t));
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(t) {
            const e = t;
            this._views.push(e), e.attachToAppRef(this);
          }
          detachView(t) {
            const e = t;
            fc(this._views, e), e.detachFromAppRef();
          }
          _loadComponent(t) {
            this.attachView(t.hostView),
              this.tick(),
              this.components.push(t),
              this._injector
                .get(Pl, [])
                .concat(this._bootstrapListeners)
                .forEach((e) => e(t));
          }
          _unloadComponent(t) {
            this.detachView(t.hostView), fc(this.components, t);
          }
          ngOnDestroy() {
            this._views.slice().forEach((t) => t.destroy());
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(et(Wl), et(Dl), et(vr), et(vn), et(Jo), et(kl));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function fc(t, e) {
        const n = t.indexOf(e);
        n > -1 && t.splice(n, 1);
      }
      class gc {}
      class bc {}
      const _c = { factoryPathPrefix: '', factoryPathSuffix: '.ngfactory' };
      let yc = (() => {
        class t {
          constructor(t, e) {
            (this._compiler = t), (this._config = e || _c);
          }
          load(t) {
            return this.loadAndCompile(t);
          }
          loadAndCompile(t) {
            let [e, i] = t.split('#');
            return (
              void 0 === i && (i = 'default'),
              n('zn8P')(e)
                .then((t) => t[i])
                .then((t) => vc(t, e, i))
                .then((t) => this._compiler.compileModuleAsync(t))
            );
          }
          loadFactory(t) {
            let [e, i] = t.split('#'),
              s = 'NgFactory';
            return (
              void 0 === i && ((i = 'default'), (s = '')),
              n('zn8P')(this._config.factoryPathPrefix + e + this._config.factoryPathSuffix)
                .then((t) => t[i + s])
                .then((t) => vc(t, e, i))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(et(zl), et(bc, 8));
          }),
          (t.ɵprov = b({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function vc(t, e, n) {
        if (!t) throw new Error(`Cannot find '${n}' in '${e}'`);
        return t;
      }
      class wc extends sr {}
      class xc extends wc {}
      const Cc = function (t) {
          return null;
        },
        Sc = uc(null, 'core', [
          { provide: Rl, useValue: 'unknown' },
          { provide: dc, deps: [vr] },
          { provide: nc, deps: [] },
          { provide: Dl, deps: [] },
        ]),
        Ec = [
          { provide: mc, useClass: mc, deps: [Wl, Dl, vr, vn, Jo, kl] },
          {
            provide: Ra,
            deps: [Wl],
            useFactory: function (t) {
              let e = [];
              return (
                t.onStable.subscribe(() => {
                  for (; e.length; ) e.pop()();
                }),
                function (t) {
                  e.push(t);
                }
              );
            },
          },
          { provide: kl, useClass: kl, deps: [[new h(), El]] },
          { provide: zl, useClass: zl, deps: [] },
          Al,
          {
            provide: ya,
            useFactory: function () {
              return xa;
            },
            deps: [],
          },
          {
            provide: va,
            useFactory: function () {
              return Ca;
            },
            deps: [],
          },
          {
            provide: jl,
            useFactory: function (t) {
              return Ya((t = t || ('undefined' != typeof $localize && $localize.locale) || 'en-US')), t;
            },
            deps: [[new u(jl), new h(), new p()]],
          },
          { provide: Ll, useValue: 'USD' },
        ];
      let kc = (() => {
        class t {
          constructor(t) {}
        }
        return (
          (t.ɵmod = St({ type: t })),
          (t.ɵinj = _({
            factory: function (e) {
              return new (e || t)(et(mc));
            },
            providers: Ec,
          })),
          t
        );
      })();
    },
    gRHU: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('2fFW'),
        s = n('NJ4a');
      const r = {
        closed: !0,
        next(t) {},
        error(t) {
          if (i.a.useDeprecatedSynchronousErrorHandling) throw t;
          Object(s.a)(t);
        },
        complete() {},
      };
    },
    jZKg: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return r;
      });
      var i = n('HDdC'),
        s = n('quSY');
      function r(t, e) {
        return new i.a((n) => {
          const i = new s.a();
          let r = 0;
          return (
            i.add(
              e.schedule(function () {
                r !== t.length ? (n.next(t[r++]), n.closed || i.add(this.schedule())) : n.complete();
              })
            ),
            i
          );
        });
      }
    },
    jhN1: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return F;
      }),
        n.d(e, 'b', function () {
          return P;
        }),
        n.d(e, 'c', function () {
          return k;
        }),
        n.d(e, 'd', function () {
          return H;
        }),
        n.d(e, 'e', function () {
          return M;
        }),
        n.d(e, 'f', function () {
          return w;
        });
      var i = n('ofXK'),
        s = n('fXoL');
      class r extends i.v {
        constructor() {
          super();
        }
        supportsDOMEvents() {
          return !0;
        }
      }
      class o extends r {
        static makeCurrent() {
          Object(i.z)(new o());
        }
        getProperty(t, e) {
          return t[e];
        }
        log(t) {
          window.console && window.console.log && window.console.log(t);
        }
        logGroup(t) {
          window.console && window.console.group && window.console.group(t);
        }
        logGroupEnd() {
          window.console && window.console.groupEnd && window.console.groupEnd();
        }
        onAndCancel(t, e, n) {
          return (
            t.addEventListener(e, n, !1),
            () => {
              t.removeEventListener(e, n, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          return t.parentNode && t.parentNode.removeChild(t), t;
        }
        getValue(t) {
          return t.value;
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return 'window' === e ? window : 'document' === e ? t : 'body' === e ? t.body : null;
        }
        getHistory() {
          return window.history;
        }
        getLocation() {
          return window.location;
        }
        getBaseHref(t) {
          const e = l || ((l = document.querySelector('base')), l) ? l.getAttribute('href') : null;
          return null == e
            ? null
            : ((n = e),
              a || (a = document.createElement('a')),
              a.setAttribute('href', n),
              '/' === a.pathname.charAt(0) ? a.pathname : '/' + a.pathname);
          var n;
        }
        resetBaseElement() {
          l = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        performanceNow() {
          return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();
        }
        supportsCookies() {
          return !0;
        }
        getCookie(t) {
          return Object(i.y)(document.cookie, t);
        }
      }
      let a,
        l = null;
      const c = new s.r('TRANSITION_ID'),
        u = [
          {
            provide: s.d,
            useFactory: function (t, e, n) {
              return () => {
                n.get(s.e).donePromise.then(() => {
                  const n = Object(i.x)();
                  Array.prototype.slice
                    .apply(e.querySelectorAll('style[ng-transition]'))
                    .filter((e) => e.getAttribute('ng-transition') === t)
                    .forEach((t) => n.remove(t));
                });
              };
            },
            deps: [c, i.d, s.s],
            multi: !0,
          },
        ];
      class h {
        static init() {
          Object(s.Y)(new h());
        }
        addToWindow(t) {
          (s.qb.getAngularTestability = (e, n = !0) => {
            const i = t.findTestabilityInTree(e, n);
            if (null == i) throw new Error('Could not find testability for element.');
            return i;
          }),
            (s.qb.getAllAngularTestabilities = () => t.getAllTestabilities()),
            (s.qb.getAllAngularRootElements = () => t.getAllRootElements()),
            s.qb.frameworkStabilizers || (s.qb.frameworkStabilizers = []),
            s.qb.frameworkStabilizers.push((t) => {
              const e = s.qb.getAllAngularTestabilities();
              let n = e.length,
                i = !1;
              const r = function (e) {
                (i = i || e), n--, 0 == n && t(i);
              };
              e.forEach(function (t) {
                t.whenStable(r);
              });
            });
        }
        findTestabilityInTree(t, e, n) {
          if (null == e) return null;
          const s = t.getTestability(e);
          return null != s
            ? s
            : n
            ? Object(i.x)().isShadowRoot(e)
              ? this.findTestabilityInTree(t, e.host, !0)
              : this.findTestabilityInTree(t, e.parentElement, !0)
            : null;
        }
      }
      const d = new s.r('EventManagerPlugins');
      let p = (() => {
        class t {
          constructor(t, e) {
            (this._zone = e),
              (this._eventNameToPlugin = new Map()),
              t.forEach((t) => (t.manager = this)),
              (this._plugins = t.slice().reverse());
          }
          addEventListener(t, e, n) {
            return this._findPluginFor(e).addEventListener(t, e, n);
          }
          addGlobalEventListener(t, e, n) {
            return this._findPluginFor(e).addGlobalEventListener(t, e, n);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t) {
            const e = this._eventNameToPlugin.get(t);
            if (e) return e;
            const n = this._plugins;
            for (let i = 0; i < n.length; i++) {
              const e = n[i];
              if (e.supports(t)) return this._eventNameToPlugin.set(t, e), e;
            }
            throw new Error('No event manager plugin found for event ' + t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(d), s.Yb(s.A));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class m {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, n) {
          const s = Object(i.x)().getGlobalEventTarget(this._doc, t);
          if (!s) throw new Error(`Unsupported event target ${s} for event ${e}`);
          return this.addEventListener(s, e, n);
        }
      }
      let f = (() => {
          class t {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(t) {
              const e = new Set();
              t.forEach((t) => {
                this._stylesSet.has(t) || (this._stylesSet.add(t), e.add(t));
              }),
                this.onStylesAdded(e);
            }
            onStylesAdded(t) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        g = (() => {
          class t extends f {
            constructor(t) {
              super(),
                (this._doc = t),
                (this._hostNodes = new Set()),
                (this._styleNodes = new Set()),
                this._hostNodes.add(t.head);
            }
            _addStylesToHost(t, e) {
              t.forEach((t) => {
                const n = this._doc.createElement('style');
                (n.textContent = t), this._styleNodes.add(e.appendChild(n));
              });
            }
            addHost(t) {
              this._addStylesToHost(this._stylesSet, t), this._hostNodes.add(t);
            }
            removeHost(t) {
              this._hostNodes.delete(t);
            }
            onStylesAdded(t) {
              this._hostNodes.forEach((e) => this._addStylesToHost(t, e));
            }
            ngOnDestroy() {
              this._styleNodes.forEach((t) => Object(i.x)().remove(t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(i.d));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const b = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
        },
        _ = /%COMP%/g;
      function y(t, e, n) {
        for (let i = 0; i < e.length; i++) {
          let s = e[i];
          Array.isArray(s) ? y(t, s, n) : ((s = s.replace(_, t)), n.push(s));
        }
        return n;
      }
      function v(t) {
        return (e) => {
          if ('__ngUnwrap__' === e) return t;
          !1 === t(e) && (e.preventDefault(), (e.returnValue = !1));
        };
      }
      let w = (() => {
        class t {
          constructor(t, e, n) {
            (this.eventManager = t),
              (this.sharedStylesHost = e),
              (this.appId = n),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new x(t));
          }
          createRenderer(t, e) {
            if (!t || !e) return this.defaultRenderer;
            switch (e.encapsulation) {
              case s.Q.Emulated: {
                let n = this.rendererByCompId.get(e.id);
                return (
                  n ||
                    ((n = new C(this.eventManager, this.sharedStylesHost, e, this.appId)),
                    this.rendererByCompId.set(e.id, n)),
                  n.applyToHost(t),
                  n
                );
              }
              case s.Q.Native:
              case s.Q.ShadowDom:
                return new S(this.eventManager, this.sharedStylesHost, t, e);
              default:
                if (!this.rendererByCompId.has(e.id)) {
                  const t = y(e.id, e.styles, []);
                  this.sharedStylesHost.addStyles(t), this.rendererByCompId.set(e.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(p), s.Yb(g), s.Yb(s.c));
          }),
          (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class x {
        constructor(t) {
          (this.eventManager = t), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(t, e) {
          return e ? document.createElementNS(b[e] || e, t) : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          t.appendChild(e);
        }
        insertBefore(t, e, n) {
          t && t.insertBefore(e, n);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let n = 'string' == typeof t ? document.querySelector(t) : t;
          if (!n) throw new Error(`The selector "${t}" did not match any elements`);
          return e || (n.textContent = ''), n;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, n, i) {
          if (i) {
            e = i + ':' + e;
            const s = b[i];
            s ? t.setAttributeNS(s, e, n) : t.setAttribute(e, n);
          } else t.setAttribute(e, n);
        }
        removeAttribute(t, e, n) {
          if (n) {
            const i = b[n];
            i ? t.removeAttributeNS(i, e) : t.removeAttribute(`${n}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, n, i) {
          i & s.H.DashCase ? t.style.setProperty(e, n, i & s.H.Important ? 'important' : '') : (t.style[e] = n);
        }
        removeStyle(t, e, n) {
          n & s.H.DashCase ? t.style.removeProperty(e) : (t.style[e] = '');
        }
        setProperty(t, e, n) {
          t[e] = n;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, n) {
          return 'string' == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, v(n))
            : this.eventManager.addEventListener(t, e, v(n));
        }
      }
      class C extends x {
        constructor(t, e, n, i) {
          super(t), (this.component = n);
          const s = y(i + '-' + n.id, n.styles, []);
          e.addStyles(s),
            (this.contentAttr = '_ngcontent-%COMP%'.replace(_, i + '-' + n.id)),
            (this.hostAttr = (function (t) {
              return '_nghost-%COMP%'.replace(_, t);
            })(i + '-' + n.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, '');
        }
        createElement(t, e) {
          const n = super.createElement(t, e);
          return super.setAttribute(n, this.contentAttr, ''), n;
        }
      }
      class S extends x {
        constructor(t, e, n, i) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = n),
            (this.component = i),
            (this.shadowRoot =
              i.encapsulation === s.Q.ShadowDom ? n.attachShadow({ mode: 'open' }) : n.createShadowRoot()),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const r = y(i.id, i.styles, []);
          for (let s = 0; s < r.length; s++) {
            const t = document.createElement('style');
            (t.textContent = r[s]), this.shadowRoot.appendChild(t);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, n) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, n);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)));
        }
      }
      let E = (() => {
          class t extends m {
            constructor(t) {
              super(t);
            }
            supports(t) {
              return !0;
            }
            addEventListener(t, e, n) {
              return t.addEventListener(e, n, !1), () => this.removeEventListener(t, e, n);
            }
            removeEventListener(t, e, n) {
              return t.removeEventListener(e, n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(i.d));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        k = (() => {
          class t {
            constructor() {
              (this.events = []), (this.overrides = {});
            }
            buildHammer(t) {
              const e = new Hammer(t, this.options);
              e.get('pinch').set({ enable: !0 }), e.get('rotate').set({ enable: !0 });
              for (const n in this.overrides) e.get(n).set(this.overrides[n]);
              return e;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const O = ['alt', 'control', 'meta', 'shift'],
        A = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        T = {
          A: '1',
          B: '2',
          C: '3',
          D: '4',
          E: '5',
          F: '6',
          G: '7',
          H: '8',
          I: '9',
          J: '*',
          K: '+',
          M: '-',
          N: '.',
          O: '/',
          '`': '0',
          '\x90': 'NumLock',
        },
        I = { alt: (t) => t.altKey, control: (t) => t.ctrlKey, meta: (t) => t.metaKey, shift: (t) => t.shiftKey };
      let R = (() => {
          class t extends m {
            constructor(t) {
              super(t);
            }
            supports(e) {
              return null != t.parseEventName(e);
            }
            addEventListener(e, n, s) {
              const r = t.parseEventName(n),
                o = t.eventCallback(r.fullKey, s, this.manager.getZone());
              return this.manager.getZone().runOutsideAngular(() => Object(i.x)().onAndCancel(e, r.domEventName, o));
            }
            static parseEventName(e) {
              const n = e.toLowerCase().split('.'),
                i = n.shift();
              if (0 === n.length || ('keydown' !== i && 'keyup' !== i)) return null;
              const s = t._normalizeKey(n.pop());
              let r = '';
              if (
                (O.forEach((t) => {
                  const e = n.indexOf(t);
                  e > -1 && (n.splice(e, 1), (r += t + '.'));
                }),
                (r += s),
                0 != n.length || 0 === s.length)
              )
                return null;
              const o = {};
              return (o.domEventName = i), (o.fullKey = r), o;
            }
            static getEventFullKey(t) {
              let e = '',
                n = (function (t) {
                  let e = t.key;
                  if (null == e) {
                    if (((e = t.keyIdentifier), null == e)) return 'Unidentified';
                    e.startsWith('U+') &&
                      ((e = String.fromCharCode(parseInt(e.substring(2), 16))),
                      3 === t.location && T.hasOwnProperty(e) && (e = T[e]));
                  }
                  return A[e] || e;
                })(t);
              return (
                (n = n.toLowerCase()),
                ' ' === n ? (n = 'space') : '.' === n && (n = 'dot'),
                O.forEach((i) => {
                  i != n && (0, I[i])(t) && (e += i + '.');
                }),
                (e += n),
                e
              );
            }
            static eventCallback(e, n, i) {
              return (s) => {
                t.getEventFullKey(s) === e && i.runGuarded(() => n(s));
              };
            }
            static _normalizeKey(t) {
              switch (t) {
                case 'esc':
                  return 'escape';
                default:
                  return t;
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(s.Yb(i.d));
            }),
            (t.ɵprov = s.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        P = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = Object(s.Kb)({
              factory: function () {
                return Object(s.Yb)(j);
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      function D(t) {
        return new j(t.get(i.d));
      }
      let j = (() => {
        class t extends P {
          constructor(t) {
            super(), (this._doc = t);
          }
          sanitize(t, e) {
            if (null == e) return null;
            switch (t) {
              case s.J.NONE:
                return e;
              case s.J.HTML:
                return Object(s.fb)(e, 'HTML') ? Object(s.yb)(e) : Object(s.cb)(this._doc, String(e));
              case s.J.STYLE:
                return Object(s.fb)(e, 'Style') ? Object(s.yb)(e) : Object(s.db)(e);
              case s.J.SCRIPT:
                if (Object(s.fb)(e, 'Script')) return Object(s.yb)(e);
                throw new Error('unsafe value used in a script context');
              case s.J.URL:
                return Object(s.pb)(e), Object(s.fb)(e, 'URL') ? Object(s.yb)(e) : Object(s.eb)(String(e));
              case s.J.RESOURCE_URL:
                if (Object(s.fb)(e, 'ResourceURL')) return Object(s.yb)(e);
                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');
              default:
                throw new Error(`Unexpected SecurityContext ${t} (see http://g.co/ng/security#xss)`);
            }
          }
          bypassSecurityTrustHtml(t) {
            return Object(s.gb)(t);
          }
          bypassSecurityTrustStyle(t) {
            return Object(s.jb)(t);
          }
          bypassSecurityTrustScript(t) {
            return Object(s.ib)(t);
          }
          bypassSecurityTrustUrl(t) {
            return Object(s.kb)(t);
          }
          bypassSecurityTrustResourceUrl(t) {
            return Object(s.hb)(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(i.d));
          }),
          (t.ɵprov = Object(s.Kb)({
            factory: function () {
              return D(Object(s.Yb)(s.p));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const L = [
          { provide: s.C, useValue: i.w },
          {
            provide: s.D,
            useValue: function () {
              o.makeCurrent(), h.init();
            },
            multi: !0,
          },
          {
            provide: i.d,
            useFactory: function () {
              return Object(s.wb)(document), document;
            },
            deps: [],
          },
        ],
        M = Object(s.S)(s.X, 'browser', L),
        N = [
          [],
          { provide: s.ab, useValue: 'root' },
          {
            provide: s.n,
            useFactory: function () {
              return new s.n();
            },
            deps: [],
          },
          { provide: d, useClass: E, multi: !0, deps: [i.d, s.A, s.C] },
          { provide: d, useClass: R, multi: !0, deps: [i.d] },
          [],
          { provide: w, useClass: w, deps: [p, g, s.c] },
          { provide: s.G, useExisting: w },
          { provide: f, useExisting: g },
          { provide: g, useClass: g, deps: [i.d] },
          { provide: s.N, useClass: s.N, deps: [s.A] },
          { provide: p, useClass: p, deps: [d, s.A] },
          [],
        ];
      let F = (() => {
        class t {
          constructor(t) {
            if (t)
              throw new Error(
                'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
              );
          }
          static withServerTransition(e) {
            return {
              ngModule: t,
              providers: [{ provide: s.c, useValue: e.appId }, { provide: c, useExisting: s.c }, u],
            };
          }
        }
        return (
          (t.ɵmod = s.Mb({ type: t })),
          (t.ɵinj = s.Lb({
            factory: function (e) {
              return new (e || t)(s.Yb(t, 12));
            },
            providers: N,
            imports: [i.c, s.f],
          })),
          t
        );
      })();
      function V() {
        return new H(Object(s.Yb)(i.d));
      }
      let H = (() => {
        class t {
          constructor(t) {
            this._doc = t;
          }
          getTitle() {
            return this._doc.title;
          }
          setTitle(t) {
            this._doc.title = t || '';
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(s.Yb(i.d));
          }),
          (t.ɵprov = Object(s.Kb)({ factory: V, token: t, providedIn: 'root' })),
          t
        );
      })();
      'undefined' != typeof window && window;
    },
    kJWO: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (() => ('function' == typeof Symbol && Symbol.observable) || '@@observable')();
    },
    l7GE: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('7o/Q');
      class s extends i.a {
        notifyNext(t, e, n, i, s) {
          this.destination.next(e);
        }
        notifyError(t, e) {
          this.destination.error(t);
        }
        notifyComplete(t) {
          this.destination.complete();
        }
      }
    },
    lJxs: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      });
      var i = n('7o/Q');
      function s(t, e) {
        return function (n) {
          if ('function' != typeof t) throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
          return n.lift(new r(t, e));
        };
      }
      class r {
        constructor(t, e) {
          (this.project = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new o(t, this.project, this.thisArg));
        }
      }
      class o extends i.a {
        constructor(t, e, n) {
          super(t), (this.project = e), (this.count = 0), (this.thisArg = n || this);
        }
        _next(t) {
          let e;
          try {
            e = this.project.call(this.thisArg, t, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
    },
    mCNh: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return s;
      }),
        n.d(e, 'b', function () {
          return r;
        });
      var i = n('SpAZ');
      function s(...t) {
        return r(t);
      }
      function r(t) {
        return 0 === t.length
          ? i.a
          : 1 === t.length
          ? t[0]
          : function (e) {
              return t.reduce((t, e) => e(t), e);
            };
      }
    },
    n6bG: function (t, e, n) {
      'use strict';
      function i(t) {
        return 'function' == typeof t;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    ngJS: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return i;
      });
      const i = (t) => (e) => {
        for (let n = 0, i = t.length; n < i && !e.closed; n++) e.next(t[n]);
        e.complete();
      };
    },
    ofXK: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return v;
      }),
        n.d(e, 'b', function () {
          return K;
        }),
        n.d(e, 'c', function () {
          return Q;
        }),
        n.d(e, 'd', function () {
          return l;
        }),
        n.d(e, 'e', function () {
          return x;
        }),
        n.d(e, 'f', function () {
          return h;
        }),
        n.d(e, 'g', function () {
          return C;
        }),
        n.d(e, 'h', function () {
          return _;
        }),
        n.d(e, 'i', function () {
          return R;
        }),
        n.d(e, 'j', function () {
          return D;
        }),
        n.d(e, 'k', function () {
          return L;
        }),
        n.d(e, 'l', function () {
          return U;
        }),
        n.d(e, 'm', function () {
          return V;
        }),
        n.d(e, 'n', function () {
          return H;
        }),
        n.d(e, 'o', function () {
          return B;
        }),
        n.d(e, 'p', function () {
          return z;
        }),
        n.d(e, 'q', function () {
          return w;
        }),
        n.d(e, 'r', function () {
          return c;
        }),
        n.d(e, 's', function () {
          return J;
        }),
        n.d(e, 't', function () {
          return G;
        }),
        n.d(e, 'u', function () {
          return X;
        }),
        n.d(e, 'v', function () {
          return a;
        }),
        n.d(e, 'w', function () {
          return Z;
        }),
        n.d(e, 'x', function () {
          return r;
        }),
        n.d(e, 'y', function () {
          return I;
        }),
        n.d(e, 'z', function () {
          return o;
        });
      var i = n('fXoL');
      let s = null;
      function r() {
        return s;
      }
      function o(t) {
        s || (s = t);
      }
      class a {}
      const l = new i.r('DocumentToken');
      let c = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = Object(i.Kb)({ factory: u, token: t, providedIn: 'platform' })),
          t
        );
      })();
      function u() {
        return Object(i.Yb)(d);
      }
      const h = new i.r('Location Initialized');
      let d = (() => {
        class t extends c {
          constructor(t) {
            super(), (this._doc = t), this._init();
          }
          _init() {
            (this.location = r().getLocation()), (this._history = r().getHistory());
          }
          getBaseHrefFromDOM() {
            return r().getBaseHref(this._doc);
          }
          onPopState(t) {
            r().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', t, !1);
          }
          onHashChange(t) {
            r().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', t, !1);
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(t) {
            this.location.pathname = t;
          }
          pushState(t, e, n) {
            p() ? this._history.pushState(t, e, n) : (this.location.hash = n);
          }
          replaceState(t, e, n) {
            p() ? this._history.replaceState(t, e, n) : (this.location.hash = n);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Yb(l));
          }),
          (t.ɵprov = Object(i.Kb)({ factory: m, token: t, providedIn: 'platform' })),
          t
        );
      })();
      function p() {
        return !!window.history.pushState;
      }
      function m() {
        return new d(Object(i.Yb)(l));
      }
      function f(t, e) {
        if (0 == t.length) return e;
        if (0 == e.length) return t;
        let n = 0;
        return (
          t.endsWith('/') && n++, e.startsWith('/') && n++, 2 == n ? t + e.substring(1) : 1 == n ? t + e : t + '/' + e
        );
      }
      function g(t) {
        const e = t.match(/#|\?|$/),
          n = (e && e.index) || t.length;
        return t.slice(0, n - ('/' === t[n - 1] ? 1 : 0)) + t.slice(n);
      }
      function b(t) {
        return t && '?' !== t[0] ? '?' + t : t;
      }
      let _ = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = Object(i.Kb)({ factory: y, token: t, providedIn: 'root' })),
          t
        );
      })();
      function y(t) {
        const e = Object(i.Yb)(l).location;
        return new w(Object(i.Yb)(c), (e && e.origin) || '');
      }
      const v = new i.r('appBaseHref');
      let w = (() => {
          class t extends _ {
            constructor(t, e) {
              if (
                (super(),
                (this._platformLocation = t),
                null == e && (e = this._platformLocation.getBaseHrefFromDOM()),
                null == e)
              )
                throw new Error(
                  'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                );
              this._baseHref = e;
            }
            onPopState(t) {
              this._platformLocation.onPopState(t), this._platformLocation.onHashChange(t);
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(t) {
              return f(this._baseHref, t);
            }
            path(t = !1) {
              const e = this._platformLocation.pathname + b(this._platformLocation.search),
                n = this._platformLocation.hash;
              return n && t ? `${e}${n}` : e;
            }
            pushState(t, e, n, i) {
              const s = this.prepareExternalUrl(n + b(i));
              this._platformLocation.pushState(t, e, s);
            }
            replaceState(t, e, n, i) {
              const s = this.prepareExternalUrl(n + b(i));
              this._platformLocation.replaceState(t, e, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Yb(c), i.Yb(v, 8));
            }),
            (t.ɵprov = i.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        x = (() => {
          class t extends _ {
            constructor(t, e) {
              super(), (this._platformLocation = t), (this._baseHref = ''), null != e && (this._baseHref = e);
            }
            onPopState(t) {
              this._platformLocation.onPopState(t), this._platformLocation.onHashChange(t);
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(t = !1) {
              let e = this._platformLocation.hash;
              return null == e && (e = '#'), e.length > 0 ? e.substring(1) : e;
            }
            prepareExternalUrl(t) {
              const e = f(this._baseHref, t);
              return e.length > 0 ? '#' + e : e;
            }
            pushState(t, e, n, i) {
              let s = this.prepareExternalUrl(n + b(i));
              0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.pushState(t, e, s);
            }
            replaceState(t, e, n, i) {
              let s = this.prepareExternalUrl(n + b(i));
              0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.replaceState(t, e, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Yb(c), i.Yb(v, 8));
            }),
            (t.ɵprov = i.Kb({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        C = (() => {
          class t {
            constructor(t, e) {
              (this._subject = new i.o()), (this._urlChangeListeners = []), (this._platformStrategy = t);
              const n = this._platformStrategy.getBaseHref();
              (this._platformLocation = e),
                (this._baseHref = g(E(n))),
                this._platformStrategy.onPopState((t) => {
                  this._subject.emit({ url: this.path(!0), pop: !0, state: t.state, type: t.type });
                });
            }
            path(t = !1) {
              return this.normalize(this._platformStrategy.path(t));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(t, e = '') {
              return this.path() == this.normalize(t + b(e));
            }
            normalize(e) {
              return t.stripTrailingSlash(
                (function (t, e) {
                  return t && e.startsWith(t) ? e.substring(t.length) : e;
                })(this._baseHref, E(e))
              );
            }
            prepareExternalUrl(t) {
              return t && '/' !== t[0] && (t = '/' + t), this._platformStrategy.prepareExternalUrl(t);
            }
            go(t, e = '', n = null) {
              this._platformStrategy.pushState(n, '', t, e),
                this._notifyUrlChangeListeners(this.prepareExternalUrl(t + b(e)), n);
            }
            replaceState(t, e = '', n = null) {
              this._platformStrategy.replaceState(n, '', t, e),
                this._notifyUrlChangeListeners(this.prepareExternalUrl(t + b(e)), n);
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            onUrlChange(t) {
              this._urlChangeListeners.push(t),
                this.subscribe((t) => {
                  this._notifyUrlChangeListeners(t.url, t.state);
                });
            }
            _notifyUrlChangeListeners(t = '', e) {
              this._urlChangeListeners.forEach((n) => n(t, e));
            }
            subscribe(t, e, n) {
              return this._subject.subscribe({ next: t, error: e, complete: n });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Yb(_), i.Yb(c));
            }),
            (t.normalizeQueryParams = b),
            (t.joinWithSlash = f),
            (t.stripTrailingSlash = g),
            (t.ɵprov = Object(i.Kb)({ factory: S, token: t, providedIn: 'root' })),
            t
          );
        })();
      function S() {
        return new C(Object(i.Yb)(_), Object(i.Yb)(c));
      }
      function E(t) {
        return t.replace(/\/index.html$/, '');
      }
      const k = (function () {
          var t = { Zero: 0, One: 1, Two: 2, Few: 3, Many: 4, Other: 5 };
          return (
            (t[t.Zero] = 'Zero'),
            (t[t.One] = 'One'),
            (t[t.Two] = 'Two'),
            (t[t.Few] = 'Few'),
            (t[t.Many] = 'Many'),
            (t[t.Other] = 'Other'),
            t
          );
        })(),
        O = i.ob;
      class A {}
      let T = (() => {
        class t extends A {
          constructor(t) {
            super(), (this.locale = t);
          }
          getPluralCategory(t, e) {
            switch (O(e || this.locale)(t)) {
              case k.Zero:
                return 'zero';
              case k.One:
                return 'one';
              case k.Two:
                return 'two';
              case k.Few:
                return 'few';
              case k.Many:
                return 'many';
              default:
                return 'other';
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Yb(i.v));
          }),
          (t.ɵprov = i.Kb({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function I(t, e) {
        e = encodeURIComponent(e);
        for (const n of t.split(';')) {
          const t = n.indexOf('='),
            [i, s] = -1 == t ? [n, ''] : [n.slice(0, t), n.slice(t + 1)];
          if (i.trim() === e) return decodeURIComponent(s);
        }
        return null;
      }
      let R = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._iterableDiffers = t),
              (this._keyValueDiffers = e),
              (this._ngEl = n),
              (this._renderer = i),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(t) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses = 'string' == typeof t ? t.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(t) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = 'string' == typeof t ? t.split(/\s+/) : t),
              this._rawClass &&
                (Object(i.rb)(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create())
                  : (this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const t = this._iterableDiffer.diff(this._rawClass);
              t && this._applyIterableChanges(t);
            } else if (this._keyValueDiffer) {
              const t = this._keyValueDiffer.diff(this._rawClass);
              t && this._applyKeyValueChanges(t);
            }
          }
          _applyKeyValueChanges(t) {
            t.forEachAddedItem((t) => this._toggleClass(t.key, t.currentValue)),
              t.forEachChangedItem((t) => this._toggleClass(t.key, t.currentValue)),
              t.forEachRemovedItem((t) => {
                t.previousValue && this._toggleClass(t.key, !1);
              });
          }
          _applyIterableChanges(t) {
            t.forEachAddedItem((t) => {
              if ('string' != typeof t.item)
                throw new Error(
                  'NgClass can only toggle CSS classes expressed as strings, got ' + Object(i.xb)(t.item)
                );
              this._toggleClass(t.item, !0);
            }),
              t.forEachRemovedItem((t) => this._toggleClass(t.item, !1));
          }
          _applyClasses(t) {
            t &&
              (Array.isArray(t) || t instanceof Set
                ? t.forEach((t) => this._toggleClass(t, !0))
                : Object.keys(t).forEach((e) => this._toggleClass(e, !!t[e])));
          }
          _removeClasses(t) {
            t &&
              (Array.isArray(t) || t instanceof Set
                ? t.forEach((t) => this._toggleClass(t, !1))
                : Object.keys(t).forEach((t) => this._toggleClass(t, !1)));
          }
          _toggleClass(t, e) {
            (t = t.trim()) &&
              t.split(/\s+/g).forEach((t) => {
                e
                  ? this._renderer.addClass(this._ngEl.nativeElement, t)
                  : this._renderer.removeClass(this._ngEl.nativeElement, t);
              });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Ob(i.t), i.Ob(i.u), i.Ob(i.l), i.Ob(i.F));
          }),
          (t.ɵdir = i.Jb({
            type: t,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
          })),
          t
        );
      })();
      class P {
        constructor(t, e, n, i) {
          (this.$implicit = t), (this.ngForOf = e), (this.index = n), (this.count = i);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let D = (() => {
        class t {
          constructor(t, e, n) {
            (this._viewContainer = t),
              (this._template = e),
              (this._differs = n),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(t) {
            (this._ngForOf = t), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(t) {
            Object(i.W)() &&
              null != t &&
              'function' != typeof t &&
              console &&
              console.warn &&
              console.warn(
                `trackBy must be a function, but received ${JSON.stringify(
                  t
                )}. See https://angular.io/api/common/NgForOf#change-propagation for more information.`
              ),
              (this._trackByFn = t);
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(t) {
            t && (this._template = t);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const n = this._ngForOf;
              if (!this._differ && n)
                try {
                  this._differ = this._differs.find(n).create(this.ngForTrackBy);
                } catch (e) {
                  throw new Error(
                    `Cannot find a differ supporting object '${n}' of type '${
                      ((t = n), t.name || typeof t)
                    }'. NgFor only supports binding to Iterables such as Arrays.`
                  );
                }
            }
            var t;
            if (this._differ) {
              const t = this._differ.diff(this._ngForOf);
              t && this._applyChanges(t);
            }
          }
          _applyChanges(t) {
            const e = [];
            t.forEachOperation((t, n, i) => {
              if (null == t.previousIndex) {
                const n = this._viewContainer.createEmbeddedView(
                    this._template,
                    new P(null, this._ngForOf, -1, -1),
                    null === i ? void 0 : i
                  ),
                  s = new j(t, n);
                e.push(s);
              } else if (null == i) this._viewContainer.remove(null === n ? void 0 : n);
              else if (null !== n) {
                const s = this._viewContainer.get(n);
                this._viewContainer.move(s, i);
                const r = new j(t, s);
                e.push(r);
              }
            });
            for (let n = 0; n < e.length; n++) this._perViewChange(e[n].view, e[n].record);
            for (let n = 0, i = this._viewContainer.length; n < i; n++) {
              const t = this._viewContainer.get(n);
              (t.context.index = n), (t.context.count = i), (t.context.ngForOf = this._ngForOf);
            }
            t.forEachIdentityChange((t) => {
              this._viewContainer.get(t.currentIndex).context.$implicit = t.item;
            });
          }
          _perViewChange(t, e) {
            t.context.$implicit = e.item;
          }
          static ngTemplateContextGuard(t, e) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Ob(i.P), i.Ob(i.M), i.Ob(i.t));
          }),
          (t.ɵdir = i.Jb({
            type: t,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: { ngForOf: 'ngForOf', ngForTrackBy: 'ngForTrackBy', ngForTemplate: 'ngForTemplate' },
          })),
          t
        );
      })();
      class j {
        constructor(t, e) {
          (this.record = t), (this.view = e);
        }
      }
      let L = (() => {
        class t {
          constructor(t, e) {
            (this._viewContainer = t),
              (this._context = new M()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = e);
          }
          set ngIf(t) {
            (this._context.$implicit = this._context.ngIf = t), this._updateView();
          }
          set ngIfThen(t) {
            N('ngIfThen', t), (this._thenTemplateRef = t), (this._thenViewRef = null), this._updateView();
          }
          set ngIfElse(t) {
            N('ngIfElse', t), (this._elseTemplateRef = t), (this._elseViewRef = null), this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context)))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)));
          }
          static ngTemplateContextGuard(t, e) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(i.Ob(i.P), i.Ob(i.M));
          }),
          (t.ɵdir = i.Jb({
            type: t,
            selectors: [['', 'ngIf', '']],
            inputs: { ngIf: 'ngIf', ngIfThen: 'ngIfThen', ngIfElse: 'ngIfElse' },
          })),
          t
        );
      })();
      class M {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function N(t, e) {
        if (e && !e.createEmbeddedView)
          throw new Error(`${t} must be a TemplateRef, but received '${Object(i.xb)(e)}'.`);
      }
      class F {
        constructor(t, e) {
          (this._viewContainerRef = t), (this._templateRef = e), (this._created = !1);
        }
        create() {
          (this._created = !0), this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created ? this.create() : !t && this._created && this.destroy();
        }
      }
      let V = (() => {
          class t {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(t) {
              (this._ngSwitch = t), 0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(t) {
              this._defaultViews || (this._defaultViews = []), this._defaultViews.push(t);
            }
            _matchCase(t) {
              const e = t == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || e),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                e
              );
            }
            _updateDefaultCases(t) {
              if (this._defaultViews && t !== this._defaultUsed) {
                this._defaultUsed = t;
                for (let e = 0; e < this._defaultViews.length; e++) this._defaultViews[e].enforceState(t);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = i.Jb({ type: t, selectors: [['', 'ngSwitch', '']], inputs: { ngSwitch: 'ngSwitch' } })),
            t
          );
        })(),
        H = (() => {
          class t {
            constructor(t, e, n) {
              (this.ngSwitch = n), n._addCase(), (this._view = new F(t, e));
            }
            ngDoCheck() {
              this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Ob(i.P), i.Ob(i.M), i.Ob(V, 1));
            }),
            (t.ɵdir = i.Jb({
              type: t,
              selectors: [['', 'ngSwitchCase', '']],
              inputs: { ngSwitchCase: 'ngSwitchCase' },
            })),
            t
          );
        })(),
        B = (() => {
          class t {
            constructor(t, e, n) {
              n._addDefault(new F(t, e));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Ob(i.P), i.Ob(i.M), i.Ob(V, 1));
            }),
            (t.ɵdir = i.Jb({ type: t, selectors: [['', 'ngSwitchDefault', '']] })),
            t
          );
        })(),
        U = (() => {
          class t {
            constructor(t, e, n) {
              (this._ngEl = t),
                (this._differs = e),
                (this._renderer = n),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(t) {
              (this._ngStyle = t), !this._differ && t && (this._differ = this._differs.find(t).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const t = this._differ.diff(this._ngStyle);
                t && this._applyChanges(t);
              }
            }
            _setStyle(t, e) {
              const [n, i] = t.split('.');
              null != (e = null != e && i ? `${e}${i}` : e)
                ? this._renderer.setStyle(this._ngEl.nativeElement, n, e)
                : this._renderer.removeStyle(this._ngEl.nativeElement, n);
            }
            _applyChanges(t) {
              t.forEachRemovedItem((t) => this._setStyle(t.key, null)),
                t.forEachAddedItem((t) => this._setStyle(t.key, t.currentValue)),
                t.forEachChangedItem((t) => this._setStyle(t.key, t.currentValue));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Ob(i.l), i.Ob(i.u), i.Ob(i.F));
            }),
            (t.ɵdir = i.Jb({ type: t, selectors: [['', 'ngStyle', '']], inputs: { ngStyle: 'ngStyle' } })),
            t
          );
        })(),
        z = (() => {
          class t {
            constructor(t) {
              (this._viewContainerRef = t),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null);
            }
            ngOnChanges(t) {
              if (this._shouldRecreateView(t)) {
                const t = this._viewContainerRef;
                this._viewRef && t.remove(t.indexOf(this._viewRef)),
                  (this._viewRef = this.ngTemplateOutlet
                    ? t.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext)
                    : null);
              } else
                this._viewRef &&
                  this.ngTemplateOutletContext &&
                  this._updateExistingContext(this.ngTemplateOutletContext);
            }
            _shouldRecreateView(t) {
              const e = t.ngTemplateOutletContext;
              return !!t.ngTemplateOutlet || (e && this._hasContextShapeChanged(e));
            }
            _hasContextShapeChanged(t) {
              const e = Object.keys(t.previousValue || {}),
                n = Object.keys(t.currentValue || {});
              if (e.length === n.length) {
                for (let t of n) if (-1 === e.indexOf(t)) return !0;
                return !1;
              }
              return !0;
            }
            _updateExistingContext(t) {
              for (let e of Object.keys(t)) this._viewRef.context[e] = this.ngTemplateOutletContext[e];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.Ob(i.P));
            }),
            (t.ɵdir = i.Jb({
              type: t,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: { ngTemplateOutletContext: 'ngTemplateOutletContext', ngTemplateOutlet: 'ngTemplateOutlet' },
              features: [i.Ab],
            })),
            t
          );
        })();
      class Y {
        createSubscription(t, e) {
          return t.subscribe({
            next: e,
            error: (t) => {
              throw t;
            },
          });
        }
        dispose(t) {
          t.unsubscribe();
        }
        onDestroy(t) {
          t.unsubscribe();
        }
      }
      class $ {
        createSubscription(t, e) {
          return t.then(e, (t) => {
            throw t;
          });
        }
        dispose(t) {}
        onDestroy(t) {}
      }
      const q = new $(),
        W = new Y();
      let K = (() => {
          class t {
            constructor(t) {
              (this._ref = t),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null);
            }
            ngOnDestroy() {
              this._subscription && this._dispose();
            }
            transform(t) {
              return this._obj
                ? t !== this._obj
                  ? (this._dispose(), this.transform(t))
                  : Object(i.ub)(this._latestValue, this._latestReturnedValue)
                  ? this._latestReturnedValue
                  : ((this._latestReturnedValue = this._latestValue), i.R.wrap(this._latestValue))
                : (t && this._subscribe(t), (this._latestReturnedValue = this._latestValue), this._latestValue);
            }
            _subscribe(t) {
              (this._obj = t),
                (this._strategy = this._selectStrategy(t)),
                (this._subscription = this._strategy.createSubscription(t, (e) => this._updateLatestValue(t, e)));
            }
            _selectStrategy(e) {
              if (Object(i.tb)(e)) return q;
              if (Object(i.sb)(e)) return W;
              throw ((n = t), Error(`InvalidPipeArgument: '${e}' for pipe '${Object(i.xb)(n)}'`));
              var n;
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(t, e) {
              t === this._obj && ((this._latestValue = e), this._ref.markForCheck());
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(i.ac());
            }),
            (t.ɵpipe = i.Nb({ name: 'async', type: t, pure: !1 })),
            t
          );
        })(),
        Q = (() => {
          class t {}
          return (
            (t.ɵmod = i.Mb({ type: t })),
            (t.ɵinj = i.Lb({
              factory: function (e) {
                return new (e || t)();
              },
              providers: [{ provide: A, useClass: T }],
            })),
            t
          );
        })();
      const Z = 'browser';
      function G(t) {
        return t === Z;
      }
      function X(t) {
        return 'server' === t;
      }
      let J = (() => {
        class t {}
        return (
          (t.ɵprov = Object(i.Kb)({
            token: t,
            providedIn: 'root',
            factory: () => new tt(Object(i.Yb)(l), window, Object(i.Yb)(i.n)),
          })),
          t
        );
      })();
      class tt {
        constructor(t, e, n) {
          (this.document = t), (this.window = e), (this.errorHandler = n), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportScrollRestoration() ? [this.window.scrollX, this.window.scrollY] : [0, 0];
        }
        scrollToPosition(t) {
          this.supportScrollRestoration() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (this.supportScrollRestoration()) {
            t =
              this.window.CSS && this.window.CSS.escape
                ? this.window.CSS.escape(t)
                : t.replace(/(\"|\'\ |:|\.|\[|\]|,|=)/g, '\\$1');
            try {
              const e = this.document.querySelector('#' + t);
              if (e) return void this.scrollToElement(e);
              const n = this.document.querySelector(`[name='${t}']`);
              if (n) return void this.scrollToElement(n);
            } catch (e) {
              this.errorHandler.handleError(e);
            }
          }
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            n = e.left + this.window.pageXOffset,
            i = e.top + this.window.pageYOffset,
            s = this.offset();
          this.window.scrollTo(n - s[0], i - s[1]);
        }
        supportScrollRestoration() {
          try {
            return !!this.window && !!this.window.scrollTo;
          } catch (t) {
            return !1;
          }
        }
      }
    },
    quSY: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return a;
      });
      var i = n('DH7j'),
        s = n('XoHu'),
        r = n('n6bG');
      const o = (() => {
        function t(t) {
          return (
            Error.call(this),
            (this.message = t
              ? `${t.length} errors occurred during unsubscription:\n${t
                  .map((t, e) => `${e + 1}) ${t.toString()}`)
                  .join('\n  ')}`
              : ''),
            (this.name = 'UnsubscriptionError'),
            (this.errors = t),
            this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      let a = (() => {
        class t {
          constructor(t) {
            (this.closed = !1),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              t && (this._unsubscribe = t);
          }
          unsubscribe() {
            let e;
            if (this.closed) return;
            let { _parentOrParents: n, _unsubscribe: a, _subscriptions: c } = this;
            if (((this.closed = !0), (this._parentOrParents = null), (this._subscriptions = null), n instanceof t))
              n.remove(this);
            else if (null !== n) for (let t = 0; t < n.length; ++t) n[t].remove(this);
            if (Object(r.a)(a))
              try {
                a.call(this);
              } catch (u) {
                e = u instanceof o ? l(u.errors) : [u];
              }
            if (Object(i.a)(c)) {
              let t = -1,
                n = c.length;
              for (; ++t < n; ) {
                const n = c[t];
                if (Object(s.a)(n))
                  try {
                    n.unsubscribe();
                  } catch (u) {
                    (e = e || []), u instanceof o ? (e = e.concat(l(u.errors))) : e.push(u);
                  }
              }
            }
            if (e) throw new o(e);
          }
          add(e) {
            let n = e;
            if (!e) return t.EMPTY;
            switch (typeof e) {
              case 'function':
                n = new t(e);
              case 'object':
                if (n === this || n.closed || 'function' != typeof n.unsubscribe) return n;
                if (this.closed) return n.unsubscribe(), n;
                if (!(n instanceof t)) {
                  const e = n;
                  (n = new t()), (n._subscriptions = [e]);
                }
                break;
              default:
                throw new Error('unrecognized teardown ' + e + ' added to Subscription.');
            }
            let { _parentOrParents: i } = n;
            if (null === i) n._parentOrParents = this;
            else if (i instanceof t) {
              if (i === this) return n;
              n._parentOrParents = [i, this];
            } else {
              if (-1 !== i.indexOf(this)) return n;
              i.push(this);
            }
            const s = this._subscriptions;
            return null === s ? (this._subscriptions = [n]) : s.push(n), n;
          }
          remove(t) {
            const e = this._subscriptions;
            if (e) {
              const n = e.indexOf(t);
              -1 !== n && e.splice(n, 1);
            }
          }
        }
        var e;
        return (t.EMPTY = (((e = new t()).closed = !0), e)), t;
      })();
      function l(t) {
        return t.reduce((t, e) => t.concat(e instanceof o ? e.errors : e), []);
      }
    },
    'rB/T': function (t, e, n) {
      'use strict';
      function i(t) {
        for (var n in t) e.hasOwnProperty(n) || (e[n] = t[n]);
      }
      Object.defineProperty(e, '__esModule', { value: !0 }), i(n('LbVS')), i(n('vauT')), i(n('PsNa'));
    },
    vauT: function (t, e, n) {
      'use strict';
      function i() {
        var t = document.querySelectorAll('input, textarea, select');
        return Array.prototype.slice.call(t).map(function (t) {
          var e = t.tagName.toLowerCase(),
            n = t.type,
            i = t.id && 'string' == typeof t.id ? t.id : null,
            s = t.name && 'string' == typeof t.name ? t.name : null,
            r = t.value && 'string' == typeof t.value ? t.value : null,
            o = t.childNodes,
            a = Boolean(t.selected),
            l = { tag: e, type: null, id: i, name: s, value: '', checked: !1, options: [] };
          if ('input' === e || 'textarea' === e) {
            if (((l.type = n), 'input' !== e)) return (l.value = r), l;
            switch (n) {
              case 'checkbox':
              case 'radio':
                return (l.checked = a), (l.value = r), l;
              case 'image':
              case 'button':
              case 'submit':
              case 'reset':
              default:
                return l;
            }
          } else if ('select' === e) {
            var c = Array.prototype.slice.call(o).map(function (t, e) {
              return { value: t.value, selected: Boolean(t.selected) };
            });
            return (l.options = c), l;
          }
          return l;
        });
      }
      function s(t) {
        var e = document.querySelectorAll('input, textarea');
        t.forEach(function (t, n) {
          if ('input' === t.tag || 'textarea' === t.tag)
            if ('input' !== t.tag || ('checkbox' !== t.type && 'radio' !== t.type))
              ('input' !== t.tagName.toLowerCase() ||
                ('image' !== t.type && 'button' !== t.type && 'submit' !== t.type && 'reset' !== t.type)) &&
                (null === t.id && null === t.name
                  ? !t.value.length ||
                    !e[n] ||
                    e[n].tagName.toLowerCase() !== t.tag ||
                    ('textarea' !== t.tag && e[n].getAttribute('type') !== t.type) ||
                    ('string' == typeof e[n].id && e[n].id.length) ||
                    ('string' == typeof e[n].getAttribute('name') && e[n].getAttribute('name').length) ||
                    ((e[n].value = t.value), e[n].dispatchEvent(new CustomEvent('input', { detail: e[n].value })))
                  : ((i =
                      'input' +
                      (null !== t.id ? '#' + t.id : '') +
                      ('input' === t.tag ? '[type="' + t.type + '"]' : '') +
                      (null !== t.name ? '[name="' + t.name + '"]' : '')),
                    (s = document.body.querySelector(i)) &&
                      t.value.length &&
                      ((s.value = t.value), s.dispatchEvent(new CustomEvent('input', { detail: s.value })))));
            else {
              var i =
                'input' +
                (null !== t.id ? '#' + t.id : '') +
                '[type="' +
                t.type +
                '"]' +
                (null !== t.name ? '[name="' + t.name + '"]' : '') +
                '[value="' +
                t.value +
                '"]';
              (s = document.body.querySelector(i)) &&
                Boolean(t.checked) &&
                ((s.checked = 'checked'), s.dispatchEvent(new CustomEvent('input', { detail: s.checked })));
            }
          else if ('select' === t.tag) {
            var s,
              r = null;
            null === t.id && null === t.name
              ? !e[n] ||
                e[n].tagName.toLowerCase() !== t.tag ||
                ('string' == typeof e[n].id && e[n].id.length) ||
                ('string' == typeof e[n].getAttribute('name') && e[n].getAttribute('name').length) ||
                (r = e[n])
              : ((i =
                  'select' + (null !== t.id ? '#' + t.id : '') + (null !== t.name ? '[name="' + t.name + '"]' : '')),
                (s = document.body.querySelector(i)) && (r = s)),
              r &&
                t.options.forEach(function (t, e) {
                  var n = r.querySelector('option[value="' + t.value + '"]');
                  n ||
                    !r.childNodes[e] ||
                    ('string' == typeof r.childNodes[e].value && r.childNodes[e].value.length) ||
                    (n = r.childNodes[e]),
                    n &&
                      t.selected &&
                      ((n.selected = 'selected'), n.dispatchEvent(new CustomEvent('input', { detail: n.selected })));
                });
          }
        });
      }
      Object.defineProperty(e, '__esModule', { value: !0 }),
        (e.__getInputValues = i),
        (e.__setInputValues = s),
        (e.__createInputTransfer = function () {
          var t = i();
          return function () {
            return s(t);
          };
        });
    },
    w1tV: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return m;
      });
      var i = n('XNiG'),
        s = n('HDdC'),
        r = n('7o/Q'),
        o = n('quSY');
      function a() {
        return function (t) {
          return t.lift(new l(t));
        };
      }
      class l {
        constructor(t) {
          this.connectable = t;
        }
        call(t, e) {
          const { connectable: n } = this;
          n._refCount++;
          const i = new c(t, n),
            s = e.subscribe(i);
          return i.closed || (i.connection = n.connect()), s;
        }
      }
      class c extends r.a {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _unsubscribe() {
          const { connectable: t } = this;
          if (!t) return void (this.connection = null);
          this.connectable = null;
          const e = t._refCount;
          if (e <= 0) return void (this.connection = null);
          if (((t._refCount = e - 1), e > 1)) return void (this.connection = null);
          const { connection: n } = this,
            i = t._connection;
          (this.connection = null), !i || (n && i !== n) || i.unsubscribe();
        }
      }
      class u extends s.a {
        constructor(t, e) {
          super(), (this.source = t), (this.subjectFactory = e), (this._refCount = 0), (this._isComplete = !1);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (t && !t.isStopped) || (this._subject = this.subjectFactory()), this._subject;
        }
        connect() {
          let t = this._connection;
          return (
            t ||
              ((this._isComplete = !1),
              (t = this._connection = new o.a()),
              t.add(this.source.subscribe(new d(this.getSubject(), this))),
              t.closed && ((this._connection = null), (t = o.a.EMPTY))),
            t
          );
        }
        refCount() {
          return a()(this);
        }
      }
      const h = (() => {
        const t = u.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: t._subscribe },
          _isComplete: { value: t._isComplete, writable: !0 },
          getSubject: { value: t.getSubject },
          connect: { value: t.connect },
          refCount: { value: t.refCount },
        };
      })();
      class d extends i.b {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _error(t) {
          this._unsubscribe(), super._error(t);
        }
        _complete() {
          (this.connectable._isComplete = !0), this._unsubscribe(), super._complete();
        }
        _unsubscribe() {
          const t = this.connectable;
          if (t) {
            this.connectable = null;
            const e = t._connection;
            (t._refCount = 0), (t._subject = null), (t._connection = null), e && e.unsubscribe();
          }
        }
      }
      function p() {
        return new i.a();
      }
      function m() {
        return (t) => {
          return a()(
            ((e = p),
            function (t) {
              let n;
              n =
                'function' == typeof e
                  ? e
                  : function () {
                      return e;
                    };
              const i = Object.create(t, h);
              return (i.source = t), (i.subjectFactory = n), i;
            })(t)
          );
          var e;
        };
      }
    },
    yCtX: function (t, e, n) {
      'use strict';
      n.d(e, 'a', function () {
        return o;
      });
      var i = n('HDdC'),
        s = n('ngJS'),
        r = n('jZKg');
      function o(t, e) {
        return e ? Object(r.a)(t, e) : new i.a(Object(s.a)(t));
      }
    },
    'z+Ro': function (t, e, n) {
      'use strict';
      function i(t) {
        return t && 'function' == typeof t.schedule;
      }
      n.d(e, 'a', function () {
        return i;
      });
    },
    zUnb: function (t, e, n) {
      'use strict';
      n.r(e),
        function (t) {
          var e = n('fXoL'),
            i = n('AytR'),
            s = n('0QMH'),
            r = n('ZAI4'),
            o = n('jhN1');
          i.a.production && Object(e.T)();
          const a = () => o.e().bootstrapModule(r.a);
          i.a.hmr ? Object(s.a)(t, a) : a().catch((t) => console.error(t));
        }.call(this, n('3UD+')(t));
    },
    zn8P: function (t, e) {
      function n(t) {
        return Promise.resolve().then(function () {
          var e = new Error("Cannot find module '" + t + "'");
          throw ((e.code = 'MODULE_NOT_FOUND'), e);
        });
      }
      (n.keys = function () {
        return [];
      }),
        (n.resolve = n),
        (t.exports = n),
        (n.id = 'zn8P');
    },
  },
  [[0, 0]],
]);
